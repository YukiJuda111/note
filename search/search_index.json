{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u6d59\u6c5f\u5927\u5b6623\u5e74\u79cb\u51ac\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c","text":"<p>\u672c\u4ed3\u5e93\u662f\u6d59\u6c5f\u5927\u5b6623\u5e74\u79cb\u51ac\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u7684\u6559\u5b66\u4ed3\u5e93\uff0c\u5305\u542b\u5728\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u4e0a\u6240\u6709\u7684\u5b9e\u9a8c\u6587\u6863\u548c\u516c\u5f00\u4ee3\u7801\u3002\u4ed3\u5e93\u76ee\u5f55\u7ed3\u6784\uff1a</p> <pre><code>\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 docs/       # \u5b9e\u9a8c\u6587\u6863   \n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 src/        # \u516c\u5f00\u4ee3\u7801\n</code></pre> <p>\u5b9e\u9a8c\u6587\u6863\u5df2\u7ecf\u90e8\u7f72\u5728\u4e86GitHub Pages\u4e0a\uff0c\u65b9\u4fbf\u5927\u5bb6\u9605\u8bfb\u3002</p>"},{"location":"#_1","title":"\u672c\u5730\u6e32\u67d3\u6587\u6863","text":"<p>\u6587\u6863\u91c7\u7528\u4e86 mkdocs-material \u5de5\u5177\u6784\u5efa\u548c\u90e8\u7f72\u3002\u5982\u679c\u60f3\u5728\u672c\u5730\u6e32\u67d3\uff1a</p> <pre><code>$ pip3 install mkdocs-material mkdocs-heti-plugin==0.1.5   # \u5b89\u88c5 mkdocs \u53ca\u63d2\u4ef6\n$ git clone https://github.com/ZJU-SEC/os23fall-stu        # clone \u672c repo\n$ mkdocs serve                                             # \u672c\u5730\u6e32\u67d3\nINFO     -  Building documentation...\nINFO     -  Cleaning site directory\n...\nINFO     -  [11:00:57] Serving on http://127.0.0.1:8000/os23fall-stu/\n</code></pre>"},{"location":"#_2","title":"\u81f4\u8c22","text":"<p>\u611f\u8c22\u4ee5\u4e0b\u5404\u4f4d\u8001\u5e08\u548c\u52a9\u6559\u7684\u8f9b\u52e4\u4ed8\u51fa\uff01</p> <p>\u7533\u6587\u535a\u3001\u5468\u4e9a\u91d1\u3001\u5f90\u91d1\u7131\u3001\u5468\u4fa0\u3001\u7ba1\u7ae0\u8f89\u3001\u5f20\u6587\u9f99\u3001\u5218\u5f3a\u3001\u5b59\u5bb6\u680b\u3001\u5468\u5929\u6631\u3001\u5e84\u963f\u5f97\u3001\u738b\u7428\u3001\u6c88\u97ec\u7acb\u3001\u738b\u661f\u5b87\u3001\u6731\u749f\u68ee\u3001\u8c22\u6d35\u3001\u6f58\u5b50\u66f0\u3001\u6731\u82e5\u51e1\u3001\u5b63\u9ad8\u5f3a\u3001\u90ed\u82e5\u5bb9\u3001\u675c\u4e91\u6f47\u3001\u5434\u9038\u98de\u3001\u674e\u7a0b\u6d69\u3001\u6731\u5bb6\u8fc5\u3001\u738b\u884c\u6977\u3001\u9648\u6de6\u8c6a\u3001\u8d75\u7d2b\u5bb8\u3002</p>"},{"location":"faq/","title":"\u5e38\u89c1\u95ee\u9898\u53ca\u89e3\u7b54","text":"<p>\u9996\u5148\u9700\u8981\u660e\u786e\u7684\u662f\uff0c\u672c\u6b21\u5b9e\u9a8c\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u4e0d\u5e94\u8be5\u7ecf\u7531 Windows \u4e2d\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u8bf7\u76f4\u63a5\u5728 \u865a\u62df\u673a\u6216 Linux \u7269\u7406\u673a \u4e2d\u76f4\u63a5\u5b8c\u6210\u3002</p>"},{"location":"faq/#linux-wsl2-mnt","title":"\u4e3a\u4ec0\u4e48\u6211\u628a Linux \u6e90\u7801\u653e\u5728\u5171\u4eab\u6587\u4ef6\u5939\u6216 wsl2 \u7684 <code>/mnt</code> \u4e0b\u7f16\u8bd1\u4e0d\u51fa\u6765\uff1f","text":"<p>\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cLinux \u5728\u4f7f\u7528 Windows \u4e0a\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u8bf7\u4f7f\u7528 <code>wget</code> \u7b49\u5de5\u5177\u5c06 Linux \u6e90\u7801\u4e0b\u8f7d\u81f3\u5bb9\u5668\u5185\u76ee\u5f55\u800c\u975e\u5171\u4eab\u76ee\u5f55\u6216 <code>/mnt</code> \u76ee\u5f55\u4e0b\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u7136\u540e\u6267\u884c\u7f16\u8bd1\u3002</p>"},{"location":"faq/#qemu-gdb-si","title":"\u4e3a\u4ec0\u4e48 QEMU &amp; GDB \u4f7f\u7528 <code>si</code> \u5355\u6307\u4ee4\u8c03\u8bd5\u9047\u5230\u6a21\u5f0f\u5207\u6362\u65f6\u65e0\u6cd5\u6b63\u5e38\u6267\u884c\uff1f","text":"<p>\u5728\u9047\u5230\u8bf8\u5982 <code>mret</code>, <code>sret</code> \u7b49\u6307\u4ee4\u9020\u6210\u7684\u6a21\u5f0f\u5207\u6362\u65f6\uff0c<code>si</code> \u6307\u4ee4\u4f1a\u5931\u6548\uff0c\u53ef\u80fd\u8868\u73b0\u4e3a\u7a0b\u5e8f\u5f00\u59cb\u4e0d\u505c\u8dd1\uff0c\u5f71\u54cd\u5bf9\u7a0b\u5e8f\u8fd0\u884c\u884c\u4e3a\u7684\u5224\u65ad\u3002</p> <p>\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\u662f\u5728\u7a0b\u5e8f\u9884\u671f\u8df3\u8f6c\u7684\u4f4d\u7f6e\u6253\u4e0a\u65ad\u70b9\uff0c\u65ad\u70b9\u4e0d\u4f1a\u53d7\u5230\u6a21\u5f0f\u5207\u6362\u7684\u5f71\u54cd\uff0c\u6bd4\u5982\uff1a</p> <pre><code>(gdb) i r sepc    \nsepc        0x8000babe\n(gdb) b * 0x8000babe\nBreakpoint 1 at 0x8000babe\n(gdb) si    # \u6216\u8005\u4f7f\u7528 c\nBreakpoint 1, 0x000000008000babe in _never_gonna_give_you_up ()\n...\n</code></pre> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u770b\u5230\u65ad\u70b9\u88ab\u89e6\u53d1\uff0c\u53ef\u4ee5\u7ee7\u7eed\u8c03\u8bd5\u4e86\u3002</p>"},{"location":"faq/#gdb-next-finish","title":"\u4e3a\u4ec0\u4e48\u6211\u4e0d\u80fd\u5728 GDB \u4e2d\u4f7f\u7528 <code>next</code> \u6216\u8005 <code>finish</code> ?","text":"<p>\u8fd9\u4e24\u6761\u547d\u4ee4\u90fd\u4f9d\u8d56\u5728\u5185\u6838\u4e2d\u6dfb\u52a0\u7684\u8c03\u8bd5\u4fe1\u606f\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>menuconfig</code> \u8fdb\u884c\u914d\u7f6e\u6dfb\u52a0\u3002\u6211\u4eec\u5728\u5b9e\u9a8c\u4e2d\u6ca1\u6709\u5bf9\u8fd9\u90e8\u5206\u5185\u5bb9\u4f5c\u8981\u6c42\uff0c\u53ef\u4ee5\u81ea\u884c Google \u63a2\u7d22\u3002</p>"},{"location":"faq/#debug-next-finish","title":"\u4e3a\u4ec0\u4e48\u6211\u5728\u5185\u6838\u4e2d\u6dfb\u52a0\u4e86 debug \u4fe1\u606f\uff0c\u4f46\u662f\u8fd8\u662f\u6ca1\u6cd5\u4f7f\u7528 <code>next</code> \u6216\u8005 <code>finish</code> ?","text":"<p>\u53ef\u80fd\u4f60\u5728\u914d\u7f6e\u5185\u6838\u65f6\u5df2\u7ecf\u6dfb\u52a0\u4e86\u8c03\u8bd5\u4fe1\u606f\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u5728 QEMU\u8fd0\u884c\u7684\u5176\u4ed6\u90e8\u5206 \u6dfb\u52a0\u3002\u4f8b\u5982 SRAM \u4e2d\u5bf9 <code>march</code> \u8fdb\u884c\u914d\u7f6e\u7684\u8fc7\u7a0b\uff0c\u4ee5\u53ca opensbi \u4e2d\u7684\u6240\u6709\u90e8\u5206\uff0c\u90fd\u7f3a\u5c11\u8c03\u8bd5\u4fe1\u606f\u3002\u6240\u4ee5\u624d\u65e0\u6cd5\u6309\u7167\u51fd\u6570\u7684\u5c42\u7ea7\u8fdb\u884c\u8c03\u8bd5\u3002\u6211\u4eec\u5728\u5b9e\u9a8c\u4e2d\u6ca1\u6709\u5bf9\u8fd9\u90e8\u5206\u5185\u5bb9\u4f5c\u8981\u6c42\uff0c\u53ef\u4ee5\u81ea\u884c Google \u63a2\u7d22\u3002</p>"},{"location":"faq/#start_kernel","title":"\u4e3a\u4ec0\u4e48\u6211\u5728 <code>start_kernel</code> \u5904\u4e0d\u80fd\u6b63\u5e38\u4f7f\u7528\u65ad\u70b9\uff1f","text":"<p>\u5728\u4ee5\u4e0b\u7248\u672c\u4e2d\uff0c\u8fd9\u4e2a\u65ad\u70b9\u80fd\u591f\u6b63\u5e38\u88ab\u6253\u4e0a\u5e76\u89e6\u53d1</p> <pre><code>GNU gdb (Ubuntu 12.0.90-0ubuntu1) 12.0.90\nQEMU emulator version 6.2.0 (Debian 1:6.2+dfsg-2ubuntu6.3)\nRISC-V GNU Toolchain (Ubuntu 11.2.0-16ubuntu1) 11.2.0\nlinux-6.0-rc5/linux-5.19.9\n</code></pre>"},{"location":"faq/#lab1-riscv64-elf-unknown-gcc-no-such-file-or-directory","title":"\u4e3a\u4ec0\u4e48 Lab1 \u4e2d\u63d0\u793a <code>riscv64-elf-unknown-gcc: No such file or directory</code> ?","text":"<p>\u6211\u4eec\u66f4\u65b0\u4e86\u5de5\u5177\u94fe\uff0c\u8bf7\u4f7f\u7528 <code>git pull</code> \u6765\u66f4\u65b0\u4ed3\u5e93\u4fe1\u606f\uff0c\u7136\u540e\u4f7f\u7528 <code>make clean</code> \u6e05\u9664\u539f\u5148\u7684\u7f16\u8bd1\u4ea7\u7269\u3002</p>"},{"location":"faq/#lab1-c","title":"\u4e3a\u4ec0\u4e48 Lab1 \u4e2d\u6211\u7684 C \u8bed\u8a00\u51fd\u6570\u7684\u53c2\u6570\u65e0\u6cd5\u6b63\u786e\u4f20\u5165\uff1f","text":"<p>\u786e\u8ba4\u81ea\u5df1\u662f\u5426\u5728 <code>head.S</code> \u91cc\u7684 <code>_start</code> \u51fd\u6570\u4e2d\u6b63\u786e\u8bbe\u7f6e\u4e86 <code>sp</code>\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u5b83\u7684\u503c\u5e94\u8be5\u662f <code>0x8020XXXX</code>\u3002\u672a\u8bbe\u7f6e <code>sp</code> \u4f1a\u4f7f\u6808\u4e0a\u7684\u503c\u4e0d\u6b63\u786e\u4e14\u65e0\u6cd5\u5199\u5165\u3002</p>"},{"location":"faq/#puti-uint64-32bits","title":"\u4e3a\u4ec0\u4e48\u6211\u628a <code>puti</code> \u7684\u53c2\u6570\u7c7b\u578b\u66ff\u6362\u6210 <code>uint64</code> \u8fd8\u662f\u53ea\u80fd\u6253\u5370\u51fa 32bits \u7684\u503c\uff1f","text":"<p>\u5f3a\u70c8\u5efa\u8bae\u628a <code>uint64</code> \u7684\u5b9a\u4e49\u66ff\u6362\u4e3a <code>unsigned long long</code> \u800c\u4e0d\u662f\u73b0\u5728\u4f7f\u7528\u7684 <code>unsigned long</code>\uff0c\u56e0\u4e3a\u524d\u8005\u572832\u4f4d\u548c64\u4f4d\u7684\u5e73\u53f0\u4e0a\u7684\u957f\u5ea6\u90fd\u662f64\u4f4d\uff0c\u800c\u540e\u8005\u572832\u4f4d\u7684\u5e73\u53f0\u4e0a\u662f32\u4f4d\u7684\u3002</p>"},{"location":"faq/#qemu","title":"\u4e3a\u4ec0\u4e48\u6211\u7684 QEMU \u4f1a \u201c\u5361\u4f4f\u201d\uff1f","text":"<p><code>qemu-system</code> \u672c\u8eab\u4f5c\u4e3a\u4e00\u4e2a\u6a21\u62df\u5668\uff0c\u662f\u4e0d\u4f1a\u76f4\u63a5\u5361\u6b7b\u7684\uff0c\u5982\u679c\u4f60\u5728 <code>si</code> \u6216\u8005 <code>c</code> \u540e\uff0cQEMU \u770b\u8d77\u6765\u5931\u53bb\u4e86\u54cd\u5e94\uff0c\u90a3\u4e48\u6781\u6709\u53ef\u80fd\u662f\u7a0b\u5e8f\u8fd0\u884c\u5230\u4e86\u610f\u60f3\u4e0d\u5230\u7684\u5730\u65b9\u3002\u4f8b\u5982\u5728\u5199\u5165 <code>satp</code> \u540e\uff0c\u5982\u679c\u90e8\u5206 bit \u6ca1\u6709\u6210\u529f\u8bbe\u7f6e\uff0c\u90a3\u4e48\u53ef\u80fd\u4f1a\u76f4\u63a5\u8df3\u8fdb <code>trap</code>\u3002\u800c\u4e14\u5728\u524d\u9762\u7684\u5b9e\u9a8c\u4e2d\u6211\u4eec\u4e5f\u53d1\u73b0\u4e86\uff0c\u5728\u53d1\u751f\u7279\u6743\u7ea7\u5207\u6362\u6216\u8005\u53d1\u751f\u9677\u5165\u65f6\uff0c<code>si</code> \u662f\u6709\u53ef\u80fd\u65e0\u6cd5\u89e6\u53d1\u7684\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5c31\u9700\u8981\u4f60\u5728\u7a0b\u5e8f\u53ef\u80fd\u5230\u8fbe\u7684\u5730\u65b9\u90fd\u6253\u4e0a\u65ad\u70b9\u6765\u6682\u505c QEMU \u7684\u6267\u884c\u4e86\u3002</p>"},{"location":"faq/#satp-gdb-multiarch-segmentation-fault","title":"\u4e3a\u4ec0\u4e48\u6211\u5728\u8bbe\u7f6e <code>satp</code> \u540e\u5bfc\u81f4\u4e86 <code>gdb-multiarch</code> \u7684 <code>segmentation fault</code> ?","text":"<p>\u56e0\u4e3a <code>satp</code> \u6216\u8005\u5404\u7ea7\u9875\u8868\u9879\u8bbe\u7f6e\u6709\u95ee\u9898\u3002\u6bd4\u5982\u68c0\u67e5\u4e00\u4e0b\u6211\u4eec\u4e4b\u524d\u4e00\u76f4\u5ffd\u7565\u7684\u9875\u8868\u9879\u91cc U-bit \u8bbe\u7f6e\u597d\u4e86\u6ca1\u6709\u3002</p>"},{"location":"faq/#vmlinuxldss-include-typesh","title":"\u4e3a\u4ec0\u4e48\u5728 <code>vmlinux.lds.S</code> \u4e2d\u4f1a <code>#include \"types.h\"</code>?","text":"<p>\u56e0\u4e3a\u6211\u4eec\u5b9e\u9a8c\u4ee3\u7801\u5b58\u5728\u4e00\u4e9b\u5386\u53f2\u9650\u5236\u6ca1\u6765\u5f97\u53ca\u4fee\u6539\uff0c\u5728 <code>vmlinux.lds.S</code> \u4e2d\u6709 <code>#include \"defs.h\"</code>\uff0c\u7136\u540e\u4e4b\u524d\u53c8\u6ca1\u6709\u63d0\u9192\u540c\u5b66\u4e0d\u8981\u5728 <code>defs.h</code> \u91cc\u9762\u6dfb\u52a0\u4e1c\u897f\uff0c\u5bfc\u81f4\u5728 <code>defs.h</code>\u4e2d\u6dfb\u52a0\u7684\u5185\u5bb9\u963b\u788d\u4e86 <code>vmlinux.lds</code> \u7684\u6b63\u786e\u751f\u6210\u3002\u4e00\u4e2a\u53ef\u884c\u7684\u505a\u6cd5\u662f\u5c06 <code>defs.h</code> \u4e2d\u9664\u4e86\u5b8f\u5b9a\u4e49\u4ee5\u5916\u7684\u90e8\u5206\u5168\u90e8\u53bb\u9664\uff08\u5305\u62ec\u5b8finclude\uff09\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u53bb\u6389\u7684\u90e8\u5206\u6dfb\u52a0\u5230\u5176\u4ed6\u7684\u5934\u6587\u4ef6\u91cc\u4ee5\u4f9b\u4f7f\u7528\u3002</p>"},{"location":"faq/#uapp","title":"<code>uapp</code> \u660e\u660e\u5df2\u7ecf\u5728\u5185\u5b58\u91cc\u4e86\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981\u88ab\u62f7\u8d1d\u4e00\u6b21\u624d\u80fd\u8fd0\u884c\uff1f","text":"<p>\u56e0\u4e3a\u6211\u4eec\u5728\u5b9e\u9a8c\u4e2d\u4e0d\u51c6\u5907\u5f15\u5165\u78c1\u76d8\u9a71\u52a8\uff0c\u6240\u4ee5\u5c06\u5185\u5b58\u7684\u4e00\u90e8\u5206\u4f5c\u4e3a <code>ramdisk</code>, \u4e5f\u5c31\u662f\u8bf4\u6709\u4e00\u6bb5\u5185\u5b58\u88ab\u6211\u4eec\u5f53\u6210\u4e86\u786c\u76d8\u3002\u8fd9\u6bb5\u5185\u5b58\u5c31\u662f\u4ece <code>uapp_start</code>  \u5230 <code>uapp_end</code> \u7684\u7a7a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u50cf\u64cd\u4f5c\u78c1\u76d8\u4e00\u6837\u64cd\u4f5c\u8fd9\u6bb5\u5185\u5b58\u3002\u5728\u8fd0\u884c\u78c1\u76d8\u4e0a\u7684\u7a0b\u5e8f\u524d\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u62f7\u8d1d\u5230\u6211\u4eec\u4e3a\u7a0b\u5e8f\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\uff0c\u5e76\u4f9d\u7167 Elf Header \u7684\u8981\u6c42\u6620\u5c04\u5230\u7528\u6237\u80fd\u8bbf\u95ee\u7684\u5730\u5740\u7a7a\u95f4\u3002\u8fd9\u65f6\u5019\u7528\u6237\u5c31\u80fd\u8bbf\u95ee\u6211\u4eec\u4ece\u78c1\u76d8\u62f7\u8d1d\u5230\u5185\u5b58\u4e2d\u7684\u6570\u636e\u548c\u4ee3\u7801\u4e86\u3002</p>"},{"location":"faq/#sret-instruction-page-fault","title":"\u4e3a\u4ec0\u4e48\u6211 <code>sret</code> \u5230\u7528\u6237\u7a0b\u5e8f\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u65f6\u4f1a Instruction Page Fault?","text":"<p>\u5927\u6982\u7387\u662f\u56e0\u4e3a\u6ca1\u6709\u8bbe\u7f6e\u597d\u9875\u8868\u9879\u91cc\u7684 U-bit, \u8be6\u7ec6\u53ef\u4ee5\u8bfb\u4e00\u4e0b Privileged Spec. \u4e5f\u6709\u53ef\u80fd\u4f60\u6ca1\u6709\u5c06\u5185\u5b58\u6620\u5c04\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a\u3002</p>"},{"location":"faq/#uapp-vma-mmap","title":"<code>uapp</code> \u8981\u600e\u4e48\u62f7\u8d1d\u5230\u5185\u5b58\u91cc\uff1f\u662f\u8981\u6211\u4eec\u76f4\u63a5\u5b9e\u73b0 VMA \u548c <code>mmap</code> \u5417\uff1f","text":"<p>\u53ea\u8981\u4e00\u4e2a\u4e00\u4e2a\u5b57\u8282\u5730\u5c06\u5185\u5bb9\u590d\u5236\u5230\u6211\u4eec\u4f7f\u7528 <code>alloc_pages</code> \u6216\u8005 <code>kalloc</code> \u5f00\u8f9f\u7684\u5185\u5b58\u4e2d\u5373\u53ef\uff0cVMA \u548c <code>mmap</code> \u5c06\u5728 Lab6 \u6216\u4e4b\u540e\u624d\u4f1a\u5f15\u5165\uff0c\u6682\u65f6\u4e0d\u7528\u540c\u5b66\u4eec\u5b9e\u73b0\u3002</p>"},{"location":"lab0/","title":"Lab 0: GDB &amp; QEMU \u8c03\u8bd5 64 \u4f4d RISC-V LINUX","text":""},{"location":"lab0/#_1","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<ul> <li>\u4f7f\u7528\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177, \u5b8c\u6210Linux\u5185\u6838\u4ee3\u7801\u7f16\u8bd1</li> <li>\u4f7f\u7528QEMU\u8fd0\u884c\u5185\u6838</li> <li>\u719f\u6089GDB\u548cQEMU\u8054\u5408\u8c03\u8bd5</li> </ul>"},{"location":"lab0/#_2","title":"\u5b9e\u9a8c\u73af\u5883","text":"<ul> <li>Ubuntu 22.04.3 LTS</li> <li>Ubuntu 22.04.2 LTS Windows Subsystem for Linux 2</li> <li>Mac with Apple Silicon</li> <li>\u5176\u4ed6\u53ef\u884c\u7684\u5e73\u53f0\uff0c\u4f46\u6211\u4eec\u4e0d\u63d0\u4f9b\u6280\u672f\u652f\u6301</li> </ul>"},{"location":"lab0/#_3","title":"\u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd","text":""},{"location":"lab0/#linux","title":"Linux \u4f7f\u7528\u57fa\u7840","text":"<p>\u5728 Linux \u73af\u5883\u4e0b\uff0c\u4eba\u4eec\u901a\u5e38\u4f7f\u7528\u547d\u4ee4\u884c\u63a5\u53e3\u6765\u5b8c\u6210\u4e0e\u8ba1\u7b97\u673a\u7684\u4ea4\u4e92\u3002\u7ec8\u7aef\uff08Terminal\uff09\u662f\u7528\u4e8e\u5904\u7406\u8be5\u8fc7\u7a0b\u7684\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u901a\u8fc7\u7ec8\u7aef\u4f60\u53ef\u4ee5\u8fd0\u884c\u5404\u79cd\u7a0b\u5e8f\u4ee5\u53ca\u5728\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u5904\u7406\u6587\u4ef6\u3002\u5728\u7c7b Unix \u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u7ec8\u7aef\u53ef\u4ee5\u4e3a\u4f60\u5b8c\u6210\u4e00\u5207\u4f60\u6240\u9700\u8981\u7684\u64cd\u4f5c\u3002\u4e0b\u9762\u6211\u4eec\u4ec5\u5bf9\u5b9e\u9a8c\u4e2d\u6d89\u53ca\u7684\u4e00\u4e9b\u6982\u5ff5\u8fdb\u884c\u4ecb\u7ecd\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u94fe\u63a5\u6765\u5bf9\u547d\u4ee4\u884c\u7684\u4f7f\u7528\u8fdb\u884c\u5b66\u4e60\uff1a</p> <ol> <li>The Missing Semester of Your CS Education&gt;&gt;Video&lt;&lt;</li> <li>GNU/Linux Command-Line Tools Summary</li> <li>Basics of UNIX</li> </ol>"},{"location":"lab0/#qemu","title":"QEMU \u4f7f\u7528\u57fa\u7840","text":""},{"location":"lab0/#qemu_1","title":"\u4ec0\u4e48\u662f QEMU","text":"<p>QEMU \u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u6a21\u62df\u5668\uff0c\u53ef\u4ee5\u5728 x86 \u5e73\u53f0\u4e0a\u6267\u884c\u4e0d\u540c\u67b6\u6784\u4e0b\u7684\u7a0b\u5e8f\u3002\u6211\u4eec\u5b9e\u9a8c\u4e2d\u91c7\u7528 QEMU \u6765\u5b8c\u6210 RISC-V \u67b6\u6784\u7684\u7a0b\u5e8f\u7684\u6a21\u62df\u3002</p>"},{"location":"lab0/#qemu_2","title":"\u5982\u4f55\u4f7f\u7528 QEMU\uff08\u5e38\u89c1\u53c2\u6570\u4ecb\u7ecd\uff09","text":"<p>\u4ee5\u4ee5\u4e0b\u547d\u4ee4\u4e3a\u4f8b\uff0c\u6211\u4eec\u7b80\u5355\u4ecb\u7ecd QEMU \u7684\u53c2\u6570\u6240\u4ee3\u8868\u7684\u542b\u4e49</p> <pre><code>$ qemu-system-riscv64 \\\n    -nographic \\\n    -machine virt \\\n    -kernel path/to/linux/arch/riscv/boot/Image \\\n    -device virtio-blk-device,drive=hd0 \\\n    -append \"root=/dev/vda ro console=ttyS0\" \\\n    -bios default \\\n    -drive file=rootfs.img,format=raw,id=hd0 \\\n    -S -s\n</code></pre> <ul> <li><code>-nographic</code>: \u4e0d\u4f7f\u7528\u56fe\u5f62\u7a97\u53e3\uff0c\u4f7f\u7528\u547d\u4ee4\u884c</li> <li><code>-machine</code>: \u6307\u5b9a\u8981 emulate \u7684\u673a\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4 <code>qemu-system-riscv64 -machine help</code> \u67e5\u770b\u53ef\u9009\u62e9\u7684\u673a\u5668\u9009\u9879</li> <li><code>-kernel</code>: \u6307\u5b9a\u5185\u6838 image</li> <li><code>-append cmdline</code>: \u4f7f\u7528cmdline\u4f5c\u4e3a\u5185\u6838\u7684\u547d\u4ee4\u884c</li> <li><code>-device</code>: \u6307\u5b9a\u8981\u6a21\u62df\u7684\u8bbe\u5907\uff0c\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4 <code>qemu-system-riscv64 -device help</code> \u67e5\u770b\u53ef\u9009\u62e9\u7684\u8bbe\u5907\uff0c\u901a\u8fc7\u547d\u4ee4 <code>qemu-system-riscv64 -device &lt;\u5177\u4f53\u7684\u8bbe\u5907&gt;,help</code> \u67e5\u770b\u67d0\u4e2a\u8bbe\u5907\u7684\u547d\u4ee4\u9009\u9879</li> <li><code>-drive, file=&lt;file_name&gt;</code>: \u4f7f\u7528 <code>file_name</code> \u4f5c\u4e3a\u6587\u4ef6\u7cfb\u7edf</li> <li><code>-S</code>: \u542f\u52a8\u65f6\u6682\u505cCPU\u6267\u884c</li> <li><code>-s</code>: <code>-gdb tcp::1234</code> \u7684\u7b80\u5199</li> <li><code>-bios default</code>: \u4f7f\u7528\u9ed8\u8ba4\u7684 OpenSBI firmware \u4f5c\u4e3a bootloader</li> </ul> <p>\u66f4\u591a\u53c2\u6570\u4fe1\u606f\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc</p>"},{"location":"lab0/#gdb","title":"GDB \u4f7f\u7528\u57fa\u7840","text":""},{"location":"lab0/#gdb_1","title":"\u4ec0\u4e48\u662f GDB","text":"<p>GNU \u8c03\u8bd5\u5668\uff08\u82f1\u8bed\uff1aGNU Debugger\uff0c\u7f29\u5199\uff1agdb\uff09\u662f\u4e00\u4e2a\u7531 GNU \u5f00\u6e90\u7ec4\u7ec7\u53d1\u5e03\u7684\u3001UNIX/LINUX \u64cd\u4f5c\u7cfb\u7edf\u4e0b\u7684\u3001\u57fa\u4e8e\u547d\u4ee4\u884c\u7684\u3001\u529f\u80fd\u5f3a\u5927\u7684\u7a0b\u5e8f\u8c03\u8bd5\u5de5\u5177\u3002\u501f\u52a9\u8c03\u8bd5\u5668\uff0c\u6211\u4eec\u80fd\u591f\u67e5\u770b\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u5728\u6267\u884c\u65f6\u5b9e\u9645\u5728\u505a\u4ec0\u4e48\uff08\u6bd4\u5982\u8bbf\u95ee\u54ea\u4e9b\u5185\u5b58\u3001\u5bc4\u5b58\u5668\uff09\uff0c\u5728\u5176\u4ed6\u7a0b\u5e8f\u5d29\u6e83\u7684\u65f6\u5019\u53ef\u4ee5\u6bd4\u8f83\u5feb\u901f\u5730\u4e86\u89e3\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u7684\u539f\u56e0\u3002 \u88ab\u8c03\u8bd5\u7684\u7a0b\u5e8f\u53ef\u4ee5\u548c GDB \u8fd0\u884c\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u5e76\u7531 GDB \u63a7\u5236\uff08\u672c\u5730\u8c03\u8bd5 native debug\uff09\u3002\u4e5f\u53ef\u4ee5\u53ea\u548c <code>gdb-server</code> \u8fd0\u884c\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u7531\u8fde\u63a5\u7740 <code>gdb-server</code> \u7684 GDB \u8fdb\u884c\u63a7\u5236\uff08\u8fdc\u7a0b\u8c03\u8bd5 remote debug\uff09\u3002</p> <p>GDB \u7684\u529f\u80fd\u5341\u5206\u5f3a\u5927\uff0c\u6211\u4eec\u7ecf\u5e38\u5728\u8c03\u8bd5\u4e2d\u7528\u5230\u7684\u6709:</p> <ul> <li>\u542f\u52a8\u7a0b\u5e8f\uff0c\u5e76\u6307\u5b9a\u53ef\u80fd\u5f71\u54cd\u5176\u884c\u4e3a\u7684\u6240\u6709\u5185\u5bb9</li> <li>\u4f7f\u7a0b\u5e8f\u5728\u6307\u5b9a\u6761\u4ef6\u4e0b\u505c\u6b62</li> <li>\u68c0\u67e5\u7a0b\u5e8f\u505c\u6b62\u65f6\u53d1\u751f\u4e86\u4ec0\u4e48</li> <li>\u66f4\u6539\u7a0b\u5e8f\u4e2d\u7684\u5185\u5bb9\uff0c\u4ee5\u4fbf\u7ea0\u6b63\u4e00\u4e2abug\u7684\u5f71\u54cd</li> </ul>"},{"location":"lab0/#gdb_2","title":"GDB \u57fa\u672c\u547d\u4ee4\u4ecb\u7ecd","text":"<ul> <li><code>(gdb) layout asm</code>: \u663e\u793a\u6c47\u7f16\u4ee3\u7801</li> <li><code>(gdb) start</code>: \u5355\u6b65\u6267\u884c\uff0c\u8fd0\u884c\u7a0b\u5e8f\uff0c\u505c\u5728\u7b2c\u4e00\u6267\u884c\u8bed\u53e5</li> <li><code>(gdb) continue</code>: \u4ece\u65ad\u70b9\u540e\u7ee7\u7eed\u6267\u884c\uff0c\u7b80\u5199 <code>c</code></li> <li><code>(gdb) next</code>: \u5355\u6b65\u8c03\u8bd5\uff08\u9010\u8fc7\u7a0b\uff0c\u51fd\u6570\u76f4\u63a5\u6267\u884c\uff09\uff0c\u7b80\u5199 <code>n</code></li> <li><code>(gdb) step instruction</code>: \u6267\u884c\u5355\u6761\u6307\u4ee4\uff0c\u7b80\u5199 <code>si</code></li> <li><code>(gdb) run</code>: \u91cd\u65b0\u5f00\u59cb\u8fd0\u884c\u6587\u4ef6\uff08run-text\uff1a\u52a0\u8f7d\u6587\u672c\u6587\u4ef6\uff0crun-bin\uff1a\u52a0\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09\uff0c\u7b80\u5199 <code>r</code></li> <li><code>(gdb) backtrace</code>\uff1a\u67e5\u770b\u51fd\u6570\u7684\u8c03\u7528\u7684\u6808\u5e27\u548c\u5c42\u7ea7\u5173\u7cfb\uff0c\u7b80\u5199 <code>bt</code></li> <li><code>(gdb) break</code> \u8bbe\u7f6e\u65ad\u70b9\uff0c\u7b80\u5199 <code>b</code><ul> <li>\u65ad\u5728 <code>foo</code> \u51fd\u6570\uff1a<code>b foo</code></li> <li>\u65ad\u5728\u67d0\u5730\u5740: <code>b * 0x80200000</code></li> </ul> </li> <li><code>(gdb) finish</code>: \u7ed3\u675f\u5f53\u524d\u51fd\u6570\uff0c\u8fd4\u56de\u5230\u51fd\u6570\u8c03\u7528\u70b9</li> <li><code>(gdb) frame</code>: \u5207\u6362\u51fd\u6570\u7684\u6808\u5e27\uff0c\u7b80\u5199 <code>f</code></li> <li><code>(gdb) print</code>: \u6253\u5370\u503c\u53ca\u5730\u5740\uff0c\u7b80\u5199 <code>p</code></li> <li><code>(gdb) info</code>: \u67e5\u770b\u51fd\u6570\u5185\u90e8\u5c40\u90e8\u53d8\u91cf\u7684\u6570\u503c\uff0c\u7b80\u5199 <code>i</code><ul> <li>\u67e5\u770b\u5bc4\u5b58\u5668 ra \u7684\u503c: <code>i r ra</code></li> </ul> </li> <li><code>(gdb) display</code>: \u8ffd\u8e2a\u67e5\u770b\u5177\u4f53\u53d8\u91cf\u503c</li> <li><code>(gdb) x/4x &lt;addr&gt;</code>: \u4ee5 16 \u8fdb\u5236\u6253\u5370 <code>&lt;addr&gt;</code> \u5904\u5f00\u59cb\u7684 16 Bytes \u5185\u5bb9</li> </ul> <p>\u66f4\u591a\u547d\u4ee4\u53ef\u4ee5\u53c2\u8003100\u4e2agdb\u5c0f\u6280\u5de7</p>"},{"location":"lab0/#linux_1","title":"Linux \u5185\u6838\u7f16\u8bd1\u57fa\u7840","text":""},{"location":"lab0/#_4","title":"\u4ea4\u53c9\u7f16\u8bd1","text":"<p>\u4ea4\u53c9\u7f16\u8bd1\u6307\u7684\u662f\u5728\u4e00\u4e2a\u5e73\u53f0\u4e0a\u7f16\u8bd1\u53ef\u4ee5\u5728\u53e6\u4e00\u4e2a\u67b6\u6784\u8fd0\u884c\u7684\u7a0b\u5e8f\u3002\u4f8b\u5982\u5728 x86 \u673a\u5668\u4e0a\u7f16\u8bd1\u53ef\u4ee5\u5728 RISC-V \u67b6\u6784\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u4ea4\u53c9\u7f16\u8bd1\u9700\u8981\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u7684\u652f\u6301\uff0c\u5728\u6211\u4eec\u7684\u5b9e\u9a8c\u4e2d\u6240\u7528\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u5c31\u662f <code>riscv-gnu-toolchain</code>\u3002</p>"},{"location":"lab0/#_5","title":"\u5185\u6838\u914d\u7f6e","text":"<p>\u5185\u6838\u914d\u7f6e\u662f\u7528\u4e8e\u914d\u7f6e\u662f\u5426\u542f\u7528\u5185\u6838\u7684\u5404\u9879\u7279\u6027\uff0c\u5185\u6838\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u540d\u4e3a <code>defconfig</code>\uff08\u5373default configuration\uff09\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u8be5\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8e\u5404\u4e2a\u67b6\u6784\u76ee\u5f55\u7684 <code>configs</code> \u6587\u4ef6\u5939\u4e0b\uff0c\u4f8b\u5982\u5bf9\u4e8eRISC-V\u800c\u8a00\uff0c\u5176\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u4e3a <code>arch/riscv/configs/defconfig</code>\u3002\u4f7f\u7528 <code>make ARCH=riscv defconfig</code> \u547d\u4ee4\u53ef\u4ee5\u5728\u5185\u6838\u6839\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2a\u540d\u4e3a <code>.config</code> \u7684\u6587\u4ef6\uff0c\u5305\u542b\u4e86\u5185\u6838\u5b8c\u6574\u7684\u914d\u7f6e\uff0c\u5185\u6838\u5728\u7f16\u8bd1\u65f6\u4f1a\u6839\u636e <code>.config</code> \u8fdb\u884c\u7f16\u8bd1\u3002</p> <p>\u914d\u7f6e\u4e4b\u95f4\u5b58\u5728\u76f8\u4e92\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u76f4\u63a5\u4fee\u6539defconfig\u6587\u4ef6\u6216\u8005 <code>.config</code> \u6709\u65f6\u5019\u5e76\u4e0d\u80fd\u8fbe\u5230\u60f3\u8981\u7684\u6548\u679c\uff0c\u6216\u662f\u7ed9\u8fdb\u4e00\u6b65\u5185\u6838\u914d\u7f6e\u5e26\u6765\u540c\u6b65\u95ee\u9898\u3002\u56e0\u6b64\u5982\u679c\u9700\u8981\u4fee\u6539\u914d\u7f6e\u4e00\u822c\u91c7\u7528 <code>make ARCH=riscv menuconfig</code> \u7684\u65b9\u5f0f\u5bf9\u5185\u6838\u8fdb\u884c\u914d\u7f6e\u3002</p>"},{"location":"lab0/#_6","title":"\u7f16\u8bd1\u5de5\u5177","text":"<p><code>make</code> \u662f\u7528\u4e8e\u7a0b\u5e8f\u6784\u5efa\u7684\u91cd\u8981\u5de5\u5177\uff0c\u5b83\u7684\u884c\u4e3a\u7531\u5f53\u524d\u76ee\u5f55\u6216 <code>make -C</code> \u6307\u5b9a\u76ee\u5f55\u4e0b\u7684 <code>Makefile</code> \u6765\u51b3\u5b9a\u3002\u66f4\u591a\u6709\u5173 <code>Makefile</code> \u7684\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 Learn Makefiles With the tastiest examples\u3002\u4e0b\u9762\u7528\u672c\u6b21\u5b9e\u9a8c\u4e2d\u53ef\u80fd\u7528\u5230\u7684\u7528\u4e8e\u7f16\u8bd1 Linux \u5185\u6838\u7684\u7f16\u8bd1\u547d\u4ee4\u4f5c\u4e3a\u793a\u4f8b\uff1a</p> <pre><code>$ make help             # \u67e5\u770bmake\u547d\u4ee4\u7684\u5404\u79cd\u53c2\u6570\u89e3\u91ca\n\n$ make &lt;target-name&gt;    # \u7f16\u8bd1\u540d\u4e3a &lt;target-name&gt; \u7684\u76ee\u6807\u6587\u4ef6\u6216\u76ee\u6807\u4efb\u52a1 \n$ make defconfig        # \u4f7f\u7528\u5f53\u524d\u5e73\u53f0\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u5728x86\u673a\u5668\u4e0a\u4f1a\u4f7f\u7528x86\u7684\u9ed8\u8ba4\u914d\u7f6e\n$ make clean            # \u6e05\u9664\u6240\u6709\u7f16\u8bd1\u597d\u7684 object \u6587\u4ef6\n$ make mrproper         # \u5220\u9664\u6240\u6709\u7f16\u8bd1\u4ea7\u7269\u548c\u914d\u7f6e\u6587\u4ef6\n\n$ make -j&lt;thread-count&gt; # \u4f7f\u7528 &lt;thread-count&gt; \u4e2a\u7269\u7406\u7ebf\u7a0b\u6765\u8fdb\u884c\u591a\u7ebf\u7a0b\u7f16\u8bd1 \n$ make -j4              # \u7f16\u8bd1\u5f53\u524d\u5e73\u53f0\u7684\u5185\u6838\uff0c-j4 \u4e3a\u4f7f\u7528 4 \u7ebf\u7a0b\u8fdb\u884c\u591a\u7ebf\u7a0b\u7f16\u8bd1\n$ make -j$(nproc)       # \u7f16\u8bd1\u5f53\u524d\u5e73\u53f0\u7684\u5185\u6838\uff0c-j$(nproc) \u4e3a\u4ee5\u5168\u90e8\u673a\u5668\u786c\u4ef6\u7ebf\u7a0b\u6570\u8fdb\u884c\u591a\u7ebf\u7a0b\u7f16\u8bd1\n\n$ make &lt;var-name&gt;=&lt;var-value&gt;                       # \u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u5c06 &lt;var-name&gt; \u53d8\u91cf\u7684\u503c\u624b\u52a8\u8bbe\u7f6e\u4e3a &lt;val-value&gt;\n$ make ARCH=riscv defconfig                         # \u4f7f\u7528 RISC-V \u5e73\u53f0\u7684\u9ed8\u8ba4\u914d\u7f6e\n$ make ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu-  # \u7f16\u8bd1 RISC-V \u5e73\u53f0\u5185\u6838\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u4e3a <code>make</code> \u6307\u5b9a\u53d8\u91cf\u7684\u503c\uff0c\u672c\u6b21\u5b9e\u9a8c\u4e2d\u7528\u5230\u7684\u5982\u4e0b\uff1a</p> <ul> <li><code>ARCH</code> \u6307\u5b9a\u67b6\u6784\uff0c\u53ef\u9009\u7684\u503c\u5305\u62ec arch \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5939\u540d\uff0c\u5982 x86\u3001arm\u3001arm64 \u7b49\uff0c\u4e0d\u540c\u4e8e arm \u548c arm64\uff0c32 \u4f4d\u548c 64 \u4f4d\u7684RISC-V\u5171\u7528 <code>arch/riscv</code> \u76ee\u5f55\uff0c\u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684 config \u53ef\u4ee5\u7f16\u8bd1 32 \u4f4d\u6216 64 \u4f4d\u7684\u5185\u6838\u3002</li> <li><code>CROSS_COMPILE</code> \u6307\u5b9a\u4f7f\u7528\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\uff0c\u4f8b\u5982\u6307\u5b9a <code>CROSS_COMPILE=riscv64-linux-gnu-</code>\uff0c\u5219\u7f16\u8bd1\u65f6\u4f1a\u91c7\u7528 <code>riscv64-linux-gnu-gcc</code> \u4f5c\u4e3a\u7f16\u8bd1\u5668\uff0c\u7f16\u8bd1\u5728 RISC-V 64 \u4f4d\u5e73\u53f0\u4e0a\u8fd0\u884c\u7684 Linux \u5185\u6838\u3002</li> </ul>"},{"location":"lab0/#_7","title":"\u5b9e\u9a8c\u6b65\u9aa4","text":"<p>\u5728\u6267\u884c\u6bcf\u4e00\u6761\u547d\u4ee4\u524d\uff0c\u8bf7\u4f60\u5bf9\u5c06\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\u8fdb\u884c\u601d\u8003\uff0c\u7ed9\u51fa\u7684\u547d\u4ee4\u4e0d\u9700\u8981\u5168\u90e8\u6267\u884c\uff0c\u5e76\u4e14\u4e0d\u662f\u6240\u6709\u7684\u547d\u4ee4\u90fd\u53ef\u4ee5\u65e0\u6761\u4ef6\u6267\u884c\uff0c\u8bf7\u4e0d\u8981\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u547d\u4ee4\u53bb\u6267\u884c\u3002</p>"},{"location":"lab0/#_8","title":"\u642d\u5efa\u5b9e\u9a8c\u73af\u5883\u73af\u5883","text":"<p>\u5982\u679c\u4f60\u5728\u4f7f\u7528 Mac with Apple Silicon, \u8bf7\u76f4\u63a5\u4f7f\u7528 Docker Desktop \u8fdb\u884c\u8bfe\u7a0b\u5b9e\u9a8c\u3002 Docker Desktop \u7684\u5b89\u88c5\u53ef\u4ee5\u53c2\u8003 Docker Desktop for Apple silicon\u3002 \u4e4b\u540e\u4f7f\u7528 <code>docker pull ubuntu:22.04 &amp;&amp; docker run -it --name &lt;some-name&gt; ubuntu:22.04 bash</code> \u6765\u542f\u52a8\u4e00\u4e2a\u8fd0\u884c\u5728\u865a\u62df\u673a\u4e0a\u7684 Ubuntu for ARM \u5bb9\u5668\uff0c\u5e76\u5c06\u8fd9\u4e2a Ubuntu \u4f5c\u4e3a\u5b9e\u9a8c\u73af\u5883\u3002</p> <p>\u9996\u5148\u5b89\u88c5\u7f16\u8bd1\u5185\u6838\u6240\u9700\u8981\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u548c\u7528\u4e8e\u6784\u5efa\u7a0b\u5e8f\u7684\u8f6f\u4ef6\u5305</p> <pre><code>$ sudo apt install  gcc-riscv64-linux-gnu\n$ sudo apt install  autoconf automake autotools-dev curl libmpc-dev libmpfr-dev libgmp-dev \\\n                    gawk build-essential bison flex texinfo gperf libtool patchutils bc \\\n                    zlib1g-dev libexpat-dev git\n</code></pre> <p>\u63a5\u7740\u662f\u7528\u4e8e\u542f\u52a8 riscv64 \u5e73\u53f0\u4e0a\u7684\u5185\u6838\u7684\u6a21\u62df\u5668 <code>qemu</code></p> <pre><code>$ sudo apt install qemu-system-misc\n</code></pre> <p>\u6211\u4eec\u8fd8\u9700\u8981\u7528 <code>gdb</code> \u6765\u5bf9\u5728 <code>qemu</code> \u4e0a\u8fd0\u884c\u7684 Linux \u5185\u6838\u8fdb\u884c\u8c03\u8bd5 <pre><code>$ sudo apt install gdb-multiarch\n</code></pre></p>"},{"location":"lab0/#linux_2","title":"\u83b7\u53d6 Linux \u6e90\u7801\u548c\u5df2\u7ecf\u7f16\u8bd1\u597d\u7684\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u4ece https://www.kernel.org \u4e0b\u8f7d\u6700\u65b0\u7684 Linux \u6e90\u7801\u3002</p> <p>\u622a\u81f3\u5199\u4f5c\u65f6\uff0c\u6700\u65b0\u7684 Linux \u5185\u6838\u7248\u672c\u662f 6.6-rc1.</p> <p>\u5e76\u4e14\u4f7f\u7528 git \u5de5\u5177 clone \u672c\u4ed3\u5e93\u3002\u5176\u4e2d\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u955c\u50cf\u3002</p> <p>\u6839\u6587\u4ef6\u7cfb\u7edf\u4e3a Linux Kernel \u63d0\u4f9b\u4e86\u57fa\u7840\u7684\u6587\u4ef6\u670d\u52a1\uff0c\u5728\u542f\u52a8 Linux Kernel \u65f6\u662f\u5fc5\u8981\u7684\u3002</p> <pre><code>$ git clone https://github.com/ZJU-SEC/os23fall-stu.git\n$ cd os23fall-stu/src/lab0\n$ ls\nrootfs.img  # \u5df2\u7ecf\u6784\u5efa\u5b8c\u6210\u7684\u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u955c\u50cf\n</code></pre>"},{"location":"lab0/#linux_3","title":"\u7f16\u8bd1 Linux \u5185\u6838","text":"<pre><code>$ cd path/to/linux\n$ make ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu- defconfig    # \u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\n$ make ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu- -j$(nproc)   # \u7f16\u8bd1\n</code></pre> <p>\u4f7f\u7528\u591a\u7ebf\u7a0b\u7f16\u8bd1\u4e00\u822c\u4f1a\u8017\u8d39\u5927\u91cf\u5185\u5b58\uff0c\u5982\u679c <code>-j</code> \u9009\u9879\u5bfc\u81f4\u5185\u5b58\u8017\u5c3d (out of memory)\uff0c\u8bf7\u5c1d\u8bd5\u8c03\u4f4e\u7ebf\u7a0b\u6570\uff0c\u6bd4\u5982 <code>-j4</code>, <code>-j8</code> \u7b49\u3002</p>"},{"location":"lab0/#qemu_3","title":"\u4f7f\u7528 QEMU \u8fd0\u884c\u5185\u6838","text":"<p><pre><code>$ qemu-system-riscv64 -nographic -machine virt -kernel path/to/linux/arch/riscv/boot/Image \\\n    -device virtio-blk-device,drive=hd0 -append \"root=/dev/vda ro console=ttyS0\" \\\n    -bios default -drive file=path/to/rootfs.img,format=raw,id=hd0\n</code></pre> \u9000\u51fa QEMU \u7684\u65b9\u6cd5\u4e3a\uff1a\u4f7f\u7528 Ctrl+A\uff0c\u677e\u5f00\u540e\u518d\u6309\u4e0b X \u952e\u5373\u53ef\u9000\u51fa QEMU\u3002</p>"},{"location":"lab0/#gdb_3","title":"\u4f7f\u7528 GDB \u5bf9\u5185\u6838\u8fdb\u884c\u8c03\u8bd5","text":"<p>\u8fd9\u4e00\u6b65\u9700\u8981\u5f00\u542f\u4e24\u4e2a Terminal Session\uff0c\u4e00\u4e2a Terminal \u4f7f\u7528 QEMU \u542f\u52a8 Linux\uff0c\u53e6\u4e00\u4e2a Terminal \u4f7f\u7528 GDB \u4e0e QEMU \u8fdc\u7a0b\u901a\u4fe1\uff08\u4f7f\u7528 tcp::1234 \u7aef\u53e3\uff09\u8fdb\u884c\u8c03\u8bd5\u3002</p> <pre><code># Terminal 1\n$ qemu-system-riscv64 -nographic -machine virt -kernel path/to/linux/arch/riscv/boot/Image \\\n    -device virtio-blk-device,drive=hd0 -append \"root=/dev/vda ro console=ttyS0\" \\\n    -bios default -drive file=path/to/rootfs.img,format=raw,id=hd0 -S -s\n\n# Terminal 2\n$ gdb-multiarch path/to/linux/vmlinux\n(gdb) target remote :1234   # \u8fde\u63a5 qemu\n(gdb) b start_kernel        # \u8bbe\u7f6e\u65ad\u70b9\n(gdb) continue              # \u7ee7\u7eed\u6267\u884c\n(gdb) quit                  # \u9000\u51fa gdb\n</code></pre>"},{"location":"lab0/#_9","title":"\u5b9e\u9a8c\u4efb\u52a1\u4e0e\u8981\u6c42","text":"<ul> <li>\u8bf7\u5404\u4f4d\u540c\u5b66\u72ec\u7acb\u5b8c\u6210\u4f5c\u4e1a\uff0c\u4efb\u4f55\u6284\u88ad\u884c\u4e3a\u90fd\u5c06\u4f7f\u672c\u6b21\u4f5c\u4e1a\u5224\u4e3a0\u5206\u3002</li> <li>\u7f16\u8bd1\u5185\u6838\uff0c\u4f7f\u7528 QEMU \u542f\u52a8\u540e\uff0c\u8fdc\u7a0b\u8fde\u63a5 GDB \u8fdb\u884c\u8c03\u8bd5\uff0c\u5e76\u5c1d\u8bd5\u4f7f\u7528 GDB \u7684\u5404\u9879\u547d\u4ee4\uff08\u5982 <code>backtrace</code>, <code>finish</code>, <code>frame</code>, <code>info</code>, <code>break</code>, <code>display</code>, <code>next</code>, <code>layout</code> \u7b49\uff09\u3002</li> <li>\u5728\u5b66\u5728\u6d59\u5927\u4e2d\u63d0\u4ea4 pdf \u683c\u5f0f\u7684\u5b9e\u9a8c\u62a5\u544a\uff0c\u8bb0\u5f55\u5b9e\u9a8c\u8fc7\u7a0b\u5e76\u622a\u56fe\uff084.1-4.4\uff09\uff0c\u5bf9\u6bcf\u4e00\u6b65\u7684\u547d\u4ee4\u4ee5\u53ca\u7ed3\u679c\u8fdb\u884c\u5fc5\u8981\u7684\u89e3\u91ca\uff0c\u8bb0\u5f55\u9047\u5230\u7684\u95ee\u9898\u548c\u5fc3\u5f97\u4f53\u4f1a\u3002</li> </ul>"},{"location":"lab0/#_10","title":"\u601d\u8003\u9898","text":"<ol> <li>\u4f7f\u7528 <code>riscv64-linux-gnu-gcc</code> \u7f16\u8bd1\u5355\u4e2a <code>.c</code> \u6587\u4ef6</li> <li>\u4f7f\u7528 <code>riscv64-linux-gnu-objdump</code> \u53cd\u6c47\u7f16 1 \u4e2d\u5f97\u5230\u7684\u7f16\u8bd1\u4ea7\u7269</li> <li>\u8c03\u8bd5 Linux \u65f6:<ol> <li>\u5728 GDB \u4e2d\u67e5\u770b\u6c47\u7f16\u4ee3\u7801</li> <li>\u5728 0x80000000 \u5904\u4e0b\u65ad\u70b9</li> <li>\u67e5\u770b\u6240\u6709\u5df2\u4e0b\u7684\u65ad\u70b9</li> <li>\u5728 0x80200000 \u5904\u4e0b\u65ad\u70b9</li> <li>\u6e05\u9664 0x80000000 \u5904\u7684\u65ad\u70b9</li> <li>\u7ee7\u7eed\u8fd0\u884c\u76f4\u5230\u89e6\u53d1 0x80200000 \u5904\u7684\u65ad\u70b9</li> <li>\u5355\u6b65\u8c03\u8bd5\u4e00\u6b21</li> <li>\u9000\u51fa QEMU</li> </ol> </li> <li>\u4f7f\u7528 <code>make</code> \u5de5\u5177\u6e05\u9664 Linux \u7684\u6784\u5efa\u4ea7\u7269</li> <li><code>vmlinux</code> \u548c <code>Image</code> \u7684\u5173\u7cfb\u548c\u533a\u522b\u662f\u4ec0\u4e48\uff1f</li> </ol>"},{"location":"lab1/","title":"Lab 1: RV64 \u5185\u6838\u5f15\u5bfc\u4e0e\u65f6\u949f\u4e2d\u65ad\u5904\u7406","text":""},{"location":"lab1/#_1","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<ul> <li>\u5b66\u4e60 RISC-V \u6c47\u7f16\uff0c \u7f16\u5199 head.S \u5b9e\u73b0\u8df3\u8f6c\u5230\u5185\u6838\u8fd0\u884c\u7684\u7b2c\u4e00\u4e2a C \u51fd\u6570\u3002</li> <li>\u5b66\u4e60 OpenSBI\uff0c\u7406\u89e3 OpenSBI \u5728\u5b9e\u9a8c\u4e2d\u6240\u8d77\u5230\u7684\u4f5c\u7528\uff0c\u5e76\u8c03\u7528 OpenSBI \u63d0\u4f9b\u7684\u63a5\u53e3\u5b8c\u6210\u5b57\u7b26\u7684\u8f93\u51fa\u3002</li> <li>\u5b66\u4e60 Makefile \u76f8\u5173\u77e5\u8bc6\uff0c \u8865\u5145\u9879\u76ee\u4e2d\u7684 Makefile \u6587\u4ef6\uff0c \u6765\u5b8c\u6210\u5bf9\u6574\u4e2a\u5de5\u7a0b\u7684\u7ba1\u7406\u3002</li> <li>\u5b66\u4e60 RISC-V \u7684 trap \u5904\u7406\u76f8\u5173\u5bc4\u5b58\u5668\u4e0e\u6307\u4ee4\uff0c\u5b8c\u6210\u5bf9 trap \u5904\u7406\u7684\u521d\u59cb\u5316\u3002</li> <li>\u7406\u89e3 CPU \u4e0a\u4e0b\u6587\u5207\u6362\u673a\u5236\uff0c\u5e76\u6b63\u786e\u5b9e\u73b0\u4e0a\u4e0b\u6587\u5207\u6362\u529f\u80fd\u3002</li> <li>\u7f16\u5199 trap \u5904\u7406\u51fd\u6570\uff0c\u5b8c\u6210\u5bf9\u7279\u5b9a trap \u7684\u5904\u7406\u3002</li> <li>\u8c03\u7528 OpenSBI \u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u5b8c\u6210\u5bf9\u65f6\u949f\u4e2d\u65ad\u4e8b\u4ef6\u7684\u8bbe\u7f6e\u3002</li> </ul>"},{"location":"lab1/#_2","title":"\u5b9e\u9a8c\u73af\u5883","text":"<ul> <li>Environment in Lab0</li> </ul>"},{"location":"lab1/#_3","title":"\u5b9e\u9a8c\u57fa\u7840\u77e5\u8bc6\u4ecb\u7ecd","text":""},{"location":"lab1/#rv64","title":"RV64 \u5185\u6838\u5f15\u5bfc","text":""},{"location":"lab1/#_4","title":"\u524d\u7f6e\u77e5\u8bc6","text":"<p>\u4e3a\u4e86\u987a\u5229\u5b8c\u6210 OS \u5b9e\u9a8c\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u524d\u7f6e\u77e5\u8bc6\u548c\u8f83\u591a\u8c03\u8bd5\u6280\u5de7\u3002\u5728 OS \u5b9e\u9a8c\u4e2d\u6211\u4eec\u9700\u8981 RISC-V\u6c47\u7f16 \u7684\u524d\u7f6e\u77e5\u8bc6\uff0c\u8bfe\u5802\u4e0a\u4e0d\u4f1a\u8bb2\u6388\uff0c\u8bf7\u540c\u5b66\u4eec\u901a\u8fc7\u9605\u8bfb\u4ee5\u4e0b\u56db\u4efd\u6587\u6863\u81ea\u5b66\uff1a</p> <ul> <li>RISC-V Assembly Programmer's Manual</li> <li>RISC-V Unprivileged Spec</li> <li>RISC-V Privileged Spec</li> <li>RISC-V \u624b\u518c\uff08\u4e2d\u6587\uff09</li> </ul> <p>\u6ce8\uff1aRISC-V \u624b\u518c\uff08\u4e2d\u6587\uff09\u4e2d\u6709\u4e00\u4e9b Typo\uff0c\u8bf7\u8c28\u614e\u53c2\u8003\u3002</p>"},{"location":"lab1/#risc-v","title":"RISC-V \u7684\u4e09\u79cd\u7279\u6743\u6a21\u5f0f","text":"<p>RISC-V \u6709\u4e09\u4e2a\u7279\u6743\u6a21\u5f0f\uff1aU (user) \u6a21\u5f0f\u3001S (supervisor) \u6a21\u5f0f\u548c M (machine) \u6a21\u5f0f\u3002</p> Level Encoding Name Abbreviation 0 00 User/Application U 1 01 Supervisor S 2 10 Reserved 3 11 Machine M <p>\u5176\u4e2d\uff1a</p> <ul> <li>M \u6a21\u5f0f\u662f\u5bf9\u786c\u4ef6\u64cd\u4f5c\u7684\u62bd\u8c61\uff0c\u6709\u6700\u9ad8\u7ea7\u522b\u7684\u6743\u9650</li> <li>S \u6a21\u5f0f\u4ecb\u4e8e M \u6a21\u5f0f\u548c U \u6a21\u5f0f\u4e4b\u95f4\uff0c\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5bf9\u5e94\u4e8e\u5185\u6838\u6001 (Kernel)\u3002\u5f53\u7528\u6237\u9700\u8981\u5185\u6838\u8d44\u6e90\u65f6\uff0c\u5411\u5185\u6838\u7533\u8bf7\uff0c\u5e76\u5207\u6362\u5230\u5185\u6838\u6001\u8fdb\u884c\u5904\u7406</li> <li>U \u6a21\u5f0f\u7528\u4e8e\u6267\u884c\u7528\u6237\u7a0b\u5e8f\uff0c\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5bf9\u5e94\u4e8e\u7528\u6237\u6001\uff0c\u6709\u6700\u4f4e\u7ea7\u522b\u7684\u6743\u9650</li> </ul>"},{"location":"lab1/#313-os","title":"3.1.3 \u4ece\u8ba1\u7b97\u673a\u4e0a\u7535\u5230 OS \u8fd0\u884c","text":"<p>\u6211\u4eec\u4ee5\u6700\u57fa\u7840\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u8ba1\u7b97\u673a\u4e0a\u7535\u540e\uff0c\u9996\u5148\u786c\u4ef6\u8fdb\u884c\u4e00\u4e9b\u57fa\u7840\u7684\u521d\u59cb\u5316\u540e\uff0c\u5c06 CPU \u7684 Program Counter \u79fb\u52a8\u5230\u5185\u5b58\u4e2d Bootloader \u7684\u8d77\u59cb\u5730\u5740\u3002 Bootloader \u662f\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u8fd0\u884c\u4e4b\u524d\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u786c\u4ef6\uff0c\u52a0\u8f7d\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u3002 \u5728 RISC-V \u67b6\u6784\u91cc\uff0cBootloader \u8fd0\u884c\u5728 M \u6a21\u5f0f\u4e0b\u3002Bootloader \u8fd0\u884c\u5b8c\u6bd5\u540e\u5c31\u4f1a\u628a\u5f53\u524d\u6a21\u5f0f\u5207\u6362\u5230 S \u6a21\u5f0f\u4e0b\uff0c\u673a\u5668\u968f\u540e\u5f00\u59cb\u8fd0\u884c Kernel\u3002</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u7b80\u5355\u800c\u8a00\u5c31\u662f\u8fd9\u6837\uff1a</p> <pre><code>   Hardware             RISC-V M Mode           RISC-V S Mode \n+------------+         +--------------+         +----------+\n|  Power On  |  ----&gt;  |  Bootloader  |  ----&gt;  |  Kernel  |\n+------------+         +--------------+         +----------+\n</code></pre>"},{"location":"lab1/#sbi-opensbi","title":"SBI \u4e0e OpenSBI","text":"<p>SBI (Supervisor Binary Interface) \u662f S-mode \u7684 Kernel \u548c M-mode \u6267\u884c\u73af\u5883\u4e4b\u95f4\u7684\u63a5\u53e3\u89c4\u8303\uff0c\u800c OpenSBI \u662f\u4e00\u4e2a RISC-V SBI \u89c4\u8303\u7684\u5f00\u6e90\u5b9e\u73b0\u3002RISC-V \u5e73\u53f0\u548c SoC \u4f9b\u5e94\u5546\u53ef\u4ee5\u81ea\u4e3b\u6269\u5c55 OpenSBI \u5b9e\u73b0\uff0c\u4ee5\u9002\u5e94\u7279\u5b9a\u7684\u786c\u4ef6\u914d\u7f6e\u3002</p> <p>\u7b80\u5355\u7684\u8bf4\uff0c\u4e3a\u4e86\u4f7f\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u9002\u914d\u4e0d\u540c\u786c\u4ef6\uff0cOpenSBI \u63d0\u51fa\u4e86\u4e00\u7cfb\u5217\u89c4\u8303\u5bf9 M-mode \u4e0b\u7684\u786c\u4ef6\u8fdb\u884c\u4e86\u7edf\u4e00\u5b9a\u4e49\uff0c\u8fd0\u884c\u5728 S-mode \u4e0b\u7684\u5185\u6838\u53ef\u4ee5\u6309\u7167\u8fd9\u4e9b\u89c4\u8303\u5bf9\u4e0d\u540c\u786c\u4ef6\u8fdb\u884c\u64cd\u4f5c\u3002</p> <p></p> <p>\u4e3a\u964d\u4f4e\u5b9e\u9a8c\u96be\u5ea6\uff0c\u6211\u4eec\u9009\u62e9 OpenSBI \u4f5c\u4e3a Bootloader \u6765\u5b8c\u6210\u673a\u5668\u542f\u52a8\u65f6 M-mode \u4e0b\u7684\u786c\u4ef6\u521d\u59cb\u5316\u4e0e\u5bc4\u5b58\u5668\u8bbe\u7f6e\uff0c\u5e76\u4f7f\u7528 OpenSBI \u6240\u63d0\u4f9b\u7684\u63a5\u53e3\u5b8c\u6210\u8bf8\u5982\u5b57\u7b26\u6253\u5370\u7684\u64cd\u4f5c\u3002</p> <p>\u5728\u5b9e\u9a8c\u4e2d\uff0cQEMU \u5df2\u7ecf\u5185\u7f6e\u4e86 OpenSBI \u4f5c\u4e3a Bootloader\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>-bios default</code> \u542f\u7528\u3002\u5982\u679c\u542f\u7528\uff0cQEMU \u4f1a\u5c06 OpenSBI \u4ee3\u7801\u52a0\u8f7d\u5230 0x80000000 \u8d77\u59cb\u5904\u3002OpenSBI \u521d\u59cb\u5316\u5b8c\u6210\u540e\uff0c\u4f1a\u8df3\u8f6c\u5230 0x80200000 \u5904\uff08\u4e5f\u5c31\u662f Kernel \u7684\u8d77\u59cb\u5730\u5740\uff09\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6240\u7f16\u8bd1\u7684\u4ee3\u7801\u9700\u8981\u653e\u5230 0x80200000 \u5904\u3002</p> <p>\u5982\u679c\u4f60\u5bf9 RISC-V \u67b6\u6784\u7684 Boot \u6d41\u7a0b\u6709\u66f4\u591a\u7684\u597d\u5947\uff0c\u53ef\u4ee5\u53c2\u8003\u8fd9\u4efd bootflow\u3002</p>"},{"location":"lab1/#makefile","title":"Makefile","text":"<p>Makefile \u53ef\u4ee5\u7b80\u5355\u7684\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5de5\u7a0b\u6587\u4ef6\u7684\u7f16\u8bd1\u89c4\u5219\uff0c\u63cf\u8ff0\u4e86\u6574\u4e2a\u5de5\u7a0b\u7684\u7f16\u8bd1\u548c\u94fe\u63a5\u6d41\u7a0b\u3002\u5728 Lab0 \u4e2d\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86 make \u5de5\u5177\u5229\u7528 Makefile \u6587\u4ef6\u6765\u7ba1\u7406\u6574\u4e2a\u5de5\u7a0b\u3002\u5728\u9605\u8bfb\u4e86 Makefile\u4ecb\u7ecd \u8fd9\u4e00\u7ae0\u8282\u540e\uff0c\u540c\u5b66\u4eec\u53ef\u4ee5\u6839\u636e\u5de5\u7a0b\u6587\u4ef6\u5939\u91cc Makefile \u7684\u4ee3\u7801\u6765\u638c\u63e1\u4e00\u4e9b\u57fa\u672c\u7684\u4f7f\u7528\u6280\u5de7\u3002</p>"},{"location":"lab1/#_5","title":"\u5185\u8054\u6c47\u7f16","text":"<p>\u5185\u8054\u6c47\u7f16\uff08\u901a\u5e38\u7531 asm \u6216\u8005 __asm__ \u5173\u952e\u5b57\u5f15\u5165\uff09\u63d0\u4f9b\u4e86\u5c06\u6c47\u7f16\u8bed\u8a00\u6e90\u4ee3\u7801\u5d4c\u5165 C \u7a0b\u5e8f\u7684\u80fd\u529b\u3002 \u5185\u8054\u6c47\u7f16\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u53c2\u8003 Assembler Instructions with C Expression Operands \u3002 \u4e0b\u9762\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u6b21\u5b9e\u9a8c\u4f1a\u7528\u5230\u7684\u4e00\u4e9b\u5185\u8054\u6c47\u7f16\u77e5\u8bc6\uff1a</p> <p>\u5185\u8054\u6c47\u7f16\u57fa\u672c\u683c\u5f0f\u4e3a\uff1a</p> <pre><code>    __asm__ volatile (\n        \"instruction1\\n\"\n        \"instruction2\\n\"\n        ......\n        ......\n        \"instruction3\\n\"\n        : [out1] \"=r\" (v1),[out2] \"=r\" (v2)\n        : [in1] \"r\" (v1), [in2] \"r\" (v2)\n        : \"memory\"\n    );\n</code></pre> <p>\u5176\u4e2d\uff0c\u4e09\u4e2a <code>:</code> \u5c06\u6c47\u7f16\u90e8\u5206\u5206\u6210\u4e86\u56db\u90e8\u5206\uff1a</p> <ul> <li>\u7b2c\u4e00\u90e8\u5206\u662f\u6c47\u7f16\u6307\u4ee4\uff0c\u6307\u4ee4\u672b\u5c3e\u9700\u8981\u6dfb\u52a0 '\\n'\u3002</li> <li>\u7b2c\u4e8c\u90e8\u5206\u662f\u8f93\u51fa\u64cd\u4f5c\u6570\u90e8\u5206\u3002</li> <li>\u7b2c\u4e09\u90e8\u5206\u662f\u8f93\u5165\u64cd\u4f5c\u6570\u90e8\u5206\u3002</li> <li>\u7b2c\u56db\u90e8\u5206\u662f\u53ef\u80fd\u5f71\u54cd\u7684\u5bc4\u5b58\u5668\u6216\u5b58\u50a8\u5668\uff0c\u7528\u4e8e\u544a\u77e5\u7f16\u8bd1\u5668\u5f53\u524d\u5185\u8054\u6c47\u7f16\u8bed\u53e5\u53ef\u80fd\u4f1a\u5bf9\u67d0\u4e9b\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u5f97\u7f16\u8bd1\u5668\u5728\u4f18\u5316\u65f6\u5c06\u5176\u56e0\u7d20\u8003\u8651\u8fdb\u53bb\u3002</li> </ul> <p>\u8fd9\u56db\u90e8\u5206\u4e2d\u540e\u4e09\u90e8\u5206\u4e0d\u662f\u5fc5\u987b\u7684\u3002</p>"},{"location":"lab1/#_6","title":"\u793a\u4f8b\u4e00","text":"<p><pre><code>unsigned long long s_example(unsigned long long type,unsigned long long arg0) {\n    unsigned long long ret_val;\n    __asm__ volatile (\n        \"mv x10, %[type]\\n\"\n        \"mv x11, %[arg0]\\n\"\n        \"mv %[ret_val], x12\"\n        : [ret_val] \"=r\" (ret_val)\n        : [type] \"r\" (type), [arg0] \"r\" (arg0)\n        : \"memory\"\n    );\n    return ret_val;\n}\n</code></pre> \u793a\u4f8b\u4e00\u4e2d\u6307\u4ee4\u90e8\u5206\uff0c<code>%[type]</code>\u3001<code>%[arg0]</code> \u4ee5\u53ca <code>%[ret_val]</code> \u4ee3\u8868\u7740\u7279\u5b9a\u7684\u5bc4\u5b58\u5668\u6216\u662f\u5185\u5b58\u3002</p> <p>\u8f93\u5165\u8f93\u51fa\u90e8\u5206\u4e2d\uff0c<code>[type] \"r\" (type)</code>\u4ee3\u8868\u7740\u5c06 <code>()</code> \u4e2d\u7684\u53d8\u91cf <code>type</code> \u653e\u5165\u5bc4\u5b58\u5668\u4e2d\uff08<code>\"r\"</code> \u6307\u653e\u5165\u5bc4\u5b58\u5668\uff0c\u5982\u679c\u662f <code>\"m\"</code> \u5219\u4e3a\u653e\u5165\u5185\u5b58\uff09\uff0c\u5e76\u4e14\u7ed1\u5b9a\u5230 <code>[]</code> \u4e2d\u547d\u540d\u7684\u7b26\u53f7\u4e2d\u53bb\u3002<code>[ret_val] \"=r\" (ret_val)</code> \u4ee3\u8868\u7740\u5c06\u6c47\u7f16\u6307\u4ee4\u4e2d <code>%[ret_val]</code> \u7684\u503c\u66f4\u65b0\u5230\u53d8\u91cf <code>ret_val</code>\u4e2d\u3002</p>"},{"location":"lab1/#_7","title":"\u793a\u4f8b\u4e8c","text":"<pre><code>#define write_csr(reg, val) ({\n    __asm__ volatile (\"csrw \" #reg \", %0\" :: \"r\"(val)); })\n</code></pre> <p>\u793a\u4f8b\u4e8c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5b8f\uff0c\u5176\u4e2d <code>%0</code> \u4ee3\u8868\u7740\u8f93\u51fa\u8f93\u5165\u90e8\u5206\u7684\u7b2c\u4e00\u4e2a\u7b26\u53f7\uff0c\u5373 <code>val</code>\u3002</p> <p><code>#reg</code> \u662fc\u8bed\u8a00\u7684\u4e00\u4e2a\u7279\u6b8a\u5b8f\u5b9a\u4e49\u8bed\u6cd5\uff0c\u76f8\u5f53\u4e8e\u5c06reg\u8fdb\u884c\u5b8f\u66ff\u6362\u5e76\u7528\u53cc\u5f15\u53f7\u5305\u88f9\u8d77\u6765\u3002</p> <p>\u4f8b\u5982 <code>write_csr(sstatus,val)</code> \u7ecf\u5b8f\u5c55\u5f00\u4f1a\u5f97\u5230\uff1a</p> <pre><code>({\n    __asm__ volatile (\"csrw \" \"sstatus\" \", %0\" :: \"r\"(val)); })\n</code></pre> <p>\u6b64\u5916\uff0c\u8fd9\u4e2a\u793a\u4f8b\u4e2d\u7684 <code>({...})</code> \u8fd8\u6d89\u53ca\u4e86\u4e00\u4e2a GNU \u5bf9 C \u7684\u6269\u5c55\uff0c\u53ef\u4ee5\u53c2\u8003 Statements and Declarations in Expressions\u3002\u590d\u5408\u8bed\u53e5\u4e2d\u7684\u6700\u540e\u4e00\u9879\u5e94\u8be5\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u540e\u8ddf\u4e00\u4e2a\u5206\u53f7 <code>;</code> \u8be5\u5b50\u8868\u8fbe\u5f0f\u7684\u503c\u7528\u4f5c\u6574\u4e2a\u8bed\u53e5\u7684\u503c\uff0c\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u7c7b\u4f3c\u201c\u8fd4\u56de\u503c\u201d\u7684\u6548\u679c\u3002</p>"},{"location":"lab1/#_8","title":"\u7f16\u8bd1\u76f8\u5173\u77e5\u8bc6\u4ecb\u7ecd","text":""},{"location":"lab1/#vmlinuxlds","title":"vmlinux.lds","text":"<p>GNU ld \u5373\u94fe\u63a5\u5668\uff0c\u7528\u4e8e\u5c06 <code>*.o</code> \u6587\u4ef6\uff08\u548c\u5e93\u6587\u4ef6\uff09\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002\u5728\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u4e2d\uff0c\u4e3a\u4e86\u6307\u5b9a\u7a0b\u5e8f\u7684\u5185\u5b58\u5e03\u5c40\uff0cld \u4f7f\u7528\u94fe\u63a5\u811a\u672c\uff08Linker Script\uff09\u6765\u63a7\u5236\uff0c\u5728 Linux Kernel \u4e2d\u94fe\u63a5\u811a\u672c\u88ab\u547d\u540d\u4e3a vmlinux.lds\u3002\u66f4\u591a\u5173\u4e8e ld \u7684\u4ecb\u7ecd\u53ef\u4ee5\u4f7f\u7528 <code>man ld</code> \u547d\u4ee4\u3002</p> <p>\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a vmlinux.lds \u7684\u4f8b\u5b50\uff1a</p> <pre><code>/* \u76ee\u6807\u67b6\u6784 */\nOUTPUT_ARCH( \"riscv\" )\n\n/* \u7a0b\u5e8f\u5165\u53e3 */\nENTRY( _start )\n\n/* kernel\u4ee3\u7801\u8d77\u59cb\u4f4d\u7f6e */\nBASE_ADDR = 0x80200000;\n\nSECTIONS\n{\n    /* . \u4ee3\u8868\u5f53\u524d\u5730\u5740 */\n    . = BASE_ADDR;\n\n    /* \u8bb0\u5f55kernel\u4ee3\u7801\u7684\u8d77\u59cb\u5730\u5740 */\n    _skernel = .;\n\n    /* ALIGN(0x1000) \u8868\u793a4KB\u5bf9\u9f50 */\n    /* _stext, _etext \u5206\u522b\u8bb0\u5f55\u4e86text\u6bb5\u7684\u8d77\u59cb\u4e0e\u7ed3\u675f\u5730\u5740 */\n    .text : ALIGN(0x1000){\n        _stext = .;\n\n        *(.text.entry)\n        *(.text .text.*)\n\n        _etext = .;\n    }\n\n    .rodata : ALIGN(0x1000){\n        _srodata = .;\n\n        *(.rodata .rodata.*)\n\n        _erodata = .;\n    }\n\n    .data : ALIGN(0x1000){\n        _sdata = .;\n\n        *(.data .data.*)\n\n        _edata = .;\n    }\n\n    .bss : ALIGN(0x1000){\n        _sbss = .;\n\n        *(.bss.stack)\n        sbss = .;\n        *(.bss .bss.*)\n\n        _ebss = .;\n    }\n\n    /* \u8bb0\u5f55kernel\u4ee3\u7801\u7684\u7ed3\u675f\u5730\u5740 */\n    _ekernel = .;\n}\n</code></pre> <p>\u9996\u5148\u6211\u4eec\u4f7f\u7528 OUTPUT_ARCH \u6307\u5b9a\u4e86\u67b6\u6784\u4e3a RISC-V \uff0c\u4e4b\u540e\u4f7f\u7528 ENTRY \u6307\u5b9a\u7a0b\u5e8f\u5165\u53e3\u70b9\u4e3a <code>_start</code> \u51fd\u6570\uff0c\u7a0b\u5e8f\u5165\u53e3\u70b9\u5373\u7a0b\u5e8f\u542f\u52a8\u65f6\u8fd0\u884c\u7684\u51fd\u6570\uff0c\u7ecf\u8fc7\u8fd9\u6837\u7684\u6307\u5b9a\u540e\u5728head.S\u4e2d\u9700\u8981\u7f16\u5199 <code>_start</code> \u51fd\u6570\uff0c\u7a0b\u5e8f\u624d\u80fd\u6b63\u5e38\u8fd0\u884c\u3002</p> <p>\u94fe\u63a5\u811a\u672c\u4e2d\u6709<code>.</code> <code>*</code>\u4e24\u4e2a\u91cd\u8981\u7684\u7b26\u53f7\u3002\u5355\u72ec\u7684<code>.</code>\u5728\u94fe\u63a5\u811a\u672c\u4ee3\u8868\u5f53\u524d\u5730\u5740\uff0c\u5b83\u6709\u8d4b\u503c\u3001\u88ab\u8d4b\u503c\u3001\u81ea\u589e\u7b49\u64cd\u4f5c\u3002\u800c<code>*</code>\u6709\u4e24\u79cd\u7528\u6cd5\uff0c\u5176\u4e00\u662f<code>*()</code>\u5728\u5927\u62ec\u53f7\u4e2d\u8868\u793a\u5c06\u6240\u6709\u6587\u4ef6\u4e2d\u7b26\u5408\u62ec\u53f7\u5185\u8981\u6c42\u7684\u6bb5\u653e\u7f6e\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u5176\u4e8c\u662f\u4f5c\u4e3a\u901a\u914d\u7b26\u3002</p> <p>\u94fe\u63a5\u811a\u672c\u7684\u4e3b\u4f53\u662fSECTIONS\u90e8\u5206\uff0c\u5728\u8fd9\u91cc\u94fe\u63a5\u811a\u672c\u7684\u5de5\u4f5c\u662f\u5c06\u7a0b\u5e8f\u7684\u5404\u4e2a\u6bb5\u6309\u987a\u5e8f\u653e\u5728\u5404\u4e2a\u5730\u5740\u4e0a\uff0c\u5728\u4f8b\u5b50\u4e2d\u5c31\u662f\u4ece0x80200000\u5730\u5740\u5f00\u59cb\u653e\u7f6e\u4e86 <code>.text</code> \uff0c <code>.rodata</code> \uff0c <code>.data</code> \u548c <code>.bss</code> \u6bb5\u3002\u5404\u4e2a\u6bb5\u7684\u4f5c\u7528\u53ef\u4ee5\u7b80\u8981\u6982\u62ec\u6210\uff1a</p> \u6bb5\u540d \u4e3b\u8981\u4f5c\u7528 .text \u901a\u5e38\u5b58\u653e\u7a0b\u5e8f\u6267\u884c\u4ee3\u7801 .rodata \u901a\u5e38\u5b58\u653e\u5e38\u91cf\u7b49\u53ea\u8bfb\u6570\u636e .data \u901a\u5e38\u5b58\u653e\u5df2\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf .bss \u901a\u5e38\u5b58\u653e\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf <p>\u5728\u94fe\u63a5\u811a\u672c\u4e2d\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7b26\u53f7\uff0c\u4f8b\u5982\u4ee5\u4e0a\u6240\u6709 <code>_s</code> \u4e0e  <code>_e</code>\u5f00\u5934\u7684\u7b26\u53f7\u90fd\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u3002</p> <p>\u66f4\u591a\u6709\u5173\u94fe\u63a5\u811a\u672c\u8bed\u6cd5\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\u3002</p>"},{"location":"lab1/#vmlinux","title":"vmlinux","text":"<p>vmlinux \u901a\u5e38\u6307 Linux Kernel \u7f16\u8bd1\u51fa\u7684\u53ef\u6267\u884c\u6587\u4ef6 (Executable and Linkable Format / ELF)\uff0c\u7279\u70b9\u662f\u672a\u538b\u7f29\u7684\uff0c\u5e26\u8c03\u8bd5\u4fe1\u606f\u548c\u7b26\u53f7\u8868\u7684\u3002\u5728\u6574\u5957 OS \u5b9e\u9a8c\u4e2d\uff0cvmlinux \u901a\u5e38\u6307\u5c06\u4f60\u7684\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1\uff0c\u94fe\u63a5\u540e\u751f\u6210\u7684\u53ef\u4f9b QEMU \u8fd0\u884c\u7684 RV64 \u67b6\u6784\u7a0b\u5e8f\u3002\u5982\u679c\u5bf9 vmlinux \u4f7f\u7528 <code>file</code> \u547d\u4ee4\uff0c\u4f60\u5c06\u770b\u5230\u5982\u4e0b\u4fe1\u606f\uff1a</p> <pre><code>$ file vmlinux \nvmlinux: ELF 64-bit LSB executable, UCB RISC-V, version 1 (SYSV), statically linked, not stripped\n</code></pre>"},{"location":"lab1/#systemmap","title":"System.map","text":"<p>System.map \u662f\u5185\u6838\u7b26\u53f7\u8868\uff08Kernel Symbol Table\uff09\u6587\u4ef6\uff0c\u662f\u5b58\u50a8\u4e86\u6240\u6709\u5185\u6838\u7b26\u53f7\u53ca\u5176\u5730\u5740\u7684\u4e00\u4e2a\u5217\u8868\u3002\u201c\u7b26\u53f7\u201d\u901a\u5e38\u6307\u7684\u662f\u51fd\u6570\u540d\uff0c\u5168\u5c40\u53d8\u91cf\u540d\u7b49\u7b49\u3002\u4f7f\u7528 <code>nm vmlinux</code> \u547d\u4ee4\u5373\u53ef\u6253\u5370 vmlinux \u7684\u7b26\u53f7\u8868\uff0c\u7b26\u53f7\u8868\u7684\u6837\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>0000000000000800 A __vdso_rt_sigreturn\nffffffe000000000 T __init_begin\nffffffe000000000 T _sinittext\nffffffe000000000 T _start\nffffffe000000040 T _start_kernel\nffffffe000000076 t clear_bss\nffffffe000000080 t clear_bss_done\nffffffe0000000c0 t relocate\nffffffe00000017c t set_reset_devices\nffffffe000000190 t debug_kernel\n</code></pre> <p>\u4f7f\u7528 System.map \u53ef\u4ee5\u65b9\u4fbf\u5730\u8bfb\u51fa\u51fd\u6570\u6216\u53d8\u91cf\u7684\u5730\u5740\uff0c\u4e3a Debug \u63d0\u4f9b\u4e86\u65b9\u4fbf\u3002</p>"},{"location":"lab1/#rv64_1","title":"RV64 \u65f6\u949f\u4e2d\u65ad\u5904\u7406","text":"<p>\u5982\u679c\u5b8c\u6210\u4e86 3.1 \u4e2d\u7684 RV64 \u5185\u6838\u5f15\u5bfc\uff0c\u6211\u4eec\u80fd\u6210\u529f\u5730\u5c06\u4e00\u4e2a\u6700\u7b80\u5355\u7684 OS \u542f\u52a8\u8d77\u6765\uff0c \u4f46\u8fd8\u6ca1\u6709\u529e\u6cd5\u4e0e\u4e4b\u4ea4\u4e92\u3002\u6211\u4eec\u5728\u8bfe\u7a0b\u4e2d\u8bb2\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u4e4b\u540e\u7531\u4e8b\u4ef6\uff08 event \uff09\u9a71\u52a8\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u7684\u540e\u534a\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u5f15\u5165\u4e00\u79cd\u91cd\u8981\u7684\u4e8b\u4ef6 trap\uff0ctrap \u7ed9\u4e86 OS \u4e0e\u786c\u4ef6\u3001\u8f6f\u4ef6\u4ea4\u4e92\u7684\u80fd\u529b\u3002\u5728 3.1 \u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86\u5728 RISC-V \u4e2d\u6709\u4e09\u79cd\u7279\u6743\u7ea7 ( M \u6001\u3001 S \u6001\u3001 U \u6001 )\uff0c \u5728 Boot \u9636\u6bb5\uff0c OpenSBI \u5df2\u7ecf\u5e2e\u6211\u4eec\u5c06 M \u6001\u7684 trap \u5904\u7406\u8fdb\u884c\u4e86\u521d\u59cb\u5316\uff0c\u8fd9\u4e00\u90e8\u5206\u4e0d\u9700\u8981\u6211\u4eec\u518d\u53bb\u5b9e\u73b0\uff0c\u56e0\u6b64\u540e\u7eed\u6211\u4eec\u91cd\u70b9\u5173\u6ce8 S \u6001\u7684 trap \u5904\u7406\u3002</p>"},{"location":"lab1/#risc-v-interrupt-exception","title":"RISC-V \u4e2d\u7684 Interrupt \u548c Exception","text":""},{"location":"lab1/#interrupt-exception","title":"\u4ec0\u4e48\u662f Interrupt \u548c Exception","text":"<p>We use the term exception to refer to an unusual condition occurring at run time associated with an instruction in the current RISC-V hart. We use the term interrupt to refer to an external asynchronous event that may cause a RISC-V hart to experience an unexpected transfer of control. We use the term trap to refer to the transfer of control to a trap handler caused by either an exception or an interrupt.</p> <p>\u4e0a\u8ff0\u662f RISC-V Unprivileged Spec 1.6 \u8282\u4e2d\u5bf9\u4e8e <code>Trap</code>\u3001 <code>Interrupt</code> \u4e0e <code>Exception</code> \u7684\u63cf\u8ff0\u3002\u603b\u7ed3\u8d77\u6765 <code>Interrupt</code> \u4e0e <code>Exception</code> \u7684\u4e3b\u8981\u533a\u522b\u5982\u4e0b\u8868\uff1a</p> Interrupt Exception Hardware generate Software generate These are asynchronous external requests for service (like keyboard or printer needs service). These are synchronous internal requests for service based upon abnormal events (think of illegal instructions, illegal address, overflow etc). These are normal events and shouldn\u2019t interfere with the normal running of a computer. These are abnormal events and often result in the termination of a program <p>\u4e0a\u6587\u4e2d\u7684 <code>Trap</code> \u63cf\u8ff0\u7684\u662f\u4e00\u79cd\u63a7\u5236\u8f6c\u79fb\u7684\u8fc7\u7a0b, \u8fd9\u4e2a\u8fc7\u7a0b\u662f\u7531 <code>Interrupt</code> \u6216\u8005 <code>Exception</code> \u5f15\u8d77\u7684\u3002\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u7ea6\u5b9a <code>Trap</code> \u4e3a <code>Interrput</code> \u4e0e <code>Exception</code> \u7684\u603b\u79f0\u3002</p>"},{"location":"lab1/#_9","title":"\u76f8\u5173\u5bc4\u5b58\u5668","text":"<p>\u9664\u4e8632\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\u4e4b\u5916\uff0cRISC-V \u67b6\u6784\u8fd8\u6709\u5927\u91cf\u7684 \u63a7\u5236\u72b6\u6001\u5bc4\u5b58\u5668 <code>Control and Status Registers(CSRs)</code>\uff0c\u4e0b\u9762\u5c06\u4ecb\u7ecd\u51e0\u4e2a\u548c trap \u673a\u5236\u76f8\u5173\u7684\u91cd\u8981\u5bc4\u5b58\u5668\u3002</p> <p>Supervisor Mode \u4e0b trap \u76f8\u5173\u5bc4\u5bc4\u5b58\u5668:</p> <ul> <li><code>sstatus</code> ( Supervisor Status Register )\u4e2d\u5b58\u5728\u4e00\u4e2a SIE ( Supervisor Interrupt Enable ) \u6bd4\u7279\u4f4d\uff0c\u5f53\u8be5\u6bd4\u7279\u4f4d\u8bbe\u7f6e\u4e3a 1 \u65f6\uff0c\u4f1a\u54cd\u5e94\u6240\u6709\u7684 S \u6001 trap\uff0c \u5426\u5219\u5c06\u4f1a\u7981\u7528\u6240\u6709 S \u6001 trap\u3002</li> <li><code>sie</code> ( Supervisor Interrupt Eable Register )\u3002\u5728 RISC-V \u4e2d\uff0c<code>Interrupt</code> \u88ab\u5212\u5206\u4e3a\u4e09\u7c7b <code>Software Interrupt</code>\uff0c <code>Timer Interrupt</code>\uff0c <code>External Interrupt</code>\u3002\u5728\u5f00\u542f\u4e86 <code>sstatus[SIE]</code>\u4e4b\u540e\uff0c\u7cfb\u7edf\u4f1a\u6839\u636e <code>sie</code> \u4e2d\u7684\u76f8\u5173\u6bd4\u7279\u4f4d\u6765\u51b3\u5b9a\u662f\u5426\u5bf9\u8be5 <code>Interrupt</code> \u8fdb\u884c\u5904\u7406\u3002</li> <li><code>stvec</code> ( Supervisor Trap Vector Base Address Register ) \u5373\u6240\u8c13\u7684\u201c\u4e2d\u65ad\u5411\u91cf\u8868\u57fa\u5740\u201d\u3002 <code>stvec</code> \u6709\u4e24\u79cd\u6a21\u5f0f\uff1a<code>Direct \u6a21\u5f0f</code>\uff0c\u9002\u7528\u4e8e\u7cfb\u7edf\u4e2d\u53ea\u6709\u4e00\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f, \u5176\u6307\u5411\u4e2d\u65ad\u5904\u7406\u5165\u53e3\u51fd\u6570 \uff08 \u672c\u6b21\u5b9e\u9a8c\u4e2d\u6211\u4eec\u6240\u7528\u7684\u6a21\u5f0f \uff09\u3002<code>Vectored \u6a21\u5f0f</code>\uff0c\u6307\u5411\u4e2d\u65ad\u5411\u91cf\u8868\uff0c \u9002\u7528\u4e8e\u7cfb\u7edf\u4e2d\u6709\u591a\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f \uff08 \u8be5\u6a21\u5f0f\u53ef\u4ee5\u53c2\u8003 RISC-V \u5185\u6838\u6e90\u7801 \uff09\u3002</li> <li><code>scause</code> ( Supervisor Cause Register ), \u4f1a\u8bb0\u5f55 trap \u53d1\u751f\u7684\u539f\u56e0\uff0c\u8fd8\u4f1a\u8bb0\u5f55\u8be5 trap \u662f <code>Interrupt</code> \u8fd8\u662f <code>Exception</code>\u3002</li> <li><code>sepc</code> ( Supervisor Exception Program Counter ), \u4f1a\u8bb0\u5f55\u89e6\u53d1 exception \u7684\u90a3\u6761\u6307\u4ee4\u7684\u5730\u5740\u3002</li> </ul> <p>Machine Mode \u5f02\u5e38\u76f8\u5173\u5bc4\u5bc4\u5b58\u5668:</p> <ul> <li>\u7c7b\u4f3c\u4e8e Supervisor Mode\uff0c Machine Mode \u4e5f\u6709\u76f8\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\uff0c\u4f46\u7531\u4e8e\u672c\u5b9e\u9a8c\u540c\u5b66\u4e0d\u9700\u8981\u64cd\u4f5c\u8fd9\u4e9b\u5bc4\u5b58\u5668\uff0c\u6545\u4e0d\u5728\u6b64\u4f5c\u4ecb\u7ecd\u3002</li> </ul> <p>\u4ee5\u4e0a\u5bc4\u5b58\u5668\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u540c\u5b66\u4eec\u53c2\u8003 RISC-V Privileged Spec</p>"},{"location":"lab1/#_10","title":"\u76f8\u5173\u7279\u6743\u6307\u4ee4","text":"<ul> <li><code>ecall</code> ( Environment Call )\uff0c\u5f53\u6211\u4eec\u5728 S \u6001\u6267\u884c\u8fd9\u6761\u6307\u4ee4\u65f6\uff0c\u4f1a\u89e6\u53d1\u4e00\u4e2a <code>ecall-from-s-mode-exception</code>\uff0c\u4ece\u800c\u8fdb\u5165 M Mode \u4e0b\u7684\u5904\u7406\u6d41\u7a0b( \u5982\u8bbe\u7f6e\u5b9a\u65f6\u5668\u7b49 )\uff1b\u5f53\u6211\u4eec\u5728 U \u6001\u6267\u884c\u8fd9\u6761\u6307\u4ee4\u65f6\uff0c\u4f1a\u89e6\u53d1\u4e00\u4e2a <code>ecall-from-u-mode-exception</code>\uff0c\u4ece\u800c\u8fdb\u5165 S Mode \u4e0b\u7684\u5904\u7406\u6d41\u7a0b ( \u5e38\u7528\u6765\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528 )\u3002</li> <li><code>sret</code> \u7528\u4e8e S \u6001 trap \u8fd4\u56de, \u901a\u8fc7 <code>sepc</code> \u6765\u8bbe\u7f6e <code>pc</code> \u7684\u503c\uff0c \u8fd4\u56de\u5230\u4e4b\u524d\u7a0b\u5e8f\u7ee7\u7eed\u8fd0\u884c\u3002</li> </ul> <p>\u4ee5\u4e0a\u6307\u4ee4\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u540c\u5b66\u4eec\u53c2\u8003 RISC-V Privileged Spec</p>"},{"location":"lab1/#_11","title":"\u4e0a\u4e0b\u6587\u5904\u7406","text":"<p>\u7531\u4e8e\u5728\u5904\u7406 trap \u65f6\uff0c\u6709\u53ef\u80fd\u4f1a\u6539\u53d8\u7cfb\u7edf\u7684\u72b6\u6001\u3002\u6240\u4ee5\u5728\u771f\u6b63\u5904\u7406 trap \u4e4b\u524d\uff0c\u6211\u4eec\u6709\u5fc5\u8981\u5bf9\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001\u8fdb\u884c\u4fdd\u5b58\uff0c\u5728\u5904\u7406\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u5c06\u7cfb\u7edf\u6062\u590d\u81f3\u539f\u5148\u7684\u72b6\u6001\uff0c\u5c31\u53ef\u4ee5\u786e\u4fdd\u4e4b\u524d\u7684\u7a0b\u5e8f\u7ee7\u7eed\u6b63\u5e38\u8fd0\u884c\u3002 \u8fd9\u91cc\u7684\u7cfb\u7edf\u72b6\u6001\u901a\u5e38\u662f\u6307\u5bc4\u5b58\u5668\uff0c\u8fd9\u4e9b\u5bc4\u5b58\u5668\u4e5f\u53eb\u505aCPU\u7684\u4e0a\u4e0b\u6587 ( <code>Context</code> ).</p>"},{"location":"lab1/#trap","title":"trap \u5904\u7406\u7a0b\u5e8f","text":"<p>trap \u5904\u7406\u7a0b\u5e8f\u6839\u636e <code>scause</code> \u7684\u503c\uff0c \u8fdb\u5165\u4e0d\u540c\u7684\u5904\u7406\u903b\u8f91\uff0c\u5728\u672c\u6b21\u8bd5\u9a8c\u4e2d\u6211\u4eec\u9700\u8981\u5173\u5fc3\u7684\u53ea\u6709 <code>Superviosr Timer Interrupt</code> \u3002</p>"},{"location":"lab1/#_12","title":"\u65f6\u949f\u4e2d\u65ad","text":"<p>\u65f6\u949f\u4e2d\u65ad\u9700\u8981 CPU \u786c\u4ef6\u7684\u652f\u6301\u3002CPU \u4ee5\u201c\u65f6\u949f\u5468\u671f\u201d\u4e3a\u5de5\u4f5c\u7684\u57fa\u672c\u65f6\u95f4\u5355\u4f4d\uff0c\u5bf9\u903b\u8f91\u95e8\u7684\u65f6\u5e8f\u7535\u8def\u8fdb\u884c\u540c\u6b65\u3002\u800c\u65f6\u949f\u4e2d\u65ad\u5b9e\u9645\u4e0a\u5c31\u662f\u201c\u6bcf\u9694\u82e5\u5e72\u4e2a\u65f6\u949f\u5468\u671f\u6267\u884c\u4e00\u6b21\u7684\u7a0b\u5e8f\u201d\u3002\u4e0b\u9762\u4ecb\u7ecd\u4e0e\u65f6\u949f\u4e2d\u65ad\u76f8\u5173\u7684\u5bc4\u5b58\u5668\u4ee5\u53ca\u5982\u4f55\u4ea7\u751f\u65f6\u949f\u4e2d\u65ad\u3002</p> <ul> <li><code>mtime</code> \u4e0e <code>mtimecmp</code> ( Machine Timer Register )\u3002 <code>mtime</code> \u662f\u4e00\u4e2a\u5b9e\u65f6\u8ba1\u65f6\u5668\uff0c \u7531\u786c\u4ef6\u4ee5\u6052\u5b9a\u7684\u9891\u7387\u81ea\u589e\u3002<code>mtimecmp</code> \u4e2d\u4fdd\u5b58\u7740\u4e0b\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u53d1\u751f\u7684\u65f6\u95f4\u70b9\uff0c\u5f53 <code>mtime</code> \u7684\u503c\u5927\u4e8e\u6216\u7b49\u4e8e <code>mtimecmp</code> \u7684\u503c\uff0c\u7cfb\u7edf\u5c31\u4f1a\u89e6\u53d1\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0 <code>mtimecmp</code> \u4e2d\u7684\u503c\uff0c\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u4e0b\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u7684\u89e6\u53d1\u70b9\u3002 <code>OpenSBI</code> \u5df2\u7ecf\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u66f4\u65b0 <code>mtimecmp</code> \u7684\u63a5\u53e3 <code>sbi_set_timer</code> ( \u89c1 <code>lab1</code> 4.2.3 \u8282 )\u3002</li> <li><code>mcounteren</code> ( Counter-Enable Registers )\u3002\u7531\u4e8e <code>mtime</code> \u662f\u5c5e\u4e8e M \u6001\u7684\u5bc4\u5b58\u5668\uff0c\u6211\u4eec\u5728 S \u6001\u65e0\u6cd5\u76f4\u63a5\u5bf9\u5176\u8bfb\u5199\uff0c \u5e78\u8fd0\u7684\u662f OpenSBI \u5728 M \u6001\u5df2\u7ecf\u901a\u8fc7\u8bbe\u7f6e <code>mcounteren</code> \u5bc4\u5b58\u5668\u7684 <code>TM</code> \u6bd4\u7279\u4f4d\uff0c \u8ba9\u6211\u4eec\u53ef\u4ee5\u5728 S \u6001\u4e2d\u53ef\u4ee5\u901a\u8fc7 <code>time</code> \u8fd9\u4e2a\u53ea\u8bfb\u5bc4\u5b58\u5668\u8bfb\u53d6\u5230 <code>mtime</code>\u7684\u5f53\u524d\u503c\uff0c\u76f8\u5173\u6c47\u7f16\u6307\u4ee4\u662f <code>rdtime</code>\u3002</li> </ul> <p>\u4ee5\u4e0a\u5bc4\u5b58\u5668\u7684\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u540c\u5b66\u4eec\u53c2\u8003 RISC-V Privileged Spec</p>"},{"location":"lab1/#_13","title":"\u5b9e\u9a8c\u6b65\u9aa4","text":""},{"location":"lab1/#_14","title":"\u51c6\u5907\u5de5\u7a0b","text":"<p>\u4ece repo \u540c\u6b65\u5b9e\u9a8c\u4ee3\u7801\u6846\u67b6\u3002\u4e3a\u4e86\u51cf\u5c11\u5927\u5bb6\u7684\u5de5\u4f5c\u91cf\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u63d0\u4f9b\u4e86\u7b80\u5316\u7248\u7684 <code>printk</code> \u6765\u8f93\u51fa\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002</p> <pre><code>\u251c\u2500\u2500 arch\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 riscv\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 include\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 defs.h\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 sbi.h\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 kernel\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 head.S\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 Makefile\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 sbi.c\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 vmlinux.lds\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 Makefile\n\u251c\u2500\u2500 include\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 printk.h\n|   \u251c\u2500\u2500 stddef.h\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 types.h\n\u251c\u2500\u2500 init\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 main.c\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Makefile\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 test.c\n\u251c\u2500\u2500 lib\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Makefile\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 printk.c\n\u2514\u2500\u2500 Makefile\n</code></pre> <p>\u5b8c\u6210 RV64 \u5185\u6838\u5f15\u5bfc\uff0c\u9700\u8981\u5b8c\u5584\u4ee5\u4e0b\u6587\u4ef6\uff1a</p> <ul> <li><code>arch/riscv/kernel/head.S</code></li> <li><code>lib/Makefile</code></li> <li><code>arch/riscv/kernel/sbi.c</code></li> <li><code>arch/riscv/include/defs.h</code></li> </ul> <p>\u5b8c\u6210 RV64 \u65f6\u949f\u4e2d\u65ad\u5904\u7406\uff0c\u9700\u8981\u5b8c\u5584 / \u6dfb\u52a0\u4ee5\u4e0b\u6587\u4ef6\uff1a</p> <ul> <li><code>arch/riscv/kernel/head.S</code></li> <li><code>arch/riscv/kernel/entry.S</code></li> <li><code>arch/riscv/kernel/trap.c</code></li> <li><code>arch/riscv/kernel/clock.c</code></li> </ul>"},{"location":"lab1/#rv64_2","title":"RV64 \u5185\u6838\u5f15\u5bfc","text":""},{"location":"lab1/#heads","title":"\u7f16\u5199head.S","text":"<p>\u5b66\u4e60riscv\u7684\u6c47\u7f16\u3002</p> <p>\u5b8c\u6210 arch/riscv/kernel/head.S \u3002\u6211\u4eec\u9996\u5148\u4e3a\u5373\u5c06\u8fd0\u884c\u7684\u7b2c\u4e00\u4e2a C \u51fd\u6570\u8bbe\u7f6e\u7a0b\u5e8f\u6808\uff08\u6808\u7684\u5927\u5c0f\u53ef\u4ee5\u8bbe\u7f6e\u4e3a4KB\uff09\uff0c\u5e76\u5c06\u8be5\u6808\u653e\u7f6e\u5728<code>.bss.stack</code> \u6bb5\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u8df3\u8f6c\u6307\u4ee4\uff0c\u8df3\u8f6c\u81f3 main.c \u4e2d\u7684 <code>start_kernel</code> \u51fd\u6570\u5373\u53ef\u3002</p>"},{"location":"lab1/#makefile_1","title":"\u5b8c\u5584 Makefile \u811a\u672c","text":"<p>\u9605\u8bfb\u6587\u6863\u4e2d\u5173\u4e8e Makefile \u7684\u7ae0\u8282\uff0c\u4ee5\u53ca\u5de5\u7a0b\u6587\u4ef6\u4e2d\u7684 Makefile \u6587\u4ef6\uff0c\u6839\u636e\u6ce8\u91ca\u5b66\u4f1a Makefile \u7684\u4f7f\u7528\u89c4\u5219\u540e\uff0c\u8865\u5145 <code>lib/Makefile</code>\uff0c\u4f7f\u5de5\u7a0b\u5f97\u4ee5\u7f16\u8bd1\u3002  </p> <p>\u5b8c\u6210\u6b64\u6b65\u540e\u5728\u5de5\u7a0b\u6839\u6587\u4ef6\u5939\u6267\u884c make\uff0c\u53ef\u4ee5\u770b\u5230\u5de5\u7a0b\u6210\u529f\u7f16\u8bd1\u51fa vmlinux\u3002</p>"},{"location":"lab1/#sbic","title":"\u8865\u5145 <code>sbi.c</code>","text":"<p>OpenSBI \u5728 M \u6001\uff0c\u4e3a S \u6001\u63d0\u4f9b\u4e86\u591a\u79cd\u63a5\u53e3\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32\u8f93\u5165\u8f93\u51fa\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u8c03\u7528 OpenSBI \u63a5\u53e3\u7684\u529f\u80fd\u3002\u7ed9\u51fa\u51fd\u6570\u5b9a\u4e49\u5982\u4e0b\uff1a <pre><code>struct sbiret {\n    long error;\n    long value;\n};\n\nstruct sbiret sbi_ecall(int ext, int fid, \n                    uint64 arg0, uint64 arg1, uint64 arg2,\n                    uint64 arg3, uint64 arg4, uint64 arg5);\n</code></pre></p> <p>sbi_ecall \u51fd\u6570\u4e2d\uff0c\u9700\u8981\u5b8c\u6210\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <ol> <li>\u5c06 ext (Extension ID) \u653e\u5165\u5bc4\u5b58\u5668 a7 \u4e2d\uff0cfid (Function ID) \u653e\u5165\u5bc4\u5b58\u5668 a6 \u4e2d\uff0c\u5c06 arg0 ~ arg5 \u653e\u5165\u5bc4\u5b58\u5668 a0 ~ a5 \u4e2d\u3002</li> <li>\u4f7f\u7528 <code>ecall</code> \u6307\u4ee4\u3002<code>ecall</code> \u4e4b\u540e\u7cfb\u7edf\u4f1a\u8fdb\u5165 M \u6a21\u5f0f\uff0c\u4e4b\u540e OpenSBI \u4f1a\u5b8c\u6210\u76f8\u5173\u64cd\u4f5c\u3002</li> <li>OpenSBI \u7684\u8fd4\u56de\u7ed3\u679c\u4f1a\u5b58\u653e\u5728\u5bc4\u5b58\u5668 a0 \uff0c a1 \u4e2d\uff0c\u5176\u4e2d a0 \u4e3a error code\uff0c a1 \u4e3a\u8fd4\u56de\u503c\uff0c \u6211\u4eec\u7528 sbiret \u6765\u63a5\u53d7\u8fd9\u4e24\u4e2a\u8fd4\u56de\u503c\u3002</li> </ol> <p>\u540c\u5b66\u4eec\u53ef\u4ee5\u53c2\u7167\u5185\u8054\u6c47\u7f16\u7684\u793a\u4f8b\u4e00\u5b8c\u6210\u8be5\u51fd\u6570\u7684\u7f16\u5199\u3002 \u7f16\u5199\u6210\u529f\u540e\uff0c\u8c03\u7528 <code>sbi_ecall(0x1, 0x0, 0x30, 0, 0, 0, 0, 0)</code> \u5c06\u4f1a\u8f93\u51fa\u5b57\u7b26'0'\u3002\u5176\u4e2d<code>0x1</code>\u4ee3\u8868 <code>sbi_console_putchar</code> \u7684 ExtensionID\uff0c<code>0x0</code>\u4ee3\u8868FunctionID, 0x30\u4ee3\u8868'0'\u7684ascii\u503c\uff0c\u5176\u4f59\u53c2\u6570\u586b0\u3002</p> <p>\u8bf7\u5728 <code>arch/riscv/kernel/sbi.c</code> \u4e2d\u8865\u5145 <code>sbi_ecall()</code>\u3002</p> <p>\u4e0b\u9762\u5217\u51fa\u4e86\u4e00\u4e9b\u5728\u540e\u7eed\u7684\u5b9e\u9a8c\u4e2d\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u7684\u529f\u80fd\u3002</p> Function Name Function ID Extension ID sbi_set_timer \uff08\u8bbe\u7f6e\u65f6\u949f\u76f8\u5173\u5bc4\u5b58\u5668\uff09 0 0x00 sbi_console_putchar \uff08\u6253\u5370\u5b57\u7b26\uff09 0 0x01 sbi_console_getchar \uff08\u63a5\u6536\u5b57\u7b26\uff09 0 0x02 sbi_shutdown \uff08\u5173\u673a\uff09 0 0x08"},{"location":"lab1/#defs","title":"\u4fee\u6539 defs","text":"<p>\u5185\u8054\u6c47\u7f16\u7684\u76f8\u5173\u77e5\u8bc6\u89c1\u5185\u8054\u6c47\u7f16\u3002 </p> <p>\u5b66\u4e60\u4e86\u89e3\u4e86\u4ee5\u4e0a\u77e5\u8bc6\u540e\uff0c\u8865\u5145 <code>arch/riscv/include/defs.h</code> \u4e2d\u7684\u4ee3\u7801\u5b8c\u6210\uff1a</p> <p>\u8865\u5145\u5b8c <code>read_csr</code> \u8fd9\u4e2a\u5b8f\u5b9a\u4e49\u3002\u8fd9\u91cc\u6709\u76f8\u5173\u793a\u4f8b\u3002</p> <p>\u5982\u679c\u5b8c\u6210\u5230\u6b64\u5904\uff0c\u4f60\u5c31\u5df2\u7ecf\u53ef\u4ee5\u5728 qemu \u8fd0\u884c <code>make</code> \u5f97\u5230\u7684\u5185\u6838\uff0c\u4ece\u800c\u81f3\u5c11\u5b8c\u6210\u601d\u8003\u9898 1\uff5e4 \u4e86\u3002</p>"},{"location":"lab1/#rv64_3","title":"RV64 \u65f6\u949f\u4e2d\u65ad\u5904\u7406","text":"<ul> <li> <p>\u51c6\u5907\u5de5\u4f5c\uff0c\u5148\u4fee\u6539 <code>vmlinux.lds</code> \u4ee5\u53ca <code>head.S</code> <pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; \u539f\u5148\u7684 vmlinux.lds\n...\n\n.text : ALIGN(0x1000){\n    _stext = .;\n\n    *(.text.entry)\n    *(.text .text.*)\n\n    _etext = .;\n}\n\n...\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; \u4fee\u6539\u4e4b\u540e\u7684 vmlinux.lds\n...\n\n.text : ALIGN(0x1000){\n    _stext = .;\n\n    *(.text.init)      &lt;- \u52a0\u5165\u4e86 .text.init\n    *(.text.entry)     &lt;- \u4e4b\u540e\u6211\u4eec\u5b9e\u73b0 \u4e2d\u65ad\u5904\u7406\u903b\u8f91 \u4f1a\u653e\u7f6e\u5728 .text.entry\n    *(.text .text.*)\n\n    _etext = .;\n}\n\n...\n</code></pre></p> <pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; \u539f\u5148\u7684 head.S\nextern start_kernel\n\n    .section .text.entry        &lt;- \u4e4b\u524d\u7684 _start \u653e\u7f6e\u5728 .text.entry section       \n    .globl _start\n_start:\n    ...\n\n    .section .bss.stack\n    .globl boot_stack\nboot_stack:\n    .space 4096\n\n    .globl boot_stack_top\nboot_stack_top:\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; \u4fee\u6539\u4e4b\u540e\u7684 head.S\nextern start_kernel\n\n    .section .text.init         &lt;- \u5c06 _start \u653e\u5165.text.init section \n    .globl _start\n_start:\n    ...\n\n    .section .bss.stack\n    .globl boot_stack\nboot_stack:\n    .space 4096\n\n    .globl boot_stack_top\nboot_stack_top:\n</code></pre> </li> </ul>"},{"location":"lab1/#trap_1","title":"\u5f00\u542f trap \u5904\u7406","text":"<p>\u5728\u8fd0\u884c <code>start_kernel</code> \u4e4b\u524d\uff0c\u6211\u4eec\u8981\u5bf9\u4e0a\u9762\u63d0\u5230\u7684 CSR \u8fdb\u884c\u521d\u59cb\u5316\uff0c\u521d\u59cb\u5316\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u8bbe\u7f6e <code>stvec</code>\uff0c \u5c06 <code>_traps</code> ( <code>_traps</code> \u5728 4.3.2 \u4e2d\u5b9e\u73b0 ) \u6240\u8868\u793a\u7684\u5730\u5740\u5199\u5165 <code>stvec</code>\uff0c\u8fd9\u91cc\u6211\u4eec\u91c7\u7528 <code>Direct \u6a21\u5f0f</code>, \u800c <code>_traps</code> \u5219\u662f trap \u5904\u7406\u5165\u53e3\u51fd\u6570\u7684\u57fa\u5730\u5740\u3002</li> <li>\u5f00\u542f\u65f6\u949f\u4e2d\u65ad\uff0c\u5c06 <code>sie[STIE]</code> \u7f6e 1\u3002</li> <li>\u8bbe\u7f6e\u7b2c\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\uff0c\u53c2\u8003 <code>clock_set_next_event()</code> ( <code>clock_set_next_event()</code> \u5728 4.3.4 \u4e2d\u4ecb\u7ecd ) \u4e2d\u7684\u903b\u8f91\u7528\u6c47\u7f16\u5b9e\u73b0\u3002</li> <li>\u5f00\u542f S \u6001\u4e0b\u7684\u4e2d\u65ad\u54cd\u5e94\uff0c \u5c06 <code>sstatus[SIE]</code> \u7f6e 1\u3002</li> </ol> <p>\u6309\u7167\u4e0b\u65b9\u6a21\u7248\u4fee\u6539 <code>arch/riscv/kernel/head.S</code>\uff0c \u5e76\u8865\u5168 <code>_start</code> \u4e2d\u7684\u903b\u8f91\u3002</p> <pre><code>.extern start_kernel\n\n    .section .text.init\n    .globl _start\n_start:\n    # ----------------------\n    # -  initialize stack  -\n    # ----------------------\n\n    # YOUR CODE HERE\n\n    # ----------------------\n\n        # set stvec = _traps\n\n    # ----------------------\n\n        # set sie[STIE] = 1\n\n    # ----------------------\n\n        # set first time interrupt\n\n    # ----------------------\n\n        # set sstatus[SIE] = 1\n\n    # ----------------------\n\n    # ----------------------\n    # - your previous code -\n    # ----------------------\n\n    ...\n</code></pre> <p>Debug \u63d0\u793a\uff1a\u53ef\u4ee5\u5148\u4e0d\u5b9e\u73b0 stvec \u548c first time interrupt\uff0c\u5148\u5173\u6ce8 sie \u548c sstatus \u662f\u5426\u8bbe\u7f6e\u6b63\u786e\u3002</p>"},{"location":"lab1/#_15","title":"\u5b9e\u73b0\u4e0a\u4e0b\u6587\u5207\u6362","text":"<p>\u6211\u4eec\u8981\u4f7f\u7528\u6c47\u7f16\u5b9e\u73b0\u4e0a\u4e0b\u6587\u5207\u6362\u673a\u5236\uff0c \u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u5728 <code>arch/riscv/kernel/</code> \u76ee\u5f55\u4e0b\u6dfb\u52a0 <code>entry.S</code> \u6587\u4ef6\u3002</li> <li>\u4fdd\u5b58 CPU \u7684\u5bc4\u5b58\u5668\uff08\u4e0a\u4e0b\u6587\uff09\u5230\u5185\u5b58\u4e2d\uff08\u6808\u4e0a\uff09\u3002</li> <li>\u5c06 <code>scause</code> \u548c <code>sepc</code> \u4e2d\u7684\u503c\u4f20\u5165 trap \u5904\u7406\u51fd\u6570 <code>trap_handler</code> ( <code>trap_handler</code> \u5728 4.3.3 \u4e2d\u4ecb\u7ecd ) \uff0c\u6211\u4eec\u5c06\u4f1a\u5728 <code>trap_handler</code> \u4e2d\u5b9e\u73b0\u5bf9 trap \u7684\u5904\u7406\u3002</li> <li>\u5728\u5b8c\u6210\u5bf9 trap \u7684\u5904\u7406\u4e4b\u540e\uff0c \u6211\u4eec\u4ece\u5185\u5b58\u4e2d\uff08\u6808\u4e0a\uff09\u6062\u590dCPU\u7684\u5bc4\u5b58\u5668\uff08\u4e0a\u4e0b\u6587\uff09\u3002</li> <li>\u4ece trap \u4e2d\u8fd4\u56de\u3002</li> </ol> <p>\u6309\u7167\u4e0b\u65b9\u6a21\u7248\u4fee\u6539 <code>arch/riscv/kernel/entry.S</code>\uff0c \u5e76\u8865\u5168 <code>_traps</code> \u4e2d\u7684\u903b\u8f91\u3002 <pre><code>    .section .text.entry\n    .align 2\n    .globl _traps \n_traps:\n    # YOUR CODE HERE\n    # -----------\n\n        # 1. save 32 registers and sepc to stack\n\n    # -----------\n\n        # 2. call trap_handler\n\n    # -----------\n\n        # 3. restore sepc and 32 registers (x2(sp) should be restore last) from stack\n\n    # -----------\n\n        # 4. return from trap\n\n    # -----------\n</code></pre></p> <p>Debug \u63d0\u793a\uff1a \u53ef\u4ee5\u5148\u4e0d\u5b9e\u73b0 call trap_handler\uff0c \u5148\u5b9e\u73b0\u4e0a\u4e0b\u6587\u5207\u6362\u903b\u8f91\u3002\u901a\u8fc7 gdb \u8ddf\u8e2a\u5404\u4e2a\u5bc4\u5b58\u5668\uff0c\u786e\u4fdd\u4e0a\u4e0b\u6587\u7684 save \u4e0e restore \u6b63\u786e\u5b9e\u73b0\u5e76\u6b63\u786e\u8fd4\u56de\u3002</p>"},{"location":"lab1/#trap_2","title":"\u5b9e\u73b0 trap \u5904\u7406\u51fd\u6570","text":"<ol> <li>\u5728 <code>arch/riscv/kernel/</code> \u76ee\u5f55\u4e0b\u6dfb\u52a0 <code>trap.c</code> \u6587\u4ef6\u3002</li> <li>\u5728 <code>trap.c</code> \u4e2d\u5b9e\u73b0 trap \u5904\u7406\u51fd\u6570 <code>trap_handler()</code>, \u5176\u63a5\u6536\u7684\u4e24\u4e2a\u53c2\u6570\u5206\u522b\u662f <code>scause</code> \u548c <code>sepc</code> \u4e24\u4e2a\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u3002 <pre><code>// trap.c \n\nvoid trap_handler(unsigned long scause, unsigned long sepc) {\n    // \u901a\u8fc7 `scause` \u5224\u65adtrap\u7c7b\u578b\n    // \u5982\u679c\u662finterrupt \u5224\u65ad\u662f\u5426\u662ftimer interrupt\n    // \u5982\u679c\u662ftimer interrupt \u5219\u6253\u5370\u8f93\u51fa\u76f8\u5173\u4fe1\u606f, \u5e76\u901a\u8fc7 `clock_set_next_event()` \u8bbe\u7f6e\u4e0b\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\n    // `clock_set_next_event()` \u89c1 4.3.4 \u8282\n    // \u5176\u4ed6interrupt / exception \u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\n\n    // YOUR CODE HERE\n}\n</code></pre></li> </ol>"},{"location":"lab1/#_16","title":"\u5b9e\u73b0\u65f6\u949f\u4e2d\u65ad\u76f8\u5173\u51fd\u6570","text":"<ol> <li>\u5728 <code>arch/riscv/kernel/</code> \u76ee\u5f55\u4e0b\u6dfb\u52a0 <code>clock.c</code> \u6587\u4ef6\u3002</li> <li>\u5728 <code>clock.c</code> \u4e2d\u5b9e\u73b0 get_cycles ( ) : \u4f7f\u7528 <code>rdtime</code> \u6c47\u7f16\u6307\u4ee4\u83b7\u5f97\u5f53\u524d <code>time</code> \u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u3002</li> <li>\u5728 <code>clock.c</code> \u4e2d\u5b9e\u73b0 clock_set_next_event ( ) : \u8c03\u7528 <code>sbi_ecall</code>\uff0c\u8bbe\u7f6e\u4e0b\u4e00\u4e2a\u65f6\u949f\u4e2d\u65ad\u4e8b\u4ef6\u3002 <pre><code>// clock.c\n\n// QEMU\u4e2d\u65f6\u949f\u7684\u9891\u7387\u662f10MHz, \u4e5f\u5c31\u662f1\u79d2\u949f\u76f8\u5f53\u4e8e10000000\u4e2a\u65f6\u949f\u5468\u671f\u3002\nunsigned long TIMECLOCK = 10000000;\n\nunsigned long get_cycles() {\n    // \u7f16\u5199\u5185\u8054\u6c47\u7f16\uff0c\u4f7f\u7528 rdtime \u83b7\u53d6 time \u5bc4\u5b58\u5668\u4e2d (\u4e5f\u5c31\u662fmtime \u5bc4\u5b58\u5668 )\u7684\u503c\u5e76\u8fd4\u56de\n    // YOUR CODE HERE\n\n}\n\nvoid clock_set_next_event() {\n    // \u4e0b\u4e00\u6b21 \u65f6\u949f\u4e2d\u65ad \u7684\u65f6\u95f4\u70b9\n    unsigned long next = get_cycles() + TIMECLOCK;\n\n    // \u4f7f\u7528 sbi_ecall \u6765\u5b8c\u6210\u5bf9\u4e0b\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u7684\u8bbe\u7f6e\n    // YOUR CODE HERE\n} \n</code></pre></li> </ol>"},{"location":"lab1/#_17","title":"\u7f16\u8bd1\u53ca\u6d4b\u8bd5","text":"<p>\u7531\u4e8e\u52a0\u5165\u4e86\u4e00\u4e9b\u65b0\u7684 .c \u6587\u4ef6\uff0c\u53ef\u80fd\u9700\u8981\u4fee\u6539\u4e00\u4e9bMakefile\u6587\u4ef6\uff0c\u8bf7\u540c\u5b66\u81ea\u5df1\u5c1d\u8bd5\u4fee\u6539\uff0c\u4f7f\u9879\u76ee\u53ef\u4ee5\u7f16\u8bd1\u5e76\u8fd0\u884c\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u6b63\u786e\u5b9e\u73b0\u7684\u8f93\u51fa\u6837\u4f8b\u3002\uff08 \u4ec5\u4f9b\u53c2\u8003 \uff09 <pre><code>kernel is running!\n[S] Supervisor Mode Timer Interrupt\nkernel is running!\n[S] Supervisor Mode Timer Interrupt\nkernel is running!\n[S] Supervisor Mode Timer Interrupt\nkernel is running!\n[S] Supervisor Mode Timer Interrupt\nkernel is running!\n[S] Supervisor Mode Timer Interrupt\nkernel is running!\n[S] Supervisor Mode Timer Interrupt\nkernel is running!\n[S] Supervisor Mode Timer Interrupt\nkernel is running!\n[S] Supervisor Mode Timer Interrupt\nkernel is running!\n[S] Supervisor Mode Timer Interrupt\n</code></pre></p>"},{"location":"lab1/#aarch64","title":"\u5176\u4ed6\u67b6\u6784\u7684\u4ea4\u53c9\u7f16\u8bd1\u2014\u2014\u4ee5 Aarch64 \u4e3a\u4f8b","text":""},{"location":"lab1/#_18","title":"\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u7684\u5b89\u88c5","text":"<p>\u90a3\u4e48\u5982\u4f55\u5b89\u88c5\u4e0d\u540c\u67b6\u6784\u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u5462\uff1f\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u7528 Ubuntu \u81ea\u5e26\u7684\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668 <code>apt</code>\uff0c\u5148\u627e\u5230\u6709\u4ec0\u4e48\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u53ef\u4ee5\u88c5 <pre><code># \u641c\u7d22\u5305\u542b aarch64 \u7684\u8f6f\u4ef6\u5305\uff0c\u4e00\u822c\u662f\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\napt-cache search aarch64\n...\n# \u641c\u7d22\u7ed3\u679c\u4e2d\u5982\u679c\u6709 gcc-xxx-linux-gnu\uff0c\u4e00\u822c\u9700\u6c42\u4e0b\u88c5\u5b83\u5c31\u884c\u4e86\uff08\u5177\u4f53\u60c5\u51b5\u5177\u4f53\u5206\u6790\u54c8\uff09\nsudo apt install gcc-aarch64-linux-gnu\n</code></pre> \u73b0\u5728\u6211\u4eec\u6709 aarch64 \u7684\u4ea4\u53c9\u7f16\u8bd1\u5de5\u5177\u94fe\u4e86\uff0c\u5f00\u59cb\u7f16\u8bd1\u5427\uff01</p>"},{"location":"lab1/#_19","title":"\u600e\u4e48\u83b7\u5f97\u7f16\u8bd1\u8fc7\u7a0b\u7684\u4e2d\u95f4\u4ea7\u7269","text":"<p>\u6ce8\u610f\uff1a\u8fd9\u91cc\u8bf4\u7684\u201c\u7f16\u8bd1\u8fc7\u7a0b\u201d\u5305\u62ec\u9884\u5904\u7406\u3001\u7f16\u8bd1\u3001\u6c47\u7f16\u3001\u94fe\u63a5</p> <p>\u5bf9\u4e8e Linux kernel\uff0c\u7f16\u8bd1\u547d\u4ee4\u548c\u9009\u9879\u5728\u4e0d\u540c\u67b6\u6784\u4e4b\u95f4\u90fd\u5927\u540c\u5c0f\u5f02\uff0c\u4e00\u822c\u9075\u5faa\u4ee5\u4e0b\u5f62\u5f0f\uff08\u7c7b\u6bd4 lab0 \u505a\u8fc7\u7684 riscv64 \u5373\u53ef\uff09 <pre><code>make ARCH=xxx CROSS_COMPILE=some-certain-arch- &lt;options&gt; &lt;files&gt;\n</code></pre></p> <p>\u6bd4\u5982\uff0c\u60f3\u83b7\u5f97 kernel \u4e2d <code>xxx.c</code> \u7684\u9884\u5904\u7406\u4ea7\u7269\uff08\u56de\u5fc6\u4e00\u4e0b\u9884\u5904\u7406\u505a\u4e86\u4ec0\u4e48\uff09<code>xxx.i</code>\uff0c\u6211\u4eec\u53ef\u4ee5 <pre><code># \u5148 config\uff08\u6839\u636e\u5b9e\u9645\u9700\u6c42\uff0c\u8fd9\u91cc\u4e0d\u4e00\u5b9a\u662f defconfig\uff0c\u53ef\u9009\u7684 config \u53ef\u4ee5\u5728 `arch/&lt;ARCH&gt;/configs` \u4e0b\u627e\u5230\uff09\nmake ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- defconfig\n\n# \u7136\u540e\u6307\u5b9a\u8981\u751f\u6210\u7684\u6587\u4ef6\nmake ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- &lt;path/to/file(no suffix)&gt;.i\n</code></pre></p> <p>\u8bfe\u4ef6\u91cc\u4e5f\u7ed9\u51fa\u4e86 <code>make</code> \u5de5\u5177\u3002</p>"},{"location":"lab1/#_20","title":"\u601d\u8003\u9898","text":"<ol> <li>\u8bf7\u603b\u7ed3\u4e00\u4e0b RISC-V \u7684 calling convention\uff0c\u5e76\u89e3\u91ca Caller / Callee Saved Register \u6709\u4ec0\u4e48\u533a\u522b\uff1f</li> <li>\u7f16\u8bd1\u4e4b\u540e\uff0c\u901a\u8fc7 System.map \u67e5\u770b vmlinux.lds \u4e2d\u81ea\u5b9a\u4e49\u7b26\u53f7\u7684\u503c\uff08\u622a\u56fe\uff09\u3002</li> <li>\u7528 <code>csr_read</code> \u5b8f\u8bfb\u53d6 <code>sstatus</code> \u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5bf9\u7167 RISC-V \u624b\u518c\u89e3\u91ca\u5176\u542b\u4e49\uff08\u622a\u56fe\uff09\u3002</li> <li> <p>\u7528 <code>csr_write</code> \u5b8f\u5411 <code>sscratch</code> \u5bc4\u5b58\u5668\u5199\u5165\u6570\u636e\uff0c\u5e76\u9a8c\u8bc1\u662f\u5426\u5199\u5165\u6210\u529f\uff08\u622a\u56fe\uff09\u3002</p> </li> <li> <p>Detail your steps about how to get <code>arch/arm64/kernel/sys.i</code></p> </li> <li>Find system call table of Linux v6.0 for <code>ARM32</code>, <code>RISC-V(32 bit)</code>, <code>RISC-V(64 bit)</code>, <code>x86(32 bit)</code>, <code>x86_64</code> List source code file, the whole system call table with macro expanded, screenshot every step.<ul> <li>Tips: \u5f00\u59cb\u4e4b\u524d\u53ef\u4ee5\u5148\u56de\u987e\u4e00\u4e0b\u7f16\u8bd1\u5de5\u5177\u3002</li> </ul> </li> <li>Explain what is ELF file? Try readelf and objdump command on an ELF file, give screenshot of the output. Run an ELF file and cat <code>/proc/PID/maps</code> to give its memory layout.</li> <li>\u5728\u6211\u4eec\u4f7f\u7528make run\u65f6\uff0c OpenSBI \u4f1a\u4ea7\u751f\u5982\u4e0b\u8f93\u51fa:</li> </ol> <pre><code>    OpenSBI v0.9\n     ____                    _____ ____ _____\n    / __ \\                  / ____|  _ \\_   _|\n   | |  | |_ __   ___ _ __ | (___ | |_) || |\n   | |  | | '_ \\ / _ \\ '_ \\ \\___ \\|  _ &lt; | |\n   | |__| | |_) |  __/ | | |____) | |_) || |_\n    \\____/| .__/ \\___|_| |_|_____/|____/_____|\n          | |\n          |_|\n\n    ......\n\n    Boot HART MIDELEG         : 0x0000000000000222\n    Boot HART MEDELEG         : 0x000000000000b109\n\n    ......\n</code></pre> <p>\u901a\u8fc7\u67e5\u770b <code>RISC-V Privileged Spec</code> \u4e2d\u7684 <code>medeleg</code> \u548c <code>mideleg</code> \uff0c\u89e3\u91ca\u4e0a\u9762 <code>MIDELEG</code> \u503c\u7684\u542b\u4e49\u3002</p> <p>5, 6, 7, 8 need to have screenshots.</p>"},{"location":"lab1/#_21","title":"\u4f5c\u4e1a\u63d0\u4ea4","text":"<p>\u5b9e\u9a8c\u62a5\u544a\u9700\u8981\u5305\u542b\u5bf9\u6240\u6709\u601d\u8003\u9898\u7684\u56de\u7b54\uff0c\u6709\u622a\u56fe\u8981\u6c42\u7684\u8981\u622a\u56fe\u3002</p> <p>\u540c\u5b66\u9700\u8981\u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\u4ee5\u53ca\u6574\u4e2a\u5de5\u7a0b\u4ee3\u7801\u3002\u5728\u63d0\u4ea4\u524d\u8bf7\u4f7f\u7528 <code>make clean</code> \u6e05\u9664\u6240\u6709\u6784\u5efa\u4ea7\u7269\u3002</p>"},{"location":"lab2/","title":"Lab 2: RV64 \u5185\u6838\u7ebf\u7a0b\u8c03\u5ea6","text":""},{"location":"lab2/#_1","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<ul> <li>\u4e86\u89e3\u7ebf\u7a0b\u6982\u5ff5\uff0c\u5e76\u5b66\u4e60\u7ebf\u7a0b\u76f8\u5173\u7ed3\u6784\u4f53\uff0c\u5e76\u5b9e\u73b0\u7ebf\u7a0b\u7684\u521d\u59cb\u5316\u529f\u80fd\u3002</li> <li>\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u65f6\u949f\u4e2d\u65ad\u6765\u5b9e\u73b0\u7ebf\u7a0b\u7684\u8c03\u5ea6\u3002</li> <li>\u4e86\u89e3\u7ebf\u7a0b\u5207\u6362\u539f\u7406\uff0c\u5e76\u5b9e\u73b0\u7ebf\u7a0b\u7684\u5207\u6362\u3002</li> <li>\u638c\u63e1\u7b80\u5355\u7684\u7ebf\u7a0b\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5e76\u5b8c\u6210\u4e24\u79cd\u7b80\u5355\u8c03\u5ea6\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002</li> </ul>"},{"location":"lab2/#_2","title":"\u5b9e\u9a8c\u73af\u5883","text":"<ul> <li>Environment in previous labs</li> </ul>"},{"location":"lab2/#_3","title":"\u80cc\u666f\u77e5\u8bc6","text":""},{"location":"lab2/#_4","title":"\u524d\u8a00","text":"<p>\u5728 lab1 \u4e2d\uff0c\u6211\u4eec\u5229\u7528 trap \u8d4b\u4e88\u4e86 OS \u4e0e\u8f6f\u4ef6\uff0c\u786c\u4ef6\u7684\u4ea4\u4e92\u80fd\u529b\u3002\u4f46\u662f\u76ee\u524d\u6211\u4eec\u7684 OS \u8fd8\u4e0d\u5177\u5907\u591a\u8fdb\u7a0b\u8c03\u5ea6\u4ee5\u53ca\u5e76\u53d1\u6267\u884c\u7684\u80fd\u529b\u3002\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u5c06\u5229\u7528\u65f6\u949f\u4e2d\u65ad\uff0c\u6765\u5b9e\u73b0\u591a\u8fdb\u7a0b\u7684\u8c03\u5ea6\u4ee5\u4f7f\u5f97\u591a\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\u3002</p>"},{"location":"lab2/#_5","title":"\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b","text":"<p>\u6e90\u4ee3\u7801\u7ecf\u7f16\u8bd1\u5668\u4e00\u7cfb\u5217\u5904\u7406\uff08\u7f16\u8bd1\u3001\u94fe\u63a5\u3001\u4f18\u5316\u7b49\uff09\u540e\u5f97\u5230\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u7a0b\u5e8f (Program)\u3002\u800c\u901a\u4fd7\u5730\u8bf4\uff0c\u8fdb\u7a0b\u5c31\u662f\u6b63\u5728\u8fd0\u884c\u5e76\u4f7f\u7528\u8ba1\u7b97\u673a\u8d44\u6e90\u7684\u7a0b\u5e8f\u3002\u8fdb\u7a0b\u4e0e\u7a0b\u5e8f\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u8fdb\u7a0b\u662f\u4e00\u4e2a\u52a8\u6001\u7684\u6982\u5ff5\uff0c\u5176\u4e0d\u4ec5\u9700\u8981\u5c06\u5176\u8fd0\u884c\u7684\u7a0b\u5e8f\u7684\u4ee3\u7801/\u6570\u636e\u7b49\u52a0\u8f7d\u5230\u5185\u5b58\u7a7a\u95f4\u4e2d\uff0c\u8fd8\u9700\u8981\u62e5\u6709\u81ea\u5df1\u7684\u8fd0\u884c\u6808\u3002\u540c\u65f6\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5bf9\u5e94\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u5f80\u5f80\u5177\u6709\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u5171\u4eab\u4e00\u5757\u5185\u5b58\uff0c\u4f46\u662f\u5374\u6709\u4e0d\u540c\u7684CPU\u6267\u884c\u72b6\u6001\u3002</p> <p>\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u91c7\u7528 single-threaded process \u6a21\u578b\uff0c\u5373\u4e00\u4e2a\u8fdb\u7a0b\u5bf9\u5e94\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u4e0d\u505a\u660e\u663e\u533a\u5206\u3002</p>"},{"location":"lab2/#_6","title":"\u7ebf\u7a0b\u76f8\u5173\u5c5e\u6027","text":"<p>\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u6240\u4fdd\u5b58\u7684\u4fe1\u606f\u90fd\u4e0d\u540c\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u63d0\u4f9b\u4e00\u79cd\u57fa\u7840\u7684\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u4f1a\u5305\u62ec\uff1a</p> <ul> <li>\u7ebf\u7a0bID\uff1a\u7528\u4e8e\u552f\u4e00\u786e\u8ba4\u4e00\u4e2a\u7ebf\u7a0b\u3002</li> <li>\u8fd0\u884c\u6808\uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u8fd0\u884c\u6808\uff0c\u4fdd\u5b58\u8fd0\u884c\u65f6\u7684\u6570\u636e\u3002</li> <li>\u6267\u884c\u4e0a\u4e0b\u6587\uff1a\u5f53\u7ebf\u7a0b\u4e0d\u5728\u6267\u884c\u72b6\u6001\u65f6\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u5176\u4e0a\u4e0b\u6587\uff08\u5176\u5b9e\u5c31\u662f\u72b6\u6001\u5bc4\u5b58\u5668\u7684\u503c\uff09\uff0c\u8fd9\u6837\u4e4b\u540e\u624d\u80fd\u591f\u5c06\u5176\u6062\u590d\uff0c\u7ee7\u7eed\u8fd0\u884c\u3002</li> <li>\u8fd0\u884c\u65f6\u95f4\u7247\uff1a\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u7684\u8fd0\u884c\u65f6\u95f4\u3002</li> <li>\u4f18\u5148\u7ea7\uff1a\u5728\u4f18\u5148\u7ea7\u76f8\u5173\u8c03\u5ea6\u65f6\uff0c\u914d\u5408\u8c03\u5ea6\u7b97\u6cd5\uff0c\u6765\u9009\u51fa\u4e0b\u4e00\u4e2a\u6267\u884c\u7684\u7ebf\u7a0b\u3002</li> </ul>"},{"location":"lab2/#_7","title":"\u7ebf\u7a0b\u5207\u6362\u6d41\u7a0b\u56fe","text":"<pre><code>           Process 1         Operating System            Process 2\n               +\n               |                                            X\n P1 executing  |                                            X\n               |                                            X\n               v Timer Interrupt Trap                       X\n               +----------------------&gt;                     X\n                                      +                     X\n               X                  do_timer()                X\n               X                      +                     X\n               X                  schedule()                X\n               X                      +                     X\n               X              save state to PCB1            X\n               X                      +                     X\n               X           restore state from PCB2          X\n               X                      +                     X\n               X                      |                     X\n               X                      v Timer Interrupt Ret\n               X                      +---------------------&gt;\n               X                                            |\n               X                                            |  P2 executing\n               X                                            |\n               X                       Timer Interrupt Trap v\n               X                      &lt;---------------------+\n               X                      +\n               X                  do_timer()\n               X                      +\n               X                  schedule()\n               X                      +\n               X              save state to PCB2\n               X                      +\n               X           restore state from PCB1\n               X                      +\n               X                      |\n                 Timer Interrupt Ret  v\n               &lt;----------------------+\n               |\n P1 executing  |\n               |\n               v\n</code></pre> <ul> <li>\u5728\u6bcf\u6b21\u5904\u7406\u65f6\u949f\u4e2d\u65ad\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9996\u5148\u4f1a\u5c06\u5f53\u524d\u7ebf\u7a0b\u7684\u8fd0\u884c\u5269\u4f59\u65f6\u95f4\u51cf\u5c11\u4e00\u4e2a\u5355\u4f4d\u3002\u4e4b\u540e\u6839\u636e\u8c03\u5ea6\u7b97\u6cd5\u6765\u786e\u5b9a\u662f\u7ee7\u7eed\u8fd0\u884c\u8fd8\u662f\u8c03\u5ea6\u5176\u4ed6\u7ebf\u7a0b\u6765\u6267\u884c\u3002</li> <li>\u5728\u8fdb\u7a0b\u8c03\u5ea6\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u904d\u5386\u6240\u6709\u53ef\u8fd0\u884c\u7684\u7ebf\u7a0b\uff0c\u6309\u7167\u4e00\u5b9a\u7684\u8c03\u5ea6\u7b97\u6cd5\u9009\u51fa\u4e0b\u4e00\u4e2a\u6267\u884c\u7684\u7ebf\u7a0b\u3002\u6700\u7ec8\u5c06\u9009\u62e9\u5f97\u5230\u7684\u7ebf\u7a0b\u4e0e\u5f53\u524d\u7ebf\u7a0b\u5207\u6362\u3002</li> <li>\u5728\u5207\u6362\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u5f53\u524d\u7ebf\u7a0b\u7684\u6267\u884c\u4e0a\u4e0b\u6587\uff0c\u518d\u5c06\u5c06\u8981\u6267\u884c\u7ebf\u7a0b\u7684\u4e0a\u4e0b\u6587\u8f7d\u5165\u5230\u76f8\u5173\u5bc4\u5b58\u5668\u4e2d\uff0c\u81f3\u6b64\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u7ebf\u7a0b\u7684\u8c03\u5ea6\u4e0e\u5207\u6362\u3002</li> </ul>"},{"location":"lab2/#_8","title":"\u5b9e\u9a8c\u6b65\u9aa4","text":""},{"location":"lab2/#_9","title":"\u51c6\u5907\u5de5\u7a0b","text":"<ul> <li>\u6b64\u6b21\u5b9e\u9a8c\u57fa\u4e8e lab1 \u540c\u5b66\u6240\u5b9e\u73b0\u7684\u4ee3\u7801\u8fdb\u884c\u3002</li> <li> <p>\u4ece <code>repo</code> \u540c\u6b65\u4ee5\u4e0b\u4ee3\u7801: <code>rand.h/rand.c</code>\uff0c<code>string.h/string.c</code>\uff0c<code>mm.h/mm.c</code>\uff0c<code>proc.h/proc.c</code>\uff0c<code>test.h/test_schedule.h</code>\uff0c<code>schedule_null.c/schedule_test.c</code> \u4ee5\u53ca\u65b0\u589e\u7684\u4e00\u4e9b Makefile \u7684\u53d8\u5316\u3002\u5e76\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5c06\u8fd9\u4e9b\u6587\u4ef6\u6b63\u786e\u653e\u7f6e\u3002</p> <ul> <li><code>mm.h/mm.c</code> \u63d0\u4f9b\u4e86\u7b80\u5355\u7684\u7269\u7406\u5185\u5b58\u7ba1\u7406\u63a5\u53e3</li> <li><code>rand.h/rand.c</code> \u63d0\u4f9b\u4e86 <code>rand()</code> \u63a5\u53e3\u7528\u4ee5\u63d0\u4f9b\u4f2a\u968f\u673a\u6570\u5e8f\u5217</li> <li><code>string.h/string.c</code> \u63d0\u4f9b\u4e86 <code>memset</code> \u63a5\u53e3\u7528\u4ee5\u521d\u59cb\u5316\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4</li> <li><code>proc.h/proc.c</code> \u662f\u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u5173\u6ce8\u7684\u91cd\u70b9</li> <li><code>test.h/test_schedule.h</code> \u63d0\u4f9b\u4e86\u672c\u6b21\u5b9e\u9a8c\u5355\u5143\u6d4b\u8bd5\u7684\u6d4b\u8bd5\u63a5\u53e3</li> <li><code>schedule_null.c/schedule_test.c</code> \u63d0\u4f9b\u4e86\u5728 \u201c\u52a0\u6d4b\u8bd5 / \u4e0d\u52a0\u6d4b\u8bd5\u201d \u4e24\u79cd\u60c5\u51b5\u4e0b\u6d4b\u8bd5\u63a5\u53e3\u7684\u4ee3\u7801\u5b9e\u4f8b</li> </ul> <pre><code>.\n\u251c\u2500\u2500 arch\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 riscv\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 include\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 mm.h\n|       |   \u2514\u2500\u2500 proc.h\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 kernel\n\u2502\u00a0\u00a0      \u00a0\u00a0 \u2514\u2500\u2500 mm.c\n|           \u2514\u2500\u2500 proc.c\n\u251c\u2500\u2500 include\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 rand.h\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 string.h\n|   \u251c\u2500\u2500 test.h\n|   \u2514\u2500\u2500 schedule_test.h\n|\n\u251c\u2500\u2500 test\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 schedule_null.c\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 schedule_test.c\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 Makefile\n|\n\u251c\u2500\u2500 lib\n|\u00a0  \u251c\u2500\u2500 rand.c\n|\u00a0  \u2514\u2500\u2500 string.c\n|\n\u2514\u2500\u2500 Makefile\n</code></pre> </li> <li> <p>\u5728 lab2 \u4e2d\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u7269\u7406\u5185\u5b58\u7ba1\u7406\u7684\u63a5\u53e3\uff0c\u5728\u6b64\u6211\u4eec\u63d0\u4f9b\u4e86 <code>kalloc</code> \u63a5\u53e3 ( \u89c1<code>mm.c</code> ) \u7ed9\u540c\u5b66\u3002\u540c\u5b66\u53ef\u4ee5\u7528 <code>kalloc</code> \u6765\u7533\u8bf7 4KB \u7684\u7269\u7406\u9875\u3002\u7531\u4e8e\u5f15\u5165\u4e86\u7b80\u5355\u7684\u7269\u7406\u5185\u5b58\u7ba1\u7406\uff0c\u9700\u8981\u5728 <code>_start</code> \u7684\u9002\u5f53\u4f4d\u7f6e\u8c03\u7528 <code>mm_init</code>\uff0c\u6765\u521d\u59cb\u5316\u5185\u5b58\u7ba1\u7406\u7cfb\u7edf\uff0c\u5e76\u4e14\u5728\u521d\u59cb\u5316\u65f6\u9700\u8981\u7528\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u5b8f\uff0c\u9700\u8981\u4fee\u6539 <code>defs.h</code>\uff0c\u5728 <code>defs.h</code> \u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a     <pre><code>#define PHY_START 0x0000000080000000\n#define PHY_SIZE  128 * 1024 * 1024 // 128MB\uff0cQEMU \u9ed8\u8ba4\u5185\u5b58\u5927\u5c0f\n#define PHY_END   (PHY_START + PHY_SIZE)\n\n#define PGSIZE 0x1000 // 4KB\n#define PGROUNDUP(addr) ((addr + PGSIZE - 1) &amp; (~(PGSIZE - 1)))\n#define PGROUNDDOWN(addr) (addr &amp; (~(PGSIZE - 1)))\n</code></pre></p> </li> <li>\u8bf7\u5728\u6dfb\u52a0/\u4fee\u6539\u4e0a\u8ff0\u6587\u4ef6\u4ee3\u7801\u4e4b\u540e\uff0c\u786e\u4fdd\u5de5\u7a0b\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u4e4b\u540e\u518d\u5f00\u59cb\u5b9e\u73b0 <code>lab2</code> (\u6709\u53ef\u80fd\u9700\u8981\u540c\u5b66\u81ea\u5df1\u8c03\u6574\u4e00\u4e9b\u4f4d\u7f6e\u7684 <code>Makefile</code> \u548c\u4e00\u4e9b\u6e90\u4ee3\u7801\u6587\u4ef6\u4e2d\u5934\u6587\u4ef6\u7684\u5f15\u5165)\u3002</li> <li>\u5728 lab2 \u4e2d\u9700\u8981\u540c\u5b66\u9700\u8981\u4fee\u6539\u5e76\u8865\u5168 <code>arch/riscv/include/proc.h</code> <code>arch/riscv/kernel/proc.c</code> \u4e24\u4e2a\u6587\u4ef6\u3002</li> <li>\u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u5b9e\u73b0\u4e24\u79cd\u4e0d\u540c\u7684\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5982\u4f55\u63a7\u5236\u4ee3\u7801\u903b\u8f91\u89c1 4.4</li> </ul>"},{"location":"lab2/#proch","title":"<code>proc.h</code> \u6570\u636e\u7ed3\u6784\u5b9a\u4e49","text":"<pre><code>// arch/riscv/include/proc.h\n\n#include \"types.h\"\n\n#define NR_TASKS  (1 + 31) // \u7528\u4e8e\u63a7\u5236 \u6700\u5927\u7ebf\u7a0b\u6570\u91cf \uff08idle \u7ebf\u7a0b + 31 \u5185\u6838\u7ebf\u7a0b\uff09\n\n#define TASK_RUNNING    0 // \u4e3a\u4e86\u7b80\u5316\u5b9e\u9a8c\uff0c\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u53ea\u6709\u4e00\u79cd\u72b6\u6001\n\n#define PRIORITY_MIN 1\n#define PRIORITY_MAX 10\n\n/* \u7528\u4e8e\u8bb0\u5f55 `\u7ebf\u7a0b` \u7684 `\u5185\u6838\u6808\u4e0e\u7528\u6237\u6808\u6307\u9488` */\n/* (lab2 \u4e2d\u65e0\u9700\u8003\u8651\uff0c\u5728\u8fd9\u91cc\u5f15\u5165\u662f\u4e3a\u4e86\u4e4b\u540e\u5b9e\u9a8c\u7684\u4f7f\u7528) */\nstruct thread_info {\n    uint64 kernel_sp;\n    uint64 user_sp;\n};\n\n/* \u7ebf\u7a0b\u72b6\u6001\u6bb5\u6570\u636e\u7ed3\u6784 */\nstruct thread_struct {\n    uint64 ra;\n    uint64 sp;\n    uint64 s[12];\n};\n\n/* \u7ebf\u7a0b\u6570\u636e\u7ed3\u6784 */\nstruct task_struct {\n    struct thread_info thread_info;\n    uint64 state;    // \u7ebf\u7a0b\u72b6\u6001\n    uint64 counter;  // \u8fd0\u884c\u5269\u4f59\u65f6\u95f4\n    uint64 priority; // \u8fd0\u884c\u4f18\u5148\u7ea7 1\u6700\u4f4e 10\u6700\u9ad8\n    uint64 pid;      // \u7ebf\u7a0bid\n\n    struct thread_struct thread;\n};\n\n/* \u7ebf\u7a0b\u521d\u59cb\u5316 \u521b\u5efa NR_TASKS \u4e2a\u7ebf\u7a0b */\nvoid task_init();\n\n/* \u5728\u65f6\u949f\u4e2d\u65ad\u5904\u7406\u4e2d\u88ab\u8c03\u7528 \u7528\u4e8e\u5224\u65ad\u662f\u5426\u9700\u8981\u8fdb\u884c\u8c03\u5ea6 */\nvoid do_timer();\n\n/* \u8c03\u5ea6\u7a0b\u5e8f \u9009\u62e9\u51fa\u4e0b\u4e00\u4e2a\u8fd0\u884c\u7684\u7ebf\u7a0b */\nvoid schedule();\n\n/* \u7ebf\u7a0b\u5207\u6362\u5165\u53e3\u51fd\u6570*/\nvoid switch_to(struct task_struct* next);\n\n/* dummy funciton: \u4e00\u4e2a\u5faa\u73af\u7a0b\u5e8f\uff0c\u5faa\u73af\u8f93\u51fa\u81ea\u5df1\u7684 pid \u4ee5\u53ca\u4e00\u4e2a\u81ea\u589e\u7684\u5c40\u90e8\u53d8\u91cf */\nvoid dummy();\n</code></pre>"},{"location":"lab2/#_10","title":"\u7ebf\u7a0b\u8c03\u5ea6\u529f\u80fd\u5b9e\u73b0","text":""},{"location":"lab2/#_11","title":"\u7ebf\u7a0b\u521d\u59cb\u5316","text":"<ul> <li>\u5728\u521d\u59cb\u5316\u7ebf\u7a0b\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53c2\u8003Linux v0.11\u4e2d\u7684\u5b9e\u73b0\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u4e00\u4e2a 4KB \u7684\u7269\u7406\u9875\uff0c\u6211\u4eec\u5c06 <code>task_struct</code> \u5b58\u653e\u5728\u8be5\u9875\u7684\u4f4e\u5730\u5740\u90e8\u5206\uff0c\u5c06\u7ebf\u7a0b\u7684\u6808\u6307\u9488 <code>sp</code> \u6307\u5411\u8be5\u9875\u7684\u9ad8\u5730\u5740\u3002\u5177\u4f53\u5185\u5b58\u5e03\u5c40\u5982\u4e0b\u56fe\u6240\u793a\uff1a     <pre><code>                    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u25c4\u2500\u2500\u2500 High Address\n                    \u2502             \u2502\n                    \u2502    stack    \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n              sp \u2500\u2500\u25ba\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n                    \u2502      \u2502      \u2502\n                    \u2502      \u25bc      \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n    4KB Page        \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502 task_struct \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u25c4\u2500\u2500\u2500 Low Address\n</code></pre></li> <li>\u5f53\u6211\u4eec\u7684 OS run \u8d77\u6765\u7684\u65f6\u5019\uff0c\u5176\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u7ebf\u7a0b <code>idle \u7ebf\u7a0b</code>\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u4e3a\u5b83\u8bbe\u8ba1\u597d <code>task_struct</code>\u3002\u6240\u4ee5\u7b2c\u4e00\u6b65\u6211\u4eec\u8981\u4e3a <code>idle</code> \u8bbe\u7f6e <code>task_struct</code>\u3002\u5e76\u5c06 <code>current</code>\uff0c<code>task[0]</code> \u90fd\u6307\u5411 <code>idle</code>\u3002</li> <li>\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5c06 <code>task[1]</code> ~ <code>task[NR_TASKS - 1]</code>\uff0c\u5168\u90e8\u521d\u59cb\u5316\uff0c\u8fd9\u91cc\u548c <code>idle</code> \u8bbe\u7f6e\u7684\u533a\u522b\u5728\u4e8e\u8981\u4e3a\u8fd9\u4e9b\u7ebf\u7a0b\u8bbe\u7f6e <code>thread_struct</code> \u4e2d\u7684 <code>ra</code> \u548c <code>sp</code>.</li> <li>\u5728 <code>_start</code> \u9002\u5f53\u7684\u4f4d\u7f6e\u8c03\u7528 <code>task_init</code> <pre><code>//arch/riscv/kernel/proc.c\n\nextern void __dummy();\n\nstruct task_struct* idle;           // idle process\nstruct task_struct* current;        // \u6307\u5411\u5f53\u524d\u8fd0\u884c\u7ebf\u7a0b\u7684 `task_struct`\nstruct task_struct* task[NR_TASKS]; // \u7ebf\u7a0b\u6570\u7ec4\uff0c\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u4fdd\u5b58\u5728\u6b64\n\n/**\n * new content for unit test of 2023 OS lab2\n*/\nextern uint64 task_test_priority[]; // test_init \u540e\uff0c\u7528\u4e8e\u521d\u59cb\u5316 task[i].priority \u7684\u6570\u7ec4\nextern uint64 task_test_counter[];  // test_init \u540e\uff0c\u7528\u4e8e\u521d\u59cb\u5316 task[i].counter  \u7684\u6570\u7ec4\n\nvoid task_init() {\n    test_init(NR_TASKS);\n    // 1. \u8c03\u7528 kalloc() \u4e3a idle \u5206\u914d\u4e00\u4e2a\u7269\u7406\u9875\n    // 2. \u8bbe\u7f6e state \u4e3a TASK_RUNNING;\n    // 3. \u7531\u4e8e idle \u4e0d\u53c2\u4e0e\u8c03\u5ea6 \u53ef\u4ee5\u5c06\u5176 counter / priority \u8bbe\u7f6e\u4e3a 0\n    // 4. \u8bbe\u7f6e idle \u7684 pid \u4e3a 0\n    // 5. \u5c06 current \u548c task[0] \u6307\u5411 idle\n\n    /* YOUR CODE HERE */\n\n    // 1. \u53c2\u8003 idle \u7684\u8bbe\u7f6e\uff0c\u4e3a task[1] ~ task[NR_TASKS - 1] \u8fdb\u884c\u521d\u59cb\u5316\n    // 2. \u5176\u4e2d\u6bcf\u4e2a\u7ebf\u7a0b\u7684 state \u4e3a TASK_RUNNING\uff0c\u6b64\u5916\uff0c\u4e3a\u4e86\u5355\u5143\u6d4b\u8bd5\u7684\u9700\u8981\uff0ccounter \u548c priority \u8fdb\u884c\u5982\u4e0b\u8d4b\u503c\uff1a\n    //      task[i].counter  = task_test_counter[i];\n    //      task[i].priority = task_test_priority[i];\n    // 3. \u4e3a task[1] ~ task[NR_TASKS - 1] \u8bbe\u7f6e `thread_struct` \u4e2d\u7684 `ra` \u548c `sp`\uff0c\n    // 4. \u5176\u4e2d `ra` \u8bbe\u7f6e\u4e3a __dummy \uff08\u89c1 4.3.2\uff09\u7684\u5730\u5740\uff0c`sp` \u8bbe\u7f6e\u4e3a \u8be5\u7ebf\u7a0b\u7533\u8bf7\u7684\u7269\u7406\u9875\u7684\u9ad8\u5730\u5740\n\n    /* YOUR CODE HERE */\n\n    printk(\"...proc_init done!\\n\");\n}\n</code></pre> <p>Debug \u63d0\u793a\uff1a</p> <ol> <li>\u4fee\u6539 <code>proc.h</code> \u4e2d\u7684 <code>NR_TASKS</code> \u4e3a\u4e00\u4e2a\u6bd4\u8f83\u5c0f\u7684\u503c\uff0c\u6bd4\u5982 5\uff0c\u8fd9\u6837 \u9664\u53bb <code>task[0]</code> \uff08 idle \uff09\uff0c\u53ea\u9700\u8981\u521d\u59cb\u5316 4 \u4e2a\u7ebf\u7a0b\uff0c\u65b9\u4fbf\u8c03\u8bd5\u3002</li> <li>\u6ce8\u610f\u4ee5\u4e0a\u7684\u4fee\u6539\u53ea\u662f\u4e3a\u4e86\u5728\u505a\u5b9e\u9a8c\u7684\u8fc7\u7a0b\u4e2d\u65b9\u4fbf\u8c03\u8bd5\uff0c\u6700\u540e\u4e00\u5b9a\u8bb0\u4f4f\u8981\u4fee\u6539\u56de\u53bb\uff01\uff01\uff01</li> </ol> </li> </ul>"},{"location":"lab2/#__dummy-dummy","title":"<code>__dummy</code> \u4e0e <code>dummy</code> \u4ecb\u7ecd","text":"<ul> <li> <p><code>task[1]</code> ~ <code>task[NR_TASKS - 1]</code>\u90fd\u8fd0\u884c\u540c\u4e00\u6bb5\u4ee3\u7801 <code>dummy()</code> \u6211\u4eec\u5728 <code>proc.c</code> \u6dfb\u52a0 <code>dummy()</code>:     <pre><code>// arch/riscv/kernel/proc.c\n\nvoid dummy() {\n    schedule_test();\n    uint64 MOD = 1000000007;\n    uint64 auto_inc_local_var = 0;\n    int last_counter = -1;\n    while(1) {\n        if ((last_counter == -1 || current-&gt;counter != last_counter) &amp;&amp; current-&gt;counter &gt; 0) {\n            if(current-&gt;counter == 1){\n                --(current-&gt;counter);   // forced the counter to be zero if this thread is going to be scheduled\n            }                           // in case that the new counter is also 1\uff0cleading the information not printed.\n            last_counter = current-&gt;counter;\n            auto_inc_local_var = (auto_inc_local_var + 1) % MOD;\n            printk(\"[PID = %d] is running. auto_inc_local_var = %d\\n\", current-&gt;pid, auto_inc_local_var);\n        }\n    }\n}\n</code></pre></p> <p>Debug \u63d0\u793a\uff1a \u53ef\u4ee5\u7528 printk \u6253\u5370\u66f4\u591a\u7684\u4fe1\u606f</p> </li> <li> <p>\u5f53\u7ebf\u7a0b\u5728\u8fd0\u884c\u65f6\uff0c\u7531\u4e8e\u65f6\u949f\u4e2d\u65ad\u7684\u89e6\u53d1\uff0c\u4f1a\u5c06\u5f53\u524d\u8fd0\u884c\u7ebf\u7a0b\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u4fdd\u5b58\u5728\u6808\u4e0a\u3002\u5f53\u7ebf\u7a0b\u518d\u6b21\u88ab\u8c03\u5ea6\u65f6\uff0c\u4f1a\u5c06\u4e0a\u4e0b\u6587\u4ece\u6808\u4e0a\u6062\u590d\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\uff0c\u6b64\u65f6\u7ebf\u7a0b\u7684\u6808\u4e3a\u7a7a\uff0c\u5f53\u8fd9\u4e2a\u7ebf\u7a0b\u88ab\u8c03\u5ea6\u65f6\uff0c\u662f\u6ca1\u6709\u4e0a\u4e0b\u6587\u9700\u8981\u88ab\u6062\u590d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e3a\u7ebf\u7a0b \u7b2c\u4e00\u6b21\u8c03\u5ea6 \u63d0\u4f9b\u4e00\u4e2a\u7279\u6b8a\u7684\u8fd4\u56de\u51fd\u6570 <code>__dummy</code></p> </li> <li> <p>\u5728 <code>entry.S</code> \u6dfb\u52a0 <code>__dummy</code></p> <ul> <li>\u5728<code>__dummy</code> \u4e2d\u5c06 sepc \u8bbe\u7f6e\u4e3a <code>dummy()</code> \u7684\u5730\u5740\uff0c\u5e76\u4f7f\u7528 <code>sret</code> \u4ece\u4e2d\u65ad\u4e2d\u8fd4\u56de\u3002</li> <li><code>__dummy</code> \u4e0e <code>_traps</code>\u7684 <code>restore</code> \u90e8\u5206\u76f8\u6bd4\uff0c\u5176\u5b9e\u5c31\u662f\u7701\u7565\u4e86\u4ece\u6808\u4e0a\u6062\u590d\u4e0a\u4e0b\u6587\u7684\u8fc7\u7a0b ( \u4f46\u662f\u624b\u52a8\u8bbe\u7f6e\u4e86 <code>sepc</code> )\u3002 <pre><code># arch/riscv/kernel/entry.S\n\n    .global __dummy\n__dummy:\n    # YOUR CODE HERE\n</code></pre></li> </ul> </li> </ul>"},{"location":"lab2/#_12","title":"\u5b9e\u73b0\u7ebf\u7a0b\u5207\u6362","text":"<ul> <li>\u5224\u65ad\u4e0b\u4e00\u4e2a\u6267\u884c\u7684\u7ebf\u7a0b <code>next</code> \u4e0e\u5f53\u524d\u7684\u7ebf\u7a0b <code>current</code> \u662f\u5426\u4e3a\u540c\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5982\u679c\u662f\u540c\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5219\u65e0\u9700\u505a\u4efb\u4f55\u5904\u7406\uff0c\u5426\u5219\u8c03\u7528 <code>__switch_to</code> \u8fdb\u884c\u7ebf\u7a0b\u5207\u6362\u3002     <pre><code>// arch/riscv/kernel/proc.c\n\nextern void __switch_to(struct task_struct* prev, struct task_struct* next);\n\nvoid switch_to(struct task_struct* next) {\n    /* YOUR CODE HERE */\n}\n</code></pre></li> <li>\u5728 <code>entry.S</code> \u4e2d\u5b9e\u73b0\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362 <code>__switch_to</code>:<ul> <li><code>__switch_to</code>\u63a5\u53d7\u4e24\u4e2a <code>task_struct</code> \u6307\u9488\u4f5c\u4e3a\u53c2\u6570</li> <li>\u4fdd\u5b58\u5f53\u524d\u7ebf\u7a0b\u7684<code>ra</code>\uff0c<code>sp</code>\uff0c<code>s0~s11</code>\u5230\u5f53\u524d\u7ebf\u7a0b\u7684 <code>thread_struct</code> \u4e2d</li> <li>\u5c06\u4e0b\u4e00\u4e2a\u7ebf\u7a0b\u7684 <code>thread_struct</code> \u4e2d\u7684\u76f8\u5173\u6570\u636e\u8f7d\u5165\u5230<code>ra</code>\uff0c<code>sp</code>\uff0c<code>s0~s11</code>\u4e2d\u3002 <pre><code># arch/riscv/kernel/entry.S\n\n    .globl __switch_to\n__switch_to:\n    # save state to prev process\n    # YOUR CODE HERE\n\n    # restore state from next process\n    # YOUR CODE HERE\n\n    ret\n</code></pre> <p>Debug \u63d0\u793a\uff1a \u5728 <code>NR_TASKS = 1+1</code> \u65f6\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u662f\u5426\u53ef\u4ee5\u4ece idle \u6b63\u786e\u5207\u6362\u5230 process 1</p> </li> </ul> </li> </ul>"},{"location":"lab2/#_13","title":"\u5b9e\u73b0\u8c03\u5ea6\u5165\u53e3\u51fd\u6570","text":"<ul> <li>\u5b9e\u73b0 <code>do_timer()</code>\uff0c\u5e76\u5728 <code>\u65f6\u949f\u4e2d\u65ad\u5904\u7406\u51fd\u6570</code> \u4e2d\u8c03\u7528\u3002     <pre><code>// arch/riscv/kernel/proc.c\n\nvoid do_timer(void) {\n    // 1. \u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u662f idle \u7ebf\u7a0b \u76f4\u63a5\u8fdb\u884c\u8c03\u5ea6\n    // 2. \u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u4e0d\u662f idle \u5bf9\u5f53\u524d\u7ebf\u7a0b\u7684\u8fd0\u884c\u5269\u4f59\u65f6\u95f4\u51cf1 \u82e5\u5269\u4f59\u65f6\u95f4\u4ecd\u7136\u5927\u4e8e0 \u5219\u76f4\u63a5\u8fd4\u56de \u5426\u5219\u8fdb\u884c\u8c03\u5ea6\n\n    /* YOUR CODE HERE */\n}\n</code></pre></li> </ul>"},{"location":"lab2/#_14","title":"\u5b9e\u73b0\u7ebf\u7a0b\u8c03\u5ea6","text":"<p>\u672c\u6b21\u5b9e\u9a8c\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u4e24\u79cd\u8c03\u5ea6\u7b97\u6cd5\uff1a1.\u77ed\u4f5c\u4e1a\u4f18\u5148\u8c03\u5ea6\u7b97\u6cd5\uff0c2.\u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5\u3002</p>"},{"location":"lab2/#_15","title":"\u77ed\u4f5c\u4e1a\u4f18\u5148\u8c03\u5ea6\u7b97\u6cd5","text":"<ul> <li> <p>\u5f53\u9700\u8981\u8fdb\u884c\u8c03\u5ea6\u65f6\u6309\u7167\u4e00\u4e0b\u89c4\u5219\u8fdb\u884c\u8c03\u5ea6\uff1a</p> <ul> <li>\u904d\u5386\u7ebf\u7a0b\u6307\u9488\u6570\u7ec4<code>task</code>\uff08\u4e0d\u5305\u62ec <code>idle</code> \uff0c\u5373 <code>task[0]</code> \uff09\uff0c \u5728\u6240\u6709\u8fd0\u884c\u72b6\u6001 \uff08<code>TASK_RUNNING</code>\uff09 \u4e0b\u7684\u7ebf\u7a0b\u8fd0\u884c\u5269\u4f59\u65f6\u95f4<code>\u6700\u5c11</code>\u7684\u7ebf\u7a0b\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u6267\u884c\u7684\u7ebf\u7a0b\u3002</li> <li>\u5982\u679c<code>\u6240\u6709</code>\u8fd0\u884c\u72b6\u6001\u4e0b\u7684\u7ebf\u7a0b\u8fd0\u884c\u5269\u4f59\u65f6\u95f4\u90fd\u4e3a0\uff0c\u5219\u5bf9 <code>task[1]</code> ~ <code>task[NR_TASKS-1]</code> \u7684\u8fd0\u884c\u5269\u4f59\u65f6\u95f4\u91cd\u65b0\u8d4b\u503c \uff08\u4f7f\u7528 <code>rand()</code>\uff09 \uff0c\u4e4b\u540e\u518d\u91cd\u65b0\u8fdb\u884c\u8c03\u5ea6\u3002</li> </ul> <pre><code>// arch/riscv/kernel/proc.c\n\nvoid schedule(void) {\n    /* YOUR CODE HERE */\n}\n</code></pre> <p>Debug \u63d0\u793a\uff1a\u53ef\u4ee5\u5148\u5c06 <code>NR_TASKS</code> \u6539\u4e3a\u8f83\u5c0f\u7684\u503c\uff0c\u8c03\u7528 <code>printk</code> \u5c06\u6240\u6709\u7ebf\u7a0b\u7684\u4fe1\u606f\u6253\u5370\u51fa\u6765\u3002</p> </li> </ul>"},{"location":"lab2/#_16","title":"\u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5","text":"<ul> <li> <p>\u53c2\u8003 Linux v0.11 \u8c03\u5ea6\u7b97\u6cd5\u5b9e\u73b0 \u5b9e\u73b0\u3002</p> <p>\u6709\u90e8\u5206\u540c\u5b66\u8868\u793a\u8fd9\u4e2a\u7b97\u6cd5\u4e0e\u6559\u79d1\u4e66\u4e0a\u7684\u201c\u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5\u201d\u6709\u6240\u51fa\u5165\uff1b\u6216\u8005\u662f\u5bf9\u4e8e\u201c\u6d4b\u8bd5\u6837\u4f8b\u91cc\u53ea\u5bf9\u4e8e\u9996\u8f6e\u8c03\u5ea6\u8fdb\u884c\u6d4b\u8bd5\uff0c\u65e0\u6cd5\u4f53\u73b0\u2018\u4f18\u5148\u7ea7\u8c03\u5ea6\u2019\u7684\u7279\u70b9\u201d\u62b1\u6709\u7591\u95ee\uff0c\u8be6\u60c5\u53ef\u4ee5\u770b\u8fd9\u4e2a issue\u3002</p> <pre><code>// arch/riscv/kernel/proc.c\n\nvoid schedule(void) {\n    /* YOUR CODE HERE */\n}\n</code></pre> </li> </ul>"},{"location":"lab2/#_17","title":"\u7f16\u8bd1\u53ca\u6d4b\u8bd5","text":"<ul> <li>\u7531\u4e8e\u52a0\u5165\u4e86\u4e00\u4e9b\u65b0\u7684 .c \u6587\u4ef6\uff0c\u53ef\u80fd\u9700\u8981\u4fee\u6539\u4e00\u4e9b Makefile \u6587\u4ef6\uff0c\u8bf7\u540c\u5b66\u81ea\u5df1\u5c1d\u8bd5\u4fee\u6539\uff0c\u4f7f\u9879\u76ee\u53ef\u4ee5\u7f16\u8bd1\u5e76\u8fd0\u884c\u3002</li> <li>\u7531\u4e8e\u672c\u6b21\u5b9e\u9a8c\u9700\u8981\u5b8c\u6210\u4e24\u4e2a\u8c03\u5ea6\u7b97\u6cd5\uff0c\u56e0\u6b64\u9700\u8981\u4e24\u79cd\u8c03\u5ea6\u7b97\u6cd5\u53ef\u4ee5\u4f7f\u7528<code>gcc \u2013D</code>\u9009\u9879\u8fdb\u884c\u63a7\u5236\u3002<ul> <li>DSJF \uff08\u77ed\u4f5c\u4e1a\u4f18\u5148\u8c03\u5ea6\uff09\u3002</li> <li>DPRIORITY \uff08\u4f18\u5148\u7ea7\u8c03\u5ea6\uff09\u3002</li> <li>\u5728<code>proc.c</code>\u4e2d\u4f7f\u7528 <code>#ifdef</code> \uff0c <code>#endif</code> \u6765\u63a7\u5236\u4ee3\u7801\u3002 \u4fee\u6539\u9876\u5c42Makefile\u4e3a <code>CFLAG = ${CF} ${INCLUDE} -DSJF</code> \u6216 <code>CFLAG = ${CF} ${INCLUDE} -DPRIORITY</code> (\u4f5c\u4e1a\u63d0\u4ea4\u7684\u65f6\u5019 <code>Makefile</code> \u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u90fd\u53ef\u4ee5)</li> </ul> </li> <li> <p>\u672c\u6b21\u5b9e\u9a8c\u5f15\u5165\u4e86\u5c11\u91cf\u7684\u6d4b\u8bd5\u6837\u4f8b\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>make</code> \u547d\u4ee4\uff08\u5982 <code>make TEST</code>\uff0c<code>make test-run</code>\uff0c<code>make test-debug</code> \uff09\u63a7\u5236\uff0c\u8be6\u89c1\u6839\u76ee\u5f55\u7684\u65b0 Makefile \u6587\u4ef6\u3002</p> <p>\u4e3a\u4e86\u5927\u5bb6\u6d4b\u8bd5\u65b9\u4fbf\uff0c\u6d4b\u8bd5\u7684\u6e90\u4ee3\u7801\u5df2\u7ecf\u7ed9\u51fa\u5728 <code>/src/lab2/test/schedule_test.c</code> \u91cc\uff0c\u5404\u4f4d\u540c\u5b66\u6309\u9700\u53d6\u7528\u3002 \u6d4b\u8bd5\u4ee3\u7801\u4e2d\uff0c\u4e3a\u4e24\u79cd\u8c03\u5ea6\u7b97\u6cd5\u5206\u522b\u63d0\u4f9b\u4e86 <code>NR_TASKS</code> \u4e3a 16\uff0c8\uff0c4 \u8fd9 3 \u79cd\u60c5\u51b5\u4e0b\u7684\u6d4b\u8bd5\u6837\u4f8b\u3002</p> <p>\u5728\u63d0\u4ea4\u62a5\u544a\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u63d0\u4ea4 <code>TEST_SCHEDULE</code> \u6d4b\u8bd5\u6210\u529f\u7684\u622a\u56fe\uff0c\u4e24\u79cd\u8c03\u5ea6\u7b97\u6cd5\u90fd\u81f3\u5c11\u9700\u8981\u901a\u8fc7 <code>NR_TASKS = 4</code> \u60c5\u51b5\u4e0b\u7684\u6d4b\u8bd5\u3002\u4ee5\u77ed\u4f5c\u4e1a\u4f18\u5148\u8c03\u5ea6\u7b97\u6cd5\u4e3a\u4f8b\uff0c<code>#define NR_TASKS (1+3)</code> \u60c5\u51b5\u4e0b\uff0c\u6d4b\u8bd5\u6210\u529f\u7684\u8f93\u51fa\u793a\u4f8b\uff1a <pre><code>OpenSBI v0.9\n  ____                    _____ ____ _____\n / __ \\                  / ____|  _ \\_   _|\n| |  | |_ __   ___ _ __ | (___ | |_) || |\n| |  | | '_ \\ / _ \\ '_ \\ \\___ \\|  _ &lt; | |\n| |__| | |_) |  __/ | | |____) | |_) || |_\n \\____/| .__/ \\___|_| |_|_____/|____/_____|\n       | |\n       |_|\n\n...\n\nBoot HART MIDELEG         : 0x0000000000000222\nBoot HART MEDELEG         : 0x000000000000b109\n\n...mm_init done!\n...proc_init done!\nHello RISC-V\nidle process is running!\n\n...\nswitch to [PID = 1 COUNTER = 4]\nB\nB[S] Supervisor Mode Timer Interrupt\nB\nBB[S] Supervisor Mode Timer Interrupt\nB\nBBB[S] Supervisor Mode Timer Interrupt\nB\nBBBB[S] Supervisor Mode Timer Interrupt\n\nswitch to [PID = 3 COUNTER = 8]\nD\nBBBBD[S] Supervisor Mode Timer Interrupt\nD\nBBBBDD[S] Supervisor Mode Timer Interrupt\nD\nBBBBDDD[S] Supervisor Mode Timer Interrupt\nD\nBBBBDDDD[S] Supervisor Mode Timer Interrupt\nD\nBBBBDDDDD[S] Supervisor Mode Timer Interrupt\nD\nBBBBDDDDDD[S] Supervisor Mode Timer Interrupt\nD\nBBBBDDDDDDD[S] Supervisor Mode Timer Interrupt\nD\nBBBBDDDDDDDD[S] Supervisor Mode Timer Interrupt\n\nswitch to [PID = 2 COUNTER = 9]\nC\nBBBBDDDDDDDDC[S] Supervisor Mode Timer Interrupt\nC\nBBBBDDDDDDDDCC[S] Supervisor Mode Timer Interrupt\nC\nBBBBDDDDDDDDCCC[S] Supervisor Mode Timer Interrupt\nC\nBBBBDDDDDDDDCCCC[S] Supervisor Mode Timer Interrupt\nC\nBBBBDDDDDDDDCCCCC[S] Supervisor Mode Timer Interrupt\nC\nBBBBDDDDDDDDCCCCCC[S] Supervisor Mode Timer Interrupt\nC\nBBBBDDDDDDDDCCCCCCC[S] Supervisor Mode Timer Interrupt\nC\nBBBBDDDDDDDDCCCCCCCC[S] Supervisor Mode Timer Interrupt\nC\nBBBBDDDDDDDDCCCCCCCCC\nNR_TASKS = 4, SJF test passed!\n\n[S] Supervisor Mode Timer Interrupt\n\n...\n</code></pre></p> </li> </ul> <p>\u6ce8\uff1a\u4e0b\u9762\u7684\u8f93\u51fa\u793a\u4f8b\u8ddf <code>make TEST</code> \u7684\u6d4b\u8bd5\u6837\u4f8b\u65e0\u5173\u3002\u82e5\u662f\u81ea\u5df1\u7684\u6d4b\u8bd5\u8f93\u51fa\u8ddf\u4e0b\u9762\u7684\u8f93\u51fa\u5b9e\u4f8b\u4e0d\u4e00\u81f4\uff0c\u662f\u6b63\u5e38\u73b0\u8c61\u3002</p> <ul> <li> <p>\u77ed\u4f5c\u4e1a\u4f18\u5148\u8c03\u5ea6\u8f93\u51fa\u793a\u4f8b (\u4e3a\u4e86\u4fbf\u4e8e\u5c55\u793a\uff0c\u8fd9\u91cc\u4e00\u5171\u53ea\u521d\u59cb\u5316\u4e86 4 \u4e2a\u7ebf\u7a0b) \u540c\u5b66\u4eec\u6700\u540e\u63d0\u4ea4\u65f6\u9700\u8981 \u4fdd\u8bc1 <code>NR_TASKS</code> \u4e3a 16 \u4e0d\u53d8</p> <pre><code>OpenSBI v0.9\n  ____                    _____ ____ _____\n / __ \\                  / ____|  _ \\_   _|\n| |  | |_ __   ___ _ __ | (___ | |_) || |\n| |  | | '_ \\ / _ \\ '_ \\ \\___ \\|  _ &lt; | |\n| |__| | |_) |  __/ | | |____) | |_) || |_\n \\____/| .__/ \\___|_| |_|_____/|____/_____|\n       | |\n       |_|\n\n...\n\nBoot HART MIDELEG         : 0x0000000000000222\nBoot HART MEDELEG         : 0x000000000000b109\n\n...mm_init done!\n...proc_init done!\nHello RISC-V\nidle process is running!\n\nSET [PID = 1 COUNTER = 10]\nSET [PID = 2 COUNTER = 10]\nSET [PID = 3 COUNTER = 5]\nSET [PID = 4 COUNTER = 2]\n\nswitch to [PID = 4 COUNTER = 2]\n[PID = 4] is running. auto_inc_local_var = 1\n[PID = 4] is running. auto_inc_local_var = 2\n\nswitch to [PID = 3 COUNTER = 5]\n[PID = 3] is running. auto_inc_local_var = 1\n.....\n[PID = 3] is running. auto_inc_local_var = 5\n\nswitch to [PID = 2 COUNTER = 10]\n[PID = 2] is running. auto_inc_local_var = 1\n...\n[PID = 2] is running. auto_inc_local_var = 10\n\nswitch to [PID = 1 COUNTER = 10]\n[PID = 1] is running. auto_inc_local_var = 1\n...\n[PID = 1] is running. auto_inc_local_var = 10\n\nSET [PID = 1 COUNTER = 9]\nSET [PID = 2 COUNTER = 4]\nSET [PID = 3 COUNTER = 4]\nSET [PID = 4 COUNTER = 10]\n\nswitch to [PID = 3 COUNTER = 4]\n[PID = 3] is running. auto_inc_local_var = 6\n...\n[PID = 3] is running. auto_inc_local_var = 9\n</code></pre> </li> <li> <p>\u4f18\u5148\u7ea7\u8c03\u5ea6\u8f93\u51fa\u793a\u4f8b</p> <pre><code>OpenSBI v0.9\n  ____                    _____ ____ _____\n / __ \\                  / ____|  _ \\_   _|\n| |  | |_ __   ___ _ __ | (___ | |_) || |\n| |  | | '_ \\ / _ \\ '_ \\ \\___ \\|  _ &lt; | |\n| |__| | |_) |  __/ | | |____) | |_) || |_\n \\____/| .__/ \\___|_| |_|_____/|____/_____|\n       | |\n       |_|\n\n...\n\nBoot HART MIDELEG         : 0x0000000000000222\nBoot HART MEDELEG         : 0x000000000000b109\n\n...mm_init done!\n...proc_init done!\nHello RISC-V\nidle process is running!\n\nSET [PID = 1 PRIORITY = 1 COUNTER = 1]\nSET [PID = 2 PRIORITY = 4 COUNTER = 4]\nSET [PID = 3 PRIORITY = 10 COUNTER = 10]\nSET [PID = 4 PRIORITY = 4 COUNTER = 4]\n\nswitch to [PID = 3 PRIORITY = 10 COUNTER = 10]\n[PID = 3] is running. auto_inc_local_var = 1\n...\n[PID = 3] is running. auto_inc_local_var = 10\n\nswitch to [PID = 4 PRIORITY = 4 COUNTER = 4]\n[PID = 4] is running. auto_inc_local_var = 1\n...\n[PID = 4] is running. auto_inc_local_var = 4\n\nswitch to [PID = 2 PRIORITY = 4 COUNTER = 4]\n[PID = 2] is running. auto_inc_local_var = 1\n...\n[PID = 2] is running. auto_inc_local_var = 4\n\nswitch to [PID = 1 PRIORITY = 1 COUNTER = 1]\n[PID = 1] is running. auto_inc_local_var = 1\n\nSET [PID = 1 PRIORITY = 1 COUNTER = 1]\nSET [PID = 2 PRIORITY = 4 COUNTER = 4]\nSET [PID = 3 PRIORITY = 10 COUNTER = 10]\nSET [PID = 4 PRIORITY = 4 COUNTER = 4]\n\nswitch to [PID = 3 PRIORITY = 10 COUNTER = 10]\n[PID = 3] is running. auto_inc_local_var = 11\n...\n</code></pre> </li> </ul>"},{"location":"lab2/#_18","title":"\u601d\u8003\u9898","text":"<ol> <li> <p>\u5728 RV64 \u4e2d\u4e00\u5171\u7528 32 \u4e2a\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u4e3a\u4ec0\u4e48 <code>context_switch</code> \u4e2d\u53ea\u4fdd\u5b58\u4e8614\u4e2a?</p> </li> <li> <p>\u5f53\u7ebf\u7a0b\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\uff0c\u5176 <code>ra</code> \u6240\u4ee3\u8868\u7684\u8fd4\u56de\u70b9\u662f <code>__dummy</code>\u3002\u90a3\u4e48\u5728\u4e4b\u540e\u7684\u7ebf\u7a0b\u8c03\u7528\u4e2d <code>context_switch</code> \u4e2d\uff0c<code>ra</code> \u4fdd\u5b58/\u6062\u590d\u7684\u51fd\u6570\u8fd4\u56de\u70b9\u662f\u4ec0\u4e48\u5462? \u8bf7\u540c\u5b66\u7528 gdb \u5c1d\u8bd5\u8ffd\u8e2a\u4e00\u6b21\u5b8c\u6574\u7684\u7ebf\u7a0b\u5207\u6362\u6d41\u7a0b\uff0c\u5e76\u5173\u6ce8\u6bcf\u4e00\u6b21 <code>ra</code> \u7684\u53d8\u6362 (\u9700\u8981\u622a\u56fe)\u3002</p> </li> </ol>"},{"location":"lab2/#_19","title":"\u4f5c\u4e1a\u63d0\u4ea4","text":"<p>\u540c\u5b66\u9700\u8981\u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\u4ee5\u53ca\u6574\u4e2a\u5de5\u7a0b\u4ee3\u7801\u3002\u5728\u63d0\u4ea4\u524d\u8bf7\u4f7f\u7528 <code>make clean</code> \u6e05\u9664\u6240\u6709\u6784\u5efa\u4ea7\u7269\u3002</p>"},{"location":"lab3/","title":"Lab 3: RV64 \u865a\u62df\u5185\u5b58\u7ba1\u7406","text":""},{"location":"lab3/#_1","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<ul> <li>\u5b66\u4e60\u865a\u62df\u5185\u5b58\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5b9e\u73b0\u7269\u7406\u5730\u5740\u5230\u865a\u62df\u5730\u5740\u7684\u5207\u6362\u3002</li> <li>\u4e86\u89e3 RISC-V \u67b6\u6784\u4e2d SV39 \u5206\u9875\u6a21\u5f0f\uff0c\u5b9e\u73b0\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\uff0c\u5e76\u5bf9\u4e0d\u540c\u7684\u6bb5\u8fdb\u884c\u76f8\u5e94\u7684\u6743\u9650\u8bbe\u7f6e\u3002</li> </ul>"},{"location":"lab3/#_2","title":"\u5b9e\u9a8c\u73af\u5883","text":"<ul> <li>Environment in previous labs</li> </ul>"},{"location":"lab3/#_3","title":"\u80cc\u666f\u77e5\u8bc6","text":""},{"location":"lab3/#_4","title":"\u524d\u8a00","text":"<p>\u5728 Lab2 \u4e2d\u6211\u4eec\u8d4b\u4e88\u4e86\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u591a\u4e2a\u7ebf\u7a0b\u8c03\u5ea6\u4ee5\u53ca\u5e76\u53d1\u6267\u884c\u7684\u80fd\u529b\uff0c\u7531\u4e8e\u76ee\u524d\u8fd9\u4e9b\u7ebf\u7a0b\u90fd\u662f\u5185\u6838\u7ebf\u7a0b\uff0c\u56e0\u6b64\u4ed6\u4eec\u53ef\u4ee5\u5171\u4eab\u8fd0\u884c\u7a7a\u95f4\uff0c\u5373\u8fd0\u884c\u4e0d\u540c\u7ebf\u7a0b\u5bf9\u7a7a\u95f4\u7684\u4fee\u6539\u662f\u76f8\u4e92\u53ef\u89c1\u7684\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u9700\u8981\u7ebf\u7a0b\u76f8\u4e92\u9694\u79bb\uff0c\u4ee5\u53ca\u5728\u591a\u7ebf\u7a0b\u7684\u60c5\u51b5\u4e0b\u66f4\u52a0\u9ad8\u6548\u7684\u4f7f\u7528\u5185\u5b58\uff0c\u5c31\u5fc5\u987b\u5f15\u5165<code>\u865a\u62df\u5185\u5b58</code>\u8fd9\u4e2a\u6982\u5ff5\u3002</p> <p>\u865a\u62df\u5185\u5b58\u53ef\u4ee5\u4e3a\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u63d0\u4f9b\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5236\u9020\u4e00\u79cd\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\u90fd\u662f\u72ec\u7acb\u7684\u5047\u8c61\u3002\u540c\u65f6\u865a\u62df\u5185\u5b58\u5230\u7269\u7406\u5185\u5b58\u7684\u6620\u5c04\u4e5f\u5305\u542b\u4e86\u5bf9\u5185\u5b58\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u65b9\u4fbf\u5185\u6838\u5b8c\u6210\u6743\u9650\u68c0\u67e5\u3002</p> <p>\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5173\u6ce8\u5185\u6838\u5982\u4f55\u5f00\u542f\u865a\u62df\u5730\u5740\u4ee5\u53ca\u901a\u8fc7\u8bbe\u7f6e\u9875\u8868\u6765\u5b9e\u73b0\u5730\u5740\u6620\u5c04\u548c\u6743\u9650\u63a7\u5236\u3002</p>"},{"location":"lab3/#kernel","title":"Kernel \u7684\u865a\u62df\u5185\u5b58\u5e03\u5c40","text":"<p><pre><code>start_address             end_address\n    0x0                  0x3fffffffff\n     \u2502                        \u2502\n\u250c\u2500\u2500\u2500\u2500\u2518                  \u250c\u2500\u2500\u2500\u2500\u2500\u2518\n\u2193        256G           \u2193                                \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502      User Space       \u2502    ...   \u2502  Kernel Space  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                   \u2191      256G      \u2191\n                      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                \u2502 \n                      \u2502                             \u2502\n              0xffffffc000000000           0xffffffffffffffff\n                start_address                  end_address\n</code></pre> \u901a\u8fc7\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u770b\u5230 RV64 \u5c06 <code>0x0000004000000000</code> \u4ee5\u4e0b\u7684\u865a\u62df\u7a7a\u95f4\u4f5c\u4e3a <code>user space</code>\u3002\u5c06 <code>0xffffffc000000000</code> \u53ca\u4ee5\u4e0a\u7684\u865a\u62df\u7a7a\u95f4\u4f5c\u4e3a <code>kernel space</code>\u3002\u7531\u4e8e\u6211\u4eec\u8fd8\u672a\u5f15\u5165\u7528\u6237\u6001\u7a0b\u5e8f\uff0c\u76ee\u524d\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8 <code>kernel space</code>\u3002</p> <p>\u5177\u4f53\u7684\u865a\u62df\u5185\u5b58\u5e03\u5c40\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\u3002</p> <p>\u5728 <code>RISC-V Linux Kernel Space</code> \u4e2d\u6709\u4e00\u6bb5\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u533a\u57df\u88ab\u79f0\u4e3a <code>direct mapping area</code>\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8bbf\u95ee\u5185\u5b58\uff0c\u5185\u6838\u4f1a\u9884\u5148\u628a\u6240\u6709\u7269\u7406\u5185\u5b58\u90fd\u6620\u5c04\u81f3\u8fd9\u4e00\u5757\u533a\u57df\uff0c\u8fd9\u79cd\u6620\u5c04\u4e5f\u88ab\u79f0\u4e3a <code>linear mapping</code>\uff0c\u56e0\u4e3a\u8be5\u6620\u5c04\u65b9\u5f0f\u5c31\u662f\u5728\u7269\u7406\u5730\u5740\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u504f\u79fb\uff0c\u4f7f\u5f97 <code>VA = PA + PA2VA_OFFSET</code>\u3002\u5728 RISC-V Linux Kernel \u4e2d\u8fd9\u4e00\u6bb5\u533a\u57df\u4e3a <code>0xffffffe000000000 ~ 0xffffffff00000000</code>\uff0c\u5171 124 GB \u3002</p>"},{"location":"lab3/#risc-v-virtual-memory-system-sv39","title":"RISC-V Virtual-Memory System (Sv39)","text":""},{"location":"lab3/#satp-registersupervisor-address-translation-and-protection-register","title":"<code>satp</code> Register\uff08Supervisor Address Translation and Protection Register\uff09","text":"<pre><code> 63      60 59                  44 43                                0\n ---------------------------------------------------------------------\n|   MODE   |         ASID         |                PPN                |\n ---------------------------------------------------------------------\n</code></pre> <ul> <li>MODE \u5b57\u6bb5\u7684\u53d6\u503c\u5982\u4e0b\u56fe\uff1a <pre><code>                             RV 64\n     ----------------------------------------------------------\n    |  Value  |  Name  |  Description                          |\n    |----------------------------------------------------------|\n    |    0    | Bare   | No translation or protection          |\n    |  1 - 7  | ---    | Reserved for standard use             |\n    |    8    | Sv39   | Page-based 39 bit virtual addressing  | &lt;-- \u6211\u4eec\u4f7f\u7528\u7684mode\n    |    9    | Sv48   | Page-based 48 bit virtual addressing  |\n    |    10   | Sv57   | Page-based 57 bit virtual addressing  |\n    |    11   | Sv64   | Page-based 64 bit virtual addressing  |\n    | 12 - 13 | ---    | Reserved for standard use             |\n    | 14 - 15 | ---    | Reserved for standard use             |\n     -----------------------------------------------------------\n</code></pre></li> <li>ASID ( Address Space Identifier ) \uff1a \u6b64\u6b21\u5b9e\u9a8c\u4e2d\u76f4\u63a5\u7f6e 0 \u5373\u53ef\u3002</li> <li>PPN ( Physical Page Number ) \uff1a\u9876\u7ea7\u9875\u8868\u7684\u7269\u7406\u9875\u53f7\u3002\u6211\u4eec\u7684\u7269\u7406\u9875\u7684\u5927\u5c0f\u4e3a 4KB\uff0c PA &gt;&gt; 12 == PPN\u3002</li> <li>\u5177\u4f53\u4ecb\u7ecd\u8bf7\u9605\u8bfb RISC-V Privileged Spec 4.1.10 \u3002</li> </ul>"},{"location":"lab3/#risc-v-sv39-virtual-address-and-physical-address","title":"RISC-V Sv39 Virtual Address and Physical Address","text":"<pre><code>     38        30 29        21 20        12 11                           0\n     ---------------------------------------------------------------------\n    |   VPN[2]   |   VPN[1]   |   VPN[0]   |          page offset         |\n     ---------------------------------------------------------------------\n                            Sv39 virtual address\n</code></pre> <p><pre><code> 55                30 29        21 20        12 11                           0\n -----------------------------------------------------------------------------\n|       PPN[2]       |   PPN[1]   |   PPN[0]   |          page offset         |\n -----------------------------------------------------------------------------\n                            Sv39 physical address\n</code></pre> * Sv39 \u6a21\u5f0f\u5b9a\u4e49\u7269\u7406\u5730\u5740\u6709 56 \u4f4d\uff0c\u865a\u62df\u5730\u5740\u6709 64 \u4f4d\u3002\u4f46\u662f\uff0c\u865a\u62df\u5730\u5740\u7684 64 \u4f4d\u53ea\u6709\u4f4e 39 \u4f4d\u6709\u6548\u3002\u901a\u8fc7\u865a\u62df\u5185\u5b58\u5e03\u5c40\u56fe\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5176 63-39 \u4f4d\u4e3a 0 \u65f6\u4ee3\u8868 user space address\uff0c \u4e3a 1 \u65f6 \u4ee3\u8868 kernel space address\u3002 * Sv39 \u652f\u6301\u4e09\u7ea7\u9875\u8868\u7ed3\u6784\uff0c<code>VPN[2] VPN[1] VPN[0]</code> (Virtual Page Number) \u5206\u522b\u4ee3\u8868\u6bcf\u7ea7\u9875\u8868\u7684<code>\u865a\u62df\u9875\u53f7</code>\uff0c<code>PPN[2] PPN[1] PPN[0]</code> (Physical Page Number) \u5206\u522b\u4ee3\u8868\u6bcf\u7ea7\u9875\u8868\u7684<code>\u7269\u7406\u9875\u53f7</code>\u3002\u7269\u7406\u5730\u5740\u548c\u865a\u62df\u5730\u5740\u7684\u4f4e12\u4f4d\u8868\u793a\u9875\u5185\u504f\u79fb\uff08page offset\uff09\u3002 * \u5177\u4f53\u4ecb\u7ecd\u8bf7\u9605\u8bfb RISC-V Privileged Spec 4.4.1 \u3002</p>"},{"location":"lab3/#risc-v-sv39-page-table-entry","title":"RISC-V Sv39 Page Table Entry","text":"<pre><code> 63      54 53        28 27        19 18        10 9   8 7 6 5 4 3 2 1 0\n -----------------------------------------------------------------------\n| Reserved |   PPN[2]   |   PPN[1]   |   PPN[0]   | RSW |D|A|G|U|X|W|R|V|\n -----------------------------------------------------------------------\n                                                     \u2191   \u2191 \u2191 \u2191 \u2191 \u2191 \u2191 \u2191 \u2191\n                                                     |   | | | | | | | `---- V - Valid\n                                                     |   | | | | | | `------ R - Readable\n                                                     |   | | | | | `-------- W - Writable\n                                                     |   | | | | `---------- X - Executable\n                                                     |   | | | `------------ U - User\n                                                     |   | | `-------------- G - Global\n                                                     |   | `---------------- A - Accessed\n                                                     |   `------------------ D - Dirty (0 in page directory)\n                                                     `---------------------- Reserved for supervisor software\n</code></pre> <ul> <li>0 \uff5e 9 bit: protection bits<ul> <li>V : \u6709\u6548\u4f4d\uff0c\u5f53 V = 0\uff0c\u8bbf\u95ee\u8be5 PTE \u4f1a\u4ea7\u751f Pagefault\u3002</li> <li>R : R = 1 \u8be5\u9875\u53ef\u8bfb\u3002</li> <li>W : W = 1 \u8be5\u9875\u53ef\u5199\u3002</li> <li>X : X = 1 \u8be5\u9875\u53ef\u6267\u884c\u3002</li> <li>U\uff0cG\uff0cA\uff0cD\uff0cRSW \u672c\u6b21\u5b9e\u9a8c\u4e2d\u8bbe\u7f6e\u4e3a 0 \u5373\u53ef\u3002</li> </ul> </li> <li>\u5177\u4f53\u4ecb\u7ecd\u8bf7\u9605\u8bfb RISC-V Privileged Spec 4.4.1</li> </ul>"},{"location":"lab3/#risc-v-address-translation","title":"RISC-V Address Translation","text":"<p>\u865a\u62df\u5730\u5740\u8f6c\u5316\u4e3a\u7269\u7406\u5730\u5740\u6d41\u7a0b\u56fe\u5982\u4e0b\uff0c\u5177\u4f53\u63cf\u8ff0\u89c1 RISC-V Privileged Spec 4.3.2 : <pre><code>                                Virtual Address                                     Physical Address\n\n                          9             9            9              12          55        12 11       0\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502                \u2502   VPN[2]   \u2502   VPN[1]   \u2502   VPN[0]    \u2502     OFFSET     \u2502 \u2502     PPN    \u2502  OFFSET  \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                         \u2502             \u2502             \u2502              \u2502                 \u25b2          \u25b2\n                         \u2502             \u2502             \u2502              \u2502                 \u2502          \u2502\n                         \u2502             \u2502             \u2502              \u2502                 \u2502          \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518             \u2502             \u2502              \u2502                 \u2502          \u2502\n\u2502                                      \u2502             \u2502              \u2502                 \u2502          \u2502\n\u2502                                      \u2502             \u2502              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u2502    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510               \u2502             \u2502                                \u2502\n\u2502511 \u2502                 \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518             \u2502                                \u2502\n\u2502    \u2502                 \u2502  \u2502                          \u2502                                \u2502\n\u2502    \u2502                 \u2502  \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502                                \u2502\n\u2502    \u2502                 \u2502  \u2502 511 \u2502                 \u2502  \u2502                                \u2502\n\u2502    \u2502                 \u2502  \u2502     \u2502                 \u2502  \u2502                                \u2502\n\u2502    \u2502                 \u2502  \u2502     \u2502                 \u2502  \u2502     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510        \u2502\n\u2502    \u2502   44       10   \u2502  \u2502     \u2502                 \u2502  \u2502 511 \u2502                 \u2502        \u2502\n\u2502    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  \u2502     \u2502                 \u2502  \u2502     \u2502                 \u2502        \u2502\n\u2514\u2500\u2500\u2500\u25ba\u2502   PPN  \u2502  flags \u2502  \u2502     \u2502                 \u2502  \u2502     \u2502                 \u2502        \u2502\n     \u251c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  \u2502     \u2502   44       10   \u2502  \u2502     \u2502                 \u2502        \u2502\n     \u2502    \u2502            \u2502  \u2502     \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  \u2502     \u2502                 \u2502        \u2502\n     \u2502    \u2502            \u2502  \u2514\u2500\u2500\u2500\u2500\u25ba\u2502   PPN  \u2502  flags \u2502  \u2502     \u2502                 \u2502        \u2502\n     \u2502    \u2502            \u2502        \u251c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  \u2502     \u2502   44       10   \u2502        \u2502\n     \u2502    \u2502            \u2502        \u2502    \u2502            \u2502  \u2502     \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524        \u2502\n   1 \u2502    \u2502            \u2502        \u2502    \u2502            \u2502  \u2514\u2500\u2500\u2500\u2500\u25ba\u2502   PPN  \u2502  flags \u2502        \u2502\n     \u2502    \u2502            \u2502        \u2502    \u2502            \u2502        \u251c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524        \u2502\n   0 \u2502    \u2502            \u2502        \u2502    \u2502            \u2502        \u2502    \u2502            \u2502        \u2502\n     \u2514\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      1 \u2502    \u2502            \u2502        \u2502    \u2502            \u2502        \u2502\n     \u25b2    \u2502                     \u2502    \u2502            \u2502        \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502    \u2502                   0 \u2502    \u2502            \u2502        \u2502                 \u2502\n     \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2514\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      1 \u2502                 \u2502\n     \u2502                               \u2502                     \u2502                 \u2502\n \u250c\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2510                          \u2502                   0 \u2502                 \u2502\n \u2502  satp  \u2502                          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></p>"},{"location":"lab3/#_5","title":"\u5b9e\u9a8c\u6b65\u9aa4","text":""},{"location":"lab3/#_6","title":"\u51c6\u5907\u5de5\u7a0b","text":"<ul> <li>\u6b64\u6b21\u5b9e\u9a8c\u57fa\u4e8e lab3 \u540c\u5b66\u6240\u5b9e\u73b0\u7684\u4ee3\u7801\u8fdb\u884c\u3002</li> <li>\u9700\u8981\u4fee\u6539 <code>defs.h</code>\uff0c\u5728 <code>defs.h</code> \u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1a     <pre><code>#define OPENSBI_SIZE (0x200000)\n\n#define VM_START (0xffffffe000000000)\n#define VM_END   (0xffffffff00000000)\n#define VM_SIZE  (VM_END - VM_START)\n\n#define PA2VA_OFFSET (VM_START - PHY_START)\n</code></pre></li> <li>\u4ece <code>repo</code> \u540c\u6b65\u4ee5\u4e0b\u4ee3\u7801: <code>vmlinux.lds</code>\u3002\u5e76\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5c06\u8fd9\u4e9b\u6587\u4ef6\u6b63\u786e\u653e\u7f6e\u3002     <pre><code>.\n\u2514\u2500\u2500 arch\n \u00a0\u00a0 \u2514\u2500\u2500 riscv\n \u00a0\u00a0     \u2514\u2500\u2500 kernel\n         \u00a0\u00a0 \u2514\u2500\u2500 vmlinux.lds\n</code></pre>      \u65b0\u7684\u94fe\u63a5\u811a\u672c\u4e2d\u7684 <code>ramv</code> \u4ee3\u8868 <code>VMA ( Virtual Memory Address )</code> \u5373\u865a\u62df\u5730\u5740\uff0c<code>ram</code> \u5219\u4ee3\u8868 <code>LMA ( Load Memory Address )</code>\uff0c\u5373\u6211\u4eec OS image \u88ab load \u7684\u5730\u5740\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u7269\u7406\u5730\u5740\u3002\u4f7f\u7528\u4ee5\u4e0a\u7684 vmlinux.lds \u8fdb\u884c\u7f16\u8bd1\u4e4b\u540e\uff0c\u5f97\u5230\u7684 <code>System.map</code> \u4ee5\u53ca <code>vmlinux</code> \u4e2d\u7684\u7b26\u53f7\u91c7\u7528\u7684\u90fd\u662f\u865a\u62df\u5730\u5740\uff0c\u65b9\u4fbf\u4e4b\u540e Debug\u3002</li> <li>\u4ece\u672c\u5b9e\u9a8c\u5f00\u59cb\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5237\u65b0\u7f13\u5b58\u7684\u6307\u4ee4\u6269\u5c55\uff0c\u5e76\u81ea\u52a8\u5728\u7f16\u8bd1\u9879\u76ee\u524d\u6267\u884c <code>clean</code> \u4efb\u52a1\u6765\u9632\u6b62\u5bf9\u5934\u6587\u4ef6\u7684\u4fee\u6539\u65e0\u6cd5\u89e6\u53d1\u7f16\u8bd1\u4efb\u52a1\u3002\u5728\u9879\u76ee\u9876\u5c42\u76ee\u5f55\u7684 <code>Makefile</code> \u4e2d\u9700\u8981\u505a\u5982\u4e0b\u66f4\u6539\uff1a     <pre><code># Makefile\n...\nISA=rv64imafd_zifencei\n...\nall: clean\n    ${MAKE} -C lib all\n    ${MAKE} -C test all\n    ${MAKE} -C init all\n    ${MAKE} -C arch/riscv all\n    @echo -e '\\n'Build Finished OK\n...\n</code></pre></li> </ul>"},{"location":"lab3/#_7","title":"\u5f00\u542f\u865a\u62df\u5185\u5b58\u6620\u5c04\u3002","text":"<p>\u5728 RISC-V \u4e2d\u5f00\u542f\u865a\u62df\u5730\u5740\u88ab\u5206\u4e3a\u4e86\u4e24\u6b65\uff1a<code>setup_vm</code> \u4ee5\u53ca <code>setup_vm_final</code>\uff0c\u4e0b\u9762\u5c06\u4ecb\u7ecd\u76f8\u5173\u7684\u5177\u4f53\u5b9e\u73b0\u3002</p>"},{"location":"lab3/#setup_vm","title":"<code>setup_vm</code> \u7684\u5b9e\u73b0","text":"<ul> <li>\u5c06 0x80000000 \u5f00\u59cb\u7684 1GB \u533a\u57df\u8fdb\u884c\u4e24\u6b21\u6620\u5c04\uff0c\u5176\u4e2d\u4e00\u6b21\u662f\u7b49\u503c\u6620\u5c04 ( PA == VA ) \uff0c\u53e6\u4e00\u6b21\u662f\u5c06\u5176\u6620\u5c04\u5230 <code>direct mapping area</code> ( \u4f7f\u5f97 <code>PA + PV2VA_OFFSET == VA</code> )\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a   <pre><code>Physical Address\n-------------------------------------------\n                     | OpenSBI | Kernel |\n-------------------------------------------\n                     \u2191\n                0x80000000\n                     \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                     |                                                   |\nVirtual Address      \u2193                                                   \u2193\n-----------------------------------------------------------------------------------------------\n                     | OpenSBI | Kernel |                                | OpenSBI | Kernel |\n-----------------------------------------------------------------------------------------------\n                     \u2191                                                   \u2191\n                0x80000000                                       0xffffffe000000000\n</code></pre></li> <li>\u5b8c\u6210\u4e0a\u8ff0\u6620\u5c04\u4e4b\u540e\uff0c\u901a\u8fc7 <code>relocate</code> \u51fd\u6570\uff0c\u5b8c\u6210\u5bf9 <code>satp</code> \u7684\u8bbe\u7f6e\uff0c\u4ee5\u53ca\u8df3\u8f6c\u5230\u5bf9\u5e94\u7684\u865a\u62df\u5730\u5740\u3002</li> <li>\u81f3\u6b64\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u865a\u62df\u5730\u5740\u7684\u5f00\u542f\uff0c\u4e4b\u540e\u6211\u4eec\u8fd0\u884c\u7684\u4ee3\u7801\u4e5f\u90fd\u5c06\u5728\u865a\u62df\u5730\u5740\u4e0a\u8fd0\u884c\u3002 <pre><code>// arch/riscv/kernel/vm.c\n\n/* early_pgtbl: \u7528\u4e8e setup_vm \u8fdb\u884c 1GB \u7684 \u6620\u5c04\u3002 */\nunsigned long  early_pgtbl[512] __attribute__((__aligned__(0x1000)));\n\nvoid setup_vm(void) {\n    /* \n    1. \u7531\u4e8e\u662f\u8fdb\u884c 1GB \u7684\u6620\u5c04 \u8fd9\u91cc\u4e0d\u9700\u8981\u4f7f\u7528\u591a\u7ea7\u9875\u8868 \n    2. \u5c06 va \u7684 64bit \u4f5c\u4e3a\u5982\u4e0b\u5212\u5206\uff1a | high bit | 9 bit | 30 bit |\n        high bit \u53ef\u4ee5\u5ffd\u7565\n        \u4e2d\u95f49 bit \u4f5c\u4e3a early_pgtbl \u7684 index\n        \u4f4e 30 bit \u4f5c\u4e3a \u9875\u5185\u504f\u79fb \u8fd9\u91cc\u6ce8\u610f\u5230 30 = 9 + 9 + 12\uff0c \u5373\u6211\u4eec\u53ea\u4f7f\u7528\u6839\u9875\u8868\uff0c \u6839\u9875\u8868\u7684\u6bcf\u4e2a entry \u90fd\u5bf9\u5e94 1GB \u7684\u533a\u57df\u3002 \n    3. Page Table Entry \u7684\u6743\u9650 V | R | W | X \u4f4d\u8bbe\u7f6e\u4e3a 1\n    */\n}\n</code></pre> <pre><code># head.S\n\n_start:\n\n    call setup_vm\n    call relocate\n\n    ...\n\n    j start_kernel\n\nrelocate:\n    # set ra = ra + PA2VA_OFFSET\n    # set sp = sp + PA2VA_OFFSET (If you have set the sp before)\n\n    ###################### \n    #   YOUR CODE HERE   #\n    ######################\n\n    # set satp with early_pgtbl\n\n    ###################### \n    #   YOUR CODE HERE   #\n    ######################\n\n    # flush tlb\n    sfence.vma zero, zero\n\n    # flush icache\n    fence.i\n\n    ret\n\n    .section .bss.stack\n    .globl boot_stack\nboot_stack:\n    ...\n</code></pre></li> </ul> <p>Hint 1: <code>sfence.vma</code> \u6307\u4ee4\u7528\u4e8e\u5237\u65b0 TLB</p> <p>Hint 2: <code>fence.i</code> \u6307\u4ee4\u7528\u4e8e\u5237\u65b0 icache</p> <p>Hint 3: \u5728 set satp \u524d\uff0c\u6211\u4eec\u53ea\u53ef\u4ee5\u4f7f\u7528\u7269\u7406\u5730\u5740\u6765\u6253\u65ad\u70b9\u3002\u8bbe\u7f6e satp \u4e4b\u540e\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528\u865a\u62df\u5730\u5740\u6253\u65ad\u70b9\uff0c\u540c\u65f6\u4e4b\u524d\u8bbe\u7f6e\u7684\u7269\u7406\u5730\u5740\u65ad\u70b9\u4e5f\u4f1a\u5931\u6548\uff0c\u9700\u8981\u5220\u9664</p>"},{"location":"lab3/#setup_vm_final","title":"<code>setup_vm_final</code> \u7684\u5b9e\u73b0","text":"<ul> <li>\u7531\u4e8e <code>setup_vm_final</code> \u4e2d\u9700\u8981\u7533\u8bf7\u9875\u9762\u7684\u63a5\u53e3\uff0c\u5e94\u8be5\u5728\u5176\u4e4b\u524d\u5b8c\u6210\u5185\u5b58\u7ba1\u7406\u521d\u59cb\u5316\uff0c\u53ef\u80fd\u9700\u8981\u4fee\u6539 <code>mm.c</code> \u4e2d\u7684\u4ee3\u7801\uff0c<code>mm.c</code> \u4e2d\u521d\u59cb\u5316\u7684\u51fd\u6570\u63a5\u6536\u7684\u8d77\u59cb\u7ed3\u675f\u5730\u5740\u9700\u8981\u8c03\u6574\u4e3a\u865a\u62df\u5730\u5740\u3002</li> <li> <p>\u5bf9 \u6240\u6709\u7269\u7406\u5185\u5b58 (128M) \u8fdb\u884c\u6620\u5c04\uff0c\u5e76\u8bbe\u7f6e\u6b63\u786e\u7684\u6743\u9650\u3002   <pre><code>Physical Address\n     PHY_START                           PHY_END\n         \u2193                                  \u2193\n--------------------------------------------------------\n         | OpenSBI | Kernel |               |\n--------------------------------------------------------\n         \u2191                                  \u2191\n    0x80000000                              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                  |\n                                  |                                  |\n                               VM_START                              |\nVirtual Address                   \u2193                                  \u2193\n-------------------------------------------------------------------------\n                                  | OpenSBI | Kernel |               |\n-------------------------------------------------------------------------\n                                  \u2191\n                          0xffffffe000000000\n</code></pre></p> </li> <li> <p>\u4e0d\u518d\u9700\u8981\u8fdb\u884c\u7b49\u503c\u6620\u5c04</p> </li> <li>\u4e0d\u518d\u9700\u8981\u5c06 OpenSBI \u7684\u6620\u5c04\u5230 <code>direct mapping area</code>\uff0c\u56e0\u4e3a OpenSBI \u8fd0\u884c\u5728 M \u6001\uff0c \u76f4\u63a5\u4f7f\u7528\u7684\u7269\u7406\u5730\u5740\u3002</li> <li>\u91c7\u7528\u4e09\u7ea7\u9875\u8868\u6620\u5c04\u3002</li> <li>\u5728 head.S \u4e2d \u9002\u5f53\u7684\u4f4d\u7f6e\u8c03\u7528 <code>setup_vm_final</code>\u3002</li> <li>\u8bf7\u4e0d\u8981\u4fee\u6539 create_mapping \u7684\u51fd\u6570\u58f0\u660e\uff0c\u5e76\u6ce8\u610f\u9605\u8bfb\u4e0b\u65b9\u5bf9\u53c2\u6570\u7684\u63cf\u8ff0\u3002\u8be5\u51fd\u6570\u4f1a\u88ab\u7528\u4e8e\u6d4b\u8bd5\u5b9e\u9a8c\u7684\u6b63\u786e\u6027\u3002 <pre><code>// arch/riscv/kernel/vm.c \n\n/* swapper_pg_dir: kernel pagetable \u6839\u76ee\u5f55\uff0c \u5728 setup_vm_final \u8fdb\u884c\u6620\u5c04\u3002 */\nunsigned long  swapper_pg_dir[512] __attribute__((__aligned__(0x1000)));\n\nvoid setup_vm_final(void) {\n    memset(swapper_pg_dir, 0x0, PGSIZE);\n\n    // No OpenSBI mapping required\n\n    // mapping kernel text X|-|R|V\n    create_mapping(...);\n\n    // mapping kernel rodata -|-|R|V\n    create_mapping(...);\n\n    // mapping other memory -|W|R|V\n    create_mapping(...);\n\n    // set satp with swapper_pg_dir\n\n    // YOUR CODE HERE\n\n    // flush TLB\n    asm volatile(\"sfence.vma zero, zero\");\n\n    // flush icache\n    asm volatile(\"fence.i\")\n    return;\n}\n\n\n/**** \u521b\u5efa\u591a\u7ea7\u9875\u8868\u6620\u5c04\u5173\u7cfb *****/\n/* \u4e0d\u8981\u4fee\u6539\u8be5\u63a5\u53e3\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c */\ncreate_mapping(uint64 *pgtbl, uint64 va, uint64 pa, uint64 sz, uint64 perm) {\n    /*\n    pgtbl \u4e3a\u6839\u9875\u8868\u7684\u57fa\u5730\u5740\n    va, pa \u4e3a\u9700\u8981\u6620\u5c04\u7684\u865a\u62df\u5730\u5740\u3001\u7269\u7406\u5730\u5740\n    sz \u4e3a\u6620\u5c04\u7684\u5927\u5c0f\uff0c\u5355\u4f4d\u4e3a\u5b57\u8282\n    perm \u4e3a\u6620\u5c04\u7684\u6743\u9650 (\u5373\u9875\u8868\u9879\u7684\u4f4e 8 \u4f4d)\n\n    \u521b\u5efa\u591a\u7ea7\u9875\u8868\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 kalloc() \u6765\u83b7\u53d6\u4e00\u9875\u4f5c\u4e3a\u9875\u8868\u76ee\u5f55\n    \u53ef\u4ee5\u4f7f\u7528 V bit \u6765\u5224\u65ad\u9875\u8868\u9879\u662f\u5426\u5b58\u5728\n    */\n}\n</code></pre></li> </ul>"},{"location":"lab3/#_8","title":"\u7f16\u8bd1\u53ca\u6d4b\u8bd5","text":"<ul> <li>\u7531\u4e8e\u52a0\u5165\u4e86\u4e00\u4e9b\u65b0\u7684 .c \u6587\u4ef6\uff0c\u53ef\u80fd\u9700\u8981\u4fee\u6539\u4e00\u4e9bMakefile\u6587\u4ef6\uff0c\u8bf7\u540c\u5b66\u81ea\u5df1\u5c1d\u8bd5\u4fee\u6539\uff0c\u4f7f\u9879\u76ee\u53ef\u4ee5\u7f16\u8bd1\u5e76\u8fd0\u884c\u3002</li> <li>\u8f93\u51fa\u793a\u4f8b     <pre><code>OpenSBI v1.1\n  ____                    _____ ____ _____\n / __ \\                  / ____|  _ \\_   _|\n| |  | |_ __   ___ _ __ | (___ | |_) || |\n| |  | | '_ \\ / _ \\ '_ \\ \\___ \\|  _ &lt; | |\n| |__| | |_) |  __/ | | |____) | |_) || |_\n \\____/| .__/ \\___|_| |_|_____/|____/_____|\n       | |\n       |_|\n\n...\n\nBoot HART MIDELEG         : 0x0000000000000222\nBoot HART MEDELEG         : 0x000000000000b109\n\n...mm_init done!\n...proc_init done!\nHello RISC-V\nidle process is running!\n\nSET [PID = 1 PRIORITY = 1 COUNTER = 1]\nSET [PID = 2 PRIORITY = 4 COUNTER = 4]\nSET [PID = 3 PRIORITY = 10 COUNTER = 10]\nSET [PID = 4 PRIORITY = 4 COUNTER = 4]\n\nswitch to [PID = 3 PRIORITY = 10 COUNTER = 10]\n[PID = 3] is running. auto_inc_local_var = 1\n...\n[PID = 3] is running. auto_inc_local_var = 10\n\nswitch to [PID = 4 PRIORITY = 4 COUNTER = 4]\n[PID = 4] is running. auto_inc_local_var = 1\n...\n[PID = 4] is running. auto_inc_local_var = 4\n\nswitch to [PID = 2 PRIORITY = 4 COUNTER = 4]\n[PID = 2] is running. auto_inc_local_var = 1\n...\n[PID = 2] is running. auto_inc_local_var = 4\n\nswitch to [PID = 1 PRIORITY = 1 COUNTER = 1]\n[PID = 1] is running. auto_inc_local_var = 1\n\nSET [PID = 1 PRIORITY = 1 COUNTER = 1]\nSET [PID = 2 PRIORITY = 4 COUNTER = 4]\nSET [PID = 3 PRIORITY = 10 COUNTER = 10]\nSET [PID = 4 PRIORITY = 4 COUNTER = 4]\n\nswitch to [PID = 3 PRIORITY = 10 COUNTER = 10]\n[PID = 3] is running. auto_inc_local_var = 11\n...\n</code></pre></li> </ul>"},{"location":"lab3/#_9","title":"\u601d\u8003\u9898","text":"<ol> <li>\u9a8c\u8bc1 <code>.text</code>\uff0c<code>.rodata</code> \u6bb5\u7684\u5c5e\u6027\u662f\u5426\u6210\u529f\u8bbe\u7f6e\uff0c\u7ed9\u51fa\u622a\u56fe\u3002</li> <li>\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728 <code>setup_vm</code> \u4e2d\u9700\u8981\u505a\u7b49\u503c\u6620\u5c04?</li> <li>\u5728 Linux \u4e2d\uff0c\u662f\u4e0d\u9700\u8981\u505a\u7b49\u503c\u6620\u5c04\u7684\u3002\u8bf7\u63a2\u7d22\u4e00\u4e0b\u4e0d\u5728 <code>setup_vm</code> \u4e2d\u505a\u7b49\u503c\u6620\u5c04\u7684\u65b9\u6cd5\u3002</li> </ol>"},{"location":"lab3/#_10","title":"\u4f5c\u4e1a\u63d0\u4ea4","text":"<p>\u540c\u5b66\u9700\u8981\u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\u4ee5\u53ca\u6574\u4e2a\u5de5\u7a0b\u4ee3\u7801\uff0c\u5728\u63d0\u4ea4\u524d\u8bf7\u4f7f\u7528 <code>make clean</code> \u6e05\u9664\u6240\u6709\u6784\u5efa\u4ea7\u7269\u3002</p>"},{"location":"lab4/","title":"Lab 4: RV64 \u7528\u6237\u6001\u7a0b\u5e8f","text":""},{"location":"lab4/#_1","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<ul> <li>\u521b\u5efa\u7528\u6237\u6001\u8fdb\u7a0b\uff0c\u5e76\u8bbe\u7f6e <code>sstatus</code> \u6765\u5b8c\u6210\u5185\u6838\u6001\u8f6c\u6362\u81f3\u7528\u6237\u6001\u3002</li> <li>\u6b63\u786e\u8bbe\u7f6e\u7528\u6237\u8fdb\u7a0b\u7684\u7528\u6237\u6001\u6808\u548c\u5185\u6838\u6001\u6808\uff0c \u5e76\u5728\u5f02\u5e38\u5904\u7406\u65f6\u6b63\u786e\u5207\u6362\u3002</li> <li>\u8865\u5145\u5f02\u5e38\u5904\u7406\u903b\u8f91\uff0c\u5b8c\u6210\u6307\u5b9a\u7684\u7cfb\u7edf\u8c03\u7528\uff08SYS_WRITE, SYS_GETPID\uff09\u529f\u80fd\u3002</li> </ul>"},{"location":"lab4/#_2","title":"\u5b9e\u9a8c\u73af\u5883","text":"<ul> <li>Same as previous labs.</li> </ul>"},{"location":"lab4/#_3","title":"\u80cc\u666f\u77e5\u8bc6","text":""},{"location":"lab4/#_4","title":"\u7528\u6237\u6a21\u5f0f\u548c\u5185\u6838\u6a21\u5f0f","text":"<p>\u5904\u7406\u5668\u5b58\u5728\u4e24\u79cd\u4e0d\u540c\u7684\u6a21\u5f0f\uff1a\u7528\u6237\u6a21\u5f0f\uff08U-Mode\uff09\u548c\u5185\u6838\u6a21\u5f0f\uff08S-Mode\uff09\u3002</p> <ul> <li>\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\uff0c\u6267\u884c\u4ee3\u7801\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u786c\u4ef6\uff0c\u5fc5\u987b\u59d4\u6258\u7ed9\u7cfb\u7edf\u63d0\u4f9b\u7684\u63a5\u53e3\u624d\u80fd\u8bbf\u95ee\u786c\u4ef6\u6216\u5185\u5b58\u3002</li> <li>\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\uff0c\u6267\u884c\u4ee3\u7801\u5bf9\u5e95\u5c42\u786c\u4ef6\u5177\u6709\u5b8c\u6574\u4e14\u4e0d\u53d7\u9650\u5236\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5b83\u53ef\u4ee5\u6267\u884c\u4efb\u4f55 CPU \u6307\u4ee4\u5e76\u5f15\u7528\u4efb\u4f55\u5185\u5b58\u5730\u5740\u3002</li> </ul> <p>\u5904\u7406\u5668\u6839\u636e\u5904\u7406\u5668\u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u7c7b\u578b\u5728\u8fd9\u4e24\u79cd\u6a21\u5f0f\u4e4b\u95f4\u5207\u6362\u3002\u5e94\u7528\u7a0b\u5e8f\u4ee5\u7528\u6237\u6a21\u5f0f\u8fd0\u884c\uff0c\u800c\u6838\u5fc3\u64cd\u4f5c\u7cfb\u7edf\u7ec4\u4ef6\u4ee5\u5185\u6838\u6a21\u5f0f\u8fd0\u884c\u3002</p>"},{"location":"lab4/#_5","title":"\u76ee\u6807","text":"<p>\u5728 lab3 \u4e2d\uff0c\u6211\u4eec\u542f\u7528\u4e86\u865a\u62df\u5185\u5b58\uff0c\u8fd9\u4e3a\u8fdb\u7a0b\u95f4\u5730\u5740\u7a7a\u95f4\u76f8\u4e92\u9694\u79bb\u6253\u4e0b\u4e86\u57fa\u7840\u3002\u7136\u800c\uff0c\u6211\u4eec\u5f53\u65f6\u53ea\u521b\u5efa\u4e86\u5185\u6838\u7ebf\u7a0b\uff0c\u5b83\u4eec\u5171\u7528\u4e86\u5730\u5740\u7a7a\u95f4 \uff08\u5171\u7528\u4e00\u4e2a\u5185\u6838\u9875\u8868 <code>swapper_pg_dir</code> \uff09\u3002\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u5c06\u5f15\u5165\u7528\u6237\u6001\u8fdb\u7a0b\u3002</p> <ul> <li>\u5f53\u542f\u52a8\u7528\u6237\u6001\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u5185\u6838\u5c06\u4e3a\u8be5\u5e94\u7528\u7a0b\u5e8f\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e13\u7528\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7b49\u8d44\u6e90\u3002</li> <li>\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u662f\u79c1\u6709\u7684\uff0c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u65e0\u6cd5\u66f4\u6539\u5c5e\u4e8e\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u3002</li> <li>\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u662f\u72ec\u7acb\u8fd0\u884c\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5d29\u6e83\uff0c\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u548c\u64cd\u4f5c\u7cfb\u7edf\u5c06\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\u3002</li> <li>\u7528\u6237\u6001\u5e94\u7528\u7a0b\u5e8f\u53ef\u8bbf\u95ee\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u662f\u53d7\u9650\u7684\u3002</li> <li>\u5728\u7528\u6237\u6001\u4e0b\uff0c\u5e94\u7528\u7a0b\u5e8f\u65e0\u6cd5\u8bbf\u95ee\u5185\u6838\u7684\u865a\u62df\u5730\u5740\uff0c\u9632\u6b62\u5176\u4fee\u6539\u5173\u952e\u64cd\u4f5c\u7cfb\u7edf\u6570\u636e\u3002</li> <li>\u5f53\u7528\u6237\u6001\u7a0b\u5e8f\u9700\u8981\u8bbf\u95ee\u5173\u952e\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u6765\u5b8c\u6210\u7528\u6237\u6001\u7a0b\u5e8f\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u7684\u4e92\u52a8\u3002</li> </ul>"},{"location":"lab4/#_6","title":"\u7cfb\u7edf\u8c03\u7528\u7ea6\u5b9a","text":"<p>\u7cfb\u7edf\u8c03\u7528\u662f\u7528\u6237\u6001\u5e94\u7528\u7a0b\u5e8f\u8bf7\u6c42\u5185\u6838\u670d\u52a1\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u5728 RISC-V \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 <code>ecall</code> \u6307\u4ee4\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u3002\u5f53\u6267\u884c\u8fd9\u6761\u6307\u4ee4\u65f6\uff0c\u5904\u7406\u5668\u4f1a\u63d0\u5347\u7279\u6743\u6a21\u5f0f\uff0c\u8df3\u8f6c\u5230\u5f02\u5e38\u5904\u7406\u51fd\u6570\uff0c\u5904\u7406\u8fd9\u6761\u7cfb\u7edf\u8c03\u7528\u3002</p> <p>Linux \u4e2d RISC-V \u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u53ef\u4ee5\u5728 <code>include/uapi/asm-generic/unistd.h</code> \u4e2d\u627e\u5230\uff0c syscall(2) \u624b\u518c\u9875\u4e0a\u5bf9RISC-V\u67b6\u6784\u4e0a\u7684\u8c03\u7528\u8bf4\u660e\u8fdb\u884c\u4e86\u603b\u7ed3\uff0c\u7cfb\u7edf\u8c03\u7528\u53c2\u6570\u4f7f\u7528 a0 - a5 \uff0c\u7cfb\u7edf\u8c03\u7528\u53f7\u4f7f\u7528 a7 \uff0c \u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\u4f1a\u88ab\u4fdd\u5b58\u5230 a0, a1 \u4e2d\u3002</p>"},{"location":"lab4/#sstatussum-pteu","title":"sstatus[SUM] PTE[U]","text":"<p>\u5f53\u9875\u8868\u9879 PTE[U] \u7f6e 0 \u65f6\uff0c\u8be5\u9875\u8868\u9879\u5bf9\u5e94\u7684\u5185\u5b58\u9875\u4e3a\u5185\u6838\u9875\uff0c\u8fd0\u884c\u5728 U-Mode \u4e0b\u7684\u4ee3\u7801\u65e0\u6cd5\u8bbf\u95ee\u3002\u5f53\u9875\u8868\u9879 PTE[U] \u7f6e 1 \u65f6\uff0c\u8be5\u9875\u8868\u9879\u5bf9\u5e94\u7684\u5185\u5b58\u9875\u4e3a\u7528\u6237\u9875\uff0c\u8fd0\u884c\u5728 S-Mode \u4e0b\u7684\u4ee3\u7801\u65e0\u6cd5\u8bbf\u95ee\u3002\u5982\u679c\u60f3\u8ba9 S \u7279\u6743\u7ea7\u4e0b\u7684\u7a0b\u5e8f\u80fd\u591f\u8bbf\u95ee\u7528\u6237\u9875\uff0c\u9700\u8981\u5bf9 sstatus[SUM] \u4f4d\u7f6e 1 \u3002\u4f46\u662f\u65e0\u8bba\u4ec0\u4e48\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u9875\u4e2d\u7684\u6307\u4ee4\u5bf9\u4e8e S-Mode \u800c\u8a00\u90fd\u662f\u65e0\u6cd5\u6267\u884c\u7684\u3002 </p>"},{"location":"lab4/#_7","title":"\u7528\u6237\u6001\u6808\u4e0e\u5185\u6838\u6001\u6808","text":"<p>\u5f53\u7528\u6237\u6001\u7a0b\u5e8f\u5728\u7528\u6237\u6001\u8fd0\u884c\u65f6\uff0c\u5176\u4f7f\u7528\u7684\u6808\u4e3a\u7528\u6237\u6001\u6808\u3002\u5f53\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u9677\u5165\u5185\u6838\u5904\u7406\u65f6\u4f7f\u7528\u7684\u6808\u4e3a\u5185\u6838\u6001\u6808\u3002\u56e0\u6b64\uff0c\u9700\u8981\u533a\u5206\u7528\u6237\u6001\u6808\u548c\u5185\u6838\u6001\u6808\uff0c\u4e14\u9700\u8981\u5728\u5f02\u5e38\u5904\u7406\u7684\u8fc7\u7a0b\u4e2d\u5bf9\u6808\u8fdb\u884c\u5207\u6362\u3002</p>"},{"location":"lab4/#elf","title":"ELF \u7a0b\u5e8f","text":"<p>ELF, short for Executable and Linkable Format. \u662f\u5f53\u4eca\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u683c\u5f0f\u3002\u4f8b\u5982\u5f53\u6211\u4eec\u8fd0\u884c <code>gcc &lt;some-name&gt;.c</code> \u540e\u4ea7\u751f\u7684 <code>a.out</code> \u8f93\u51fa\u6587\u4ef6\u7684\u683c\u5f0f\u5c31\u662f ELF\u3002</p> <pre><code>$ cat hello.c\n#include &lt;stdio.h&gt;\n\nint main() {\n    printf(\"hello, world\\n\");\n    return 0;\n}\n$ gcc hello.c\n$ file a.out\na.out: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, \ninterpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=dd33139196142abd22542134c20d85c571a78b0c, \nfor GNU/Linux 3.2.0, not stripped\n</code></pre> <p>\u5c06\u7a0b\u5e8f\u5c01\u88c5\u6210 ELF \u683c\u5f0f\u7684\u610f\u4e49\u5305\u62ec\u4ee5\u4e0b\u51e0\u70b9\uff1a</p> <ul> <li>ELF \u6587\u4ef6\u53ef\u4ee5\u5305\u542b\u5c06\u7a0b\u5e8f\u6b63\u786e\u52a0\u8f7d\u5165\u5185\u5b58\u7684\u5143\u6570\u636e\uff08metadata\uff09\u3002</li> <li>ELF \u6587\u4ef6\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u7531\u52a0\u8f7d\u5668\uff08loader\uff09\u5c06\u52a8\u6001\u94fe\u63a5\u5728\u7a0b\u5e8f\u4e0a\u7684\u52a8\u6001\u94fe\u63a5\u5e93\uff08shared library\uff09\u6b63\u786e\u5730\u4ece\u786c\u76d8\u6216\u5185\u5b58\u4e2d\u52a0\u8f7d\u3002</li> <li>ELF \u6587\u4ef6\u5305\u542b\u7684\u91cd\u5b9a\u4f4d\u4fe1\u606f\u53ef\u4ee5\u8ba9\u8be5\u7a0b\u5e8f\u7ee7\u7eed\u548c\u5176\u4ed6\u53ef\u91cd\u5b9a\u4f4d\u6587\u4ef6\u548c\u5e93\u518d\u6b21\u94fe\u63a5\uff0c\u6784\u6210\u65b0\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002</li> </ul> <p>\u4e3a\u4e86\u7b80\u5316\u5b9e\u9a8c\u6b65\u9aa4\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u9759\u6001\u94fe\u63a5\u7684\u7a0b\u5e8f\uff0c\u4e0d\u4f1a\u6d89\u53ca\u94fe\u63a5\u52a8\u6001\u94fe\u63a5\u5e93\u7684\u5185\u5bb9\u3002</p>"},{"location":"lab4/#_8","title":"\u5b9e\u9a8c\u6b65\u9aa4","text":""},{"location":"lab4/#_9","title":"\u51c6\u5907\u5de5\u7a0b","text":"<ul> <li>\u6b64\u6b21\u5b9e\u9a8c\u57fa\u4e8e lab3 \u540c\u5b66\u6240\u5b9e\u73b0\u7684\u4ee3\u7801\u8fdb\u884c\u3002</li> <li> <p>\u9700\u8981\u4fee\u6539 <code>vmlinux.lds</code>\uff0c\u5c06\u7528\u6237\u6001\u7a0b\u5e8f <code>uapp</code> \u52a0\u8f7d\u81f3 <code>.data</code> \u6bb5\u3002\u6309\u5982\u4e0b\u4fee\u6539\uff1a <pre><code>...\n\n.data : ALIGN(0x1000){\n        _sdata = .;\n\n        *(.sdata .sdata*)\n        *(.data .data.*)\n\n        _edata = .;\n\n        . = ALIGN(0x1000);\n        _sramdisk = .;\n        *(.uapp .uapp*)\n        _eramdisk = .;\n        . = ALIGN(0x1000);\n\n    } &gt;ramv AT&gt;ram\n\n...\n</code></pre></p> <p>\u5982\u679c\u4f60\u8981\u4f7f\u7528 <code>_sramdisk</code> \u8fd9\u4e2a\u7b26\u53f7\uff0c\u53ef\u4ee5\u5728\u4ee3\u7801\u91cc\u8fd9\u6837\u6765\u58f0\u660e\u5b83\uff1a<code>extern char _sramdisk[]</code>\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u50cf\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u4e00\u6837\u6765\u8bbf\u95ee\u8fd9\u5757\u5185\u5b58\u7684\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u7a0b\u5e8f\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u5c31\u662f <code>_sramdisk[0]</code>\u3002</p> </li> <li> <p>\u9700\u8981\u4fee\u6539 <code>defs.h</code>\uff0c\u5728 <code>defs.h</code> \u6dfb\u52a0 \u5982\u4e0b\u5185\u5bb9\uff1a <pre><code>#define USER_START (0x0000000000000000) // user space start virtual address\n#define USER_END   (0x0000004000000000) // user space end virtual address\n</code></pre></p> </li> <li> <p>\u4ece <code>repo</code> \u540c\u6b65\u4ee5\u4e0b\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u3002\u5e76\u6309\u7167\u4e0b\u9762\u7684\u4f4d\u7f6e\u6765\u653e\u7f6e\u8fd9\u4e9b\u65b0\u6587\u4ef6\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u5728 <code>mm</code> \u4e2d\u6dfb\u52a0\u4e86 <code>buddy system</code>\uff0c\u4f46\u662f\u4e5f\u4fdd\u8bc1\u4e86\u539f\u6765\u8c03\u7528\u7684 <code>kalloc</code> \u548c <code>kfree</code> \u7684\u517c\u5bb9\u3002\u4f60\u5e94\u8be5\u65e0\u9700\u4fee\u6539\u539f\u5148\u4f7f\u7528\u4e86 <code>kalloc</code> \u7684\u76f8\u5173\u4ee3\u7801\uff0c\u5982\u679c\u51fa\u73b0\u517c\u5bb9\u6027\u95ee\u9898\u53ef\u4ee5\u8054\u7cfb\u52a9\u6559\u3002\u4e3a\u4e86\u51cf\u5c0f\u5927\u5bb6\u7684\u5de5\u4f5c\u91cf\uff0c\u6211\u4eec\u66ff\u5927\u5bb6\u5b9e\u73b0\u4e86 Buddy System\uff0c\u5927\u5bb6\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u6765\u7ba1\u7406\u5185\u5b58\uff1a <pre><code>// \u5206\u914d page_cnt \u4e2a\u9875\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u8fd4\u56de\u5206\u914d\u5185\u5b58\u7684\u5730\u5740\u3002\u4fdd\u8bc1\u5206\u914d\u7684\u5185\u5b58\u5728\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u4e0a\u90fd\u662f\u8fde\u7eed\u7684\nuint64_t alloc_pages(uint64_t page_cnt);\n// \u76f8\u5f53\u4e8e alloc_pages(1);\nuint64_t alloc_page();\n// \u91ca\u653e\u4ece addr \u5f00\u59cb\u7684\u4e4b\u524d\u6309\u5206\u914d\u7684\u5185\u5b58\nvoid free_pages(uint64_t addr);\n</code></pre> <pre><code>.\n\u251c\u2500\u2500 arch\n\u2502   \u2514\u2500\u2500 riscv\n\u2502       \u2514\u2500\u2500 Makefile\n\u2502       \u2514\u2500\u2500 include\n\u2502           \u2514\u2500\u2500 mm.h\n\u2502           \u2514\u2500\u2500 stdint.h\n\u2502       \u2514\u2500\u2500 kernel\n\u2502           \u2514\u2500\u2500 mm.c\n\u251c\u2500\u2500 include\n\u2502   \u2514\u2500\u2500 elf.h (this is copied from newlib)\n\u2514\u2500\u2500 user\n    \u251c\u2500\u2500 Makefile\n    \u251c\u2500\u2500 getpid.c\n    \u251c\u2500\u2500 link.lds\n    \u251c\u2500\u2500 printf.c\n    \u251c\u2500\u2500 start.S\n    \u251c\u2500\u2500 stddef.h\n    \u251c\u2500\u2500 stdio.h\n    \u251c\u2500\u2500 syscall.h\n    \u2514\u2500\u2500 uapp.S\n</code></pre></p> </li> <li>\u4fee\u6539\u6839\u76ee\u5f55\u4e0b\u7684 Makefile, \u5c06 <code>user</code> \u7eb3\u5165\u5de5\u7a0b\u7ba1\u7406\u3002</li> <li>\u5728\u6839\u76ee\u5f55\u4e0b <code>make</code> \u4f1a\u751f\u6210 <code>user/uapp.o</code> <code>user/uapp.elf</code> <code>user/uapp.bin</code>\uff0c\u4ee5\u53ca\u6211\u4eec\u6700\u7ec8\u6d4b\u8bd5\u4f7f\u7528\u7684 ELF \u53ef\u6267\u884c\u6587\u4ef6 <code>user/uapp</code> \u3002 \u901a\u8fc7 <code>objdump</code> \u6211\u4eec\u53ef\u4ee5\u770b\u5230 uapp \u4f7f\u7528 ecall \u6765\u8c03\u7528 SYSCALL (\u5728 U-Mode \u4e0b\u4f7f\u7528 ecall \u4f1a\u89e6\u53d1environment-call-from-U-mode\u5f02\u5e38)\u3002\u4ece\u800c\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u5904\u5728 S-Mode \u7684 OS\uff0c \u7531\u5185\u6838\u6765\u5904\u7406\u76f8\u5173\u5f02\u5e38\u3002</li> <li>\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u4f1a\u5c06\u7528\u6237\u6001\u7a0b\u5e8f strip \u6210\u7eaf\u4e8c\u8fdb\u5236\u6587\u4ef6\u6765\u8fd0\u884c\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u7a0b\u5e8f\u8fd0\u884c\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u4f4d\u4e8e\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u5f00\u59cb\u4f4d\u7f6e, \u4e5f\u5c31\u662f\u8bf4 <code>_sramdisk</code> \u5904\u7684\u6307\u4ee4\u5c31\u662f\u6211\u4eec\u8981\u6267\u884c\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u3002\u6211\u4eec\u5c06\u8fd0\u884c\u7eaf\u4e8c\u8fdb\u5236\u6587\u4ef6\u4f5c\u4e3a\u7b2c\u4e00\u6b65\uff0c\u5728\u786e\u8ba4\u7528\u6237\u6001\u7684\u7eaf\u4e8c\u8fdb\u5236\u6587\u4ef6\u80fd\u591f\u8fd0\u884c\u540e\uff0c\u6211\u4eec\u518d\u5c06\u5b58\u50a8\u5230\u5185\u5b58\u4e2d\u7684\u7528\u6237\u7a0b\u5e8f\u6587\u4ef6\u6362\u4e3a ELF \u6765\u8fdb\u884c\u6267\u884c\u3002 <pre><code>0000000000000004 &lt;getpid&gt;:                                                                       \n  4:   fe010113             addi    sp,sp,-32                                                \n  8:   00813c23             sd      s0,24(sp)                                                \n  c:   02010413             addi    s0,sp,32                                                 \n 10:   fe843783             ld      a5,-24(s0)                                               \n 14:   0ac00893             li      a7,172                                                   \n 18:   00000073             ecall                               &lt;- SYS_GETPID                        \n...\n\n00000000000000d8 &lt;vprintfmt&gt;:\n...\n60c:    00070513            mv  a0,a4\n610:    00068593            mv  a1,a3\n614:    00060613            mv  a2,a2\n618:    00000073            ecall                               &lt;- SYS_WRITE\n...\n</code></pre></li> </ul>"},{"location":"lab4/#_10","title":"\u521b\u5efa\u7528\u6237\u6001\u8fdb\u7a0b","text":"<ul> <li>\u672c\u6b21\u5b9e\u9a8c\u53ea\u9700\u8981\u521b\u5efa 4 \u4e2a\u7528\u6237\u6001\u8fdb\u7a0b\uff0c\u4fee\u6539 <code>proc.h</code> \u4e2d\u7684 <code>NR_TASKS</code> \u5373\u53ef\u3002</li> <li>\u7531\u4e8e\u521b\u5efa\u7528\u6237\u6001\u8fdb\u7a0b\u8981\u5bf9 <code>sepc</code> <code>sstatus</code> <code>sscratch</code> \u505a\u8bbe\u7f6e\uff0c\u6211\u4eec\u5c06\u5176\u52a0\u5165 <code>thread_struct</code> \u4e2d\u3002</li> <li>\u7531\u4e8e\u591a\u4e2a\u7528\u6237\u6001\u8fdb\u7a0b\u9700\u8981\u4fdd\u8bc1\u76f8\u5bf9\u9694\u79bb\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u5171\u7528\u9875\u8868\u3002\u6211\u4eec\u4e3a\u6bcf\u4e2a\u7528\u6237\u6001\u8fdb\u7a0b\u90fd\u521b\u5efa\u4e00\u4e2a\u9875\u8868\u3002\u4fee\u6539 <code>task_struct</code> \u5982\u4e0b\u3002 <pre><code>// proc.h \n\ntypedef unsigned long* pagetable_t;\n\nstruct thread_struct {\n    uint64_t ra;\n    uint64_t sp;                     \n    uint64_t s[12];\n\n    uint64_t sepc, sstatus, sscratch; \n};\n\nstruct task_struct {\n    struct thread_info* thread_info;\n    uint64_t state;\n    uint64_t counter;\n    uint64_t priority;\n    uint64_t pid;\n\n    struct thread_struct thread;\n\n    pagetable_t pgd;\n};\n</code></pre> <p>Warning\uff1a \u7ecf\u6d4b\u8bd5\uff0c\u5b9e\u73b0\u4e2d\u5e76\u4e0d\u9700\u8981 <code>thread_info</code> \u8fd9\u4e2a\u6210\u5458\uff0c\u53ef\u4ee5\u8003\u8651\u4e0d\u4f7f\u7528\u8fd9\u4e2a\u6210\u5458\uff0c\u6216\u8005\u5c06\u5176\u5220\u9664\uff0c\u5e76\u66f4\u6539 <code>switch_to</code> \u4e2d\u5404\u4e2a\u53d8\u91cf\u7684\u504f\u79fb\u91cf\uff0c\u8ba9\u6211\u4eec\u7684 OS \u4fdd\u6301\u539f\u6765\u7684\u884c\u4e3a\u3002</p> </li> <li> <p>\u4fee\u6539 task_init</p> <ul> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u8fdb\u7a0b\uff0c\u521d\u59cb\u5316\u6211\u4eec\u521a\u521a\u5728 <code>thread_struct</code> \u4e2d\u6dfb\u52a0\u7684\u4e09\u4e2a\u53d8\u91cf\u3002\u5177\u4f53\u800c\u8a00\uff1a<ul> <li>\u5c06 <code>sepc</code> \u8bbe\u7f6e\u4e3a <code>USER_START</code>\u3002</li> <li>\u914d\u7f6e <code>sstatus</code> \u4e2d\u7684 <code>SPP</code>\uff08\u4f7f\u5f97 sret \u8fd4\u56de\u81f3 U-Mode\uff09\uff0c <code>SPIE</code> \uff08sret \u4e4b\u540e\u5f00\u542f\u4e2d\u65ad\uff09\uff0c <code>SUM</code>\uff08S-Mode \u53ef\u4ee5\u8bbf\u95ee User \u9875\u9762\uff09\u3002</li> <li>\u5c06 <code>sscratch</code> \u8bbe\u7f6e\u4e3a <code>U-Mode</code> \u7684 sp\uff0c\u5176\u503c\u4e3a <code>USER_END</code> \uff08\u5373\uff0c\u7528\u6237\u6001\u6808\u88ab\u653e\u7f6e\u5728 <code>user space</code> \u7684\u6700\u540e\u4e00\u4e2a\u9875\u9762\uff09\u3002</li> </ul> </li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u8fdb\u7a0b\uff0c\u521b\u5efa\u5c5e\u4e8e\u5b83\u81ea\u5df1\u7684\u9875\u8868\u3002</li> <li>\u4e3a\u4e86\u907f\u514d <code>U-Mode</code> \u548c <code>S-Mode</code> \u5207\u6362\u7684\u65f6\u5019\u5207\u6362\u9875\u8868\uff0c\u6211\u4eec\u5c06\u5185\u6838\u9875\u8868 \uff08 <code>swapper_pg_dir</code> \uff09 \u590d\u5236\u5230\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u9875\u8868\u4e2d\u3002</li> <li>\u5c06 <code>uapp</code> \u6240\u5728\u7684\u9875\u9762\u6620\u5c04\u5230\u6bcf\u4e2a\u8fdb\u884c\u7684\u9875\u8868\u4e2d\u3002\u6ce8\u610f\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6709\u90e8\u5206\u6570\u636e\u4e0d\u5728\u6808\u4e0a\uff0c\u800c\u5728\u521d\u59cb\u5316\u7684\u8fc7\u7a0b\u4e2d\u5c31\u5df2\u7ecf\u88ab\u5206\u914d\u4e86\u7a7a\u95f4\uff08\u6bd4\u5982\u6211\u4eec\u7684 <code>uapp</code> \u4e2d\u7684 <code>counter</code> \u53d8\u91cf\uff09\u3002\u6240\u4ee5\uff0c\u4e8c\u8fdb\u5236\u6587\u4ef6\u9700\u8981\u5148\u88ab \u62f7\u8d1d \u5230\u4e00\u5757\u67d0\u4e2a\u8fdb\u7a0b\u4e13\u7528\u7684\u5185\u5b58\u4e4b\u540e\u518d\u8fdb\u884c\u6620\u5c04\uff0c\u9632\u6b62\u6240\u6709\u7684\u8fdb\u7a0b\u5171\u4eab\u6570\u636e\uff0c\u9020\u6210\u9884\u671f\u5916\u7684\u8fdb\u7a0b\u95f4\u76f8\u4e92\u5f71\u54cd\u3002</li> <li>\u8bbe\u7f6e\u7528\u6237\u6001\u6808\u3002\u5bf9\u6bcf\u4e2a\u7528\u6237\u6001\u8fdb\u7a0b\uff0c\u5176\u62e5\u6709\u4e24\u4e2a\u6808\uff1a \u7528\u6237\u6001\u6808\u548c\u5185\u6838\u6001\u6808\uff1b\u5176\u4e2d\uff0c\u5185\u6838\u6001\u6808\u5728 <code>lab3</code> \u4e2d\u6211\u4eec\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 <code>alloc_page</code> \u63a5\u53e3\u7533\u8bf7\u4e00\u4e2a\u7a7a\u7684\u9875\u9762\u6765\u4f5c\u4e3a\u7528\u6237\u6001\u6808\uff0c\u5e76\u6620\u5c04\u5230\u8fdb\u7a0b\u7684\u9875\u8868\u4e2d\u3002</li> </ul> </li> <li> <p>\u4fee\u6539 __switch_to\uff0c \u9700\u8981\u52a0\u5165 \u4fdd\u5b58/\u6062\u590d <code>sepc</code> <code>sstatus</code> <code>sscratch</code> \u4ee5\u53ca \u5207\u6362\u9875\u8868\u7684\u903b\u8f91\u3002</p> </li> <li>\u5728\u5207\u6362\u4e86\u9875\u8868\u4e4b\u540e\uff0c\u9700\u8981\u901a\u8fc7 <code>fence.i</code> \u548c <code>vma.fence</code> \u6765\u5237\u65b0 TLB \u548c ICache\u3002</li> </ul> <pre><code>                PHY_START                                                                PHY_END\n                     new allocated memory            allocated space end\n                   \u2502         \u2502                                \u2502                                                 \u2502\n                   \u25bc         \u25bc                                \u25bc                                                 \u25bc\n       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n PA    \u2502           \u2502         \u2502 uapp (copied from _sramdisk)  \u2502                                                 \u2502\n       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                             \u25b2                                \u25b2\n       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                \u2502\n       \u2502            (map)                                     \u2502\n       \u2502                        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u2502                        \u2502\n       \u2502                        \u2502\n       \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n VA    \u2502           UAPP         \u2502                                                                   \u2502u mode stack\u2502\n       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u25b2                                                                                                         \u25b2\n       \u2502                                                                                                         \u2502\n\n   USER_START                                                                                                USER_END\n</code></pre>"},{"location":"lab4/#_trap-trap_handler","title":"\u4fee\u6539\u4e2d\u65ad\u5165\u53e3/\u8fd4\u56de\u903b\u8f91 ( _trap ) \u4ee5\u53ca\u4e2d\u65ad\u5904\u7406\u51fd\u6570 \uff08 trap_handler \uff09","text":"<ul> <li>\u4e0e ARM \u67b6\u6784\u4e0d\u540c\u7684\u662f\uff0cRISC-V \u4e2d\u53ea\u6709\u4e00\u4e2a\u6808\u6307\u9488\u5bc4\u5b58\u5668( sp )\uff0c\u56e0\u6b64\u9700\u8981\u6211\u4eec\u6765\u5b8c\u6210\u7528\u6237\u6808\u4e0e\u5185\u6838\u6808\u7684\u5207\u6362\u3002</li> <li>\u7531\u4e8e\u6211\u4eec\u7684\u7528\u6237\u6001\u8fdb\u7a0b\u8fd0\u884c\u5728 <code>U-Mode</code> \u4e0b\uff0c \u4f7f\u7528\u7684\u8fd0\u884c\u6808\u4e5f\u662f <code>U-Mode Stack</code>\uff0c \u56e0\u6b64\u5f53\u89e6\u53d1\u5f02\u5e38\u65f6\uff0c \u6211\u4eec\u9996\u5148\u8981\u5bf9\u6808\u8fdb\u884c\u5207\u6362 \uff08 <code>U-Mode Stack</code> -&gt; <code>S-Mode Stack</code> \uff09\u3002\u540c\u7406 \u8ba9\u6211\u4eec\u5b8c\u6210\u4e86\u5f02\u5e38\u5904\u7406\uff0c \u4ece <code>S-Mode</code> \u8fd4\u56de\u81f3 <code>U-Mode</code>\uff0c \u4e5f\u9700\u8981\u8fdb\u884c\u6808\u5207\u6362 \uff08 <code>S-Mode Stack</code> -&gt; <code>U-Mode Stack</code> \uff09\u3002</li> <li>\u4fee\u6539 <code>__dummy</code>\u3002\u5728 4.2 \u4e2d \u6211\u4eec\u521d\u59cb\u5316\u65f6\uff0c <code>thread_struct.sp</code> \u4fdd\u5b58\u4e86 <code>S-Mode sp</code>\uff0c <code>thread_struct.sscratch</code> \u4fdd\u5b58\u4e86 <code>U-Mode sp</code>\uff0c \u56e0\u6b64\u5728 <code>S-Mode -&gt; U-&gt;Mode</code> \u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ea4\u6362\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\u7684\u503c\u5373\u53ef\u3002</li> <li>\u4fee\u6539 <code>_trap</code> \u3002\u540c\u7406 \u5728 <code>_trap</code> \u7684\u9996\u5c3e\u6211\u4eec\u90fd\u9700\u8981\u505a\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002\u6ce8\u610f\u5982\u679c\u662f \u5185\u6838\u7ebf\u7a0b( \u6ca1\u6709 U-Mode Stack ) \u89e6\u53d1\u4e86\u5f02\u5e38\uff0c\u5219\u4e0d\u9700\u8981\u8fdb\u884c\u5207\u6362\u3002\uff08\u5185\u6838\u7ebf\u7a0b\u7684 sp \u6c38\u8fdc\u6307\u5411\u7684 S-Mode Stack\uff0c sscratch \u4e3a 0\uff09</li> <li><code>uapp</code> \u4f7f\u7528 <code>ecall</code> \u4f1a\u4ea7\u751f <code>ECALL_FROM_U_MODE</code> exception\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728 <code>trap_handler</code> \u91cc\u9762\u8fdb\u884c\u6355\u83b7\u3002\u4fee\u6539 <code>trap_handler</code> \u5982\u4e0b\uff1a     <pre><code>void trap_handler(uint64_t scause, uint64_t sepc, struct pt_regs *regs) {\n    ...\n}\n</code></pre>     \u8fd9\u91cc\u9700\u8981\u89e3\u91ca\u65b0\u589e\u52a0\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570 <code>regs</code>\uff0c \u5728 _trap \u4e2d\u6211\u4eec\u5c06\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u8fde\u7eed\u7684\u4fdd\u5b58\u5728 S-Mode Stack\u4e0a\uff0c \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e00\u6bb5\u770b\u505a\u4e00\u4e2a\u53eb\u505a <code>pt_regs</code>\u7684\u7ed3\u6784\u4f53\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u7ed3\u6784\u4f53\u4e2d\u53d6\u5230\u76f8\u5e94\u7684\u5bc4\u5b58\u5668\u7684\u503c\uff08 \u6bd4\u5982 syscall \u4e2d\u6211\u4eec\u9700\u8981\u4ece a0 ~ a7 \u5bc4\u5b58\u5668\u4e2d\u53d6\u5230\u53c2\u6570 \uff09\u3002\u8fd9\u4e2a\u7ed3\u6784\u4f53\u4e2d\u7684\u503c\u4e5f\u53ef\u4ee5\u6309\u9700\u6dfb\u52a0\uff0c\u540c\u65f6\u9700\u8981\u5728 <code>_trap</code> \u4e2d\u5b58\u5165\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\u503c\u4ee5\u4f9b\u4f7f\u7528\uff0c \u793a\u4f8b\u5982\u4e0b\u56fe\uff1a     <pre><code>    High Addr \u2500\u2500\u2500\u25ba  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                    \u2502   sstatus   \u2502\n                    \u2502             \u2502\n                    \u2502     sepc    \u2502\n                    \u2502             \u2502\n                    \u2502     x31     \u2502\n                    \u2502             \u2502\n                    \u2502      .      \u2502\n                    \u2502      .      \u2502\n                    \u2502      .      \u2502\n                    \u2502             \u2502\n                    \u2502     x1      \u2502\n                    \u2502             \u2502\n                    \u2502     x0      \u2502\n sp (pt_regs)  \u2500\u2500\u25ba  \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n    Low  Addr \u2500\u2500\u2500\u25ba  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>     \u8bf7\u540c\u5b66\u81ea\u5df1\u8865\u5145 <code>struct pt_regs</code>\u7684\u5b9a\u4e49\uff0c \u4ee5\u53ca\u5728 <code>trap_handler</code> \u4e2d\u8865\u5145\u5904\u7406 SYSCALL \u7684\u903b\u8f91\u3002</li> </ul>"},{"location":"lab4/#_11","title":"\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528","text":"<ul> <li>\u672c\u6b21\u5b9e\u9a8c\u8981\u6c42\u7684\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u539f\u578b\u4ee5\u53ca\u5177\u4f53\u529f\u80fd\u5982\u4e0b\uff1a<ul> <li>64 \u53f7\u7cfb\u7edf\u8c03\u7528 <code>sys_write(unsigned int fd, const char* buf, size_t count)</code> \u8be5\u8c03\u7528\u5c06\u7528\u6237\u6001\u4f20\u9012\u7684\u5b57\u7b26\u4e32\u6253\u5370\u5230\u5c4f\u5e55\u4e0a\uff0c\u6b64\u5904fd\u4e3a\u6807\u51c6\u8f93\u51fa\uff081\uff09\uff0cbuf\u4e3a\u7528\u6237\u9700\u8981\u6253\u5370\u7684\u8d77\u59cb\u5730\u5740\uff0ccount\u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u8fd4\u56de\u6253\u5370\u7684\u5b57\u7b26\u6570\u3002( \u5177\u4f53\u89c1 user/printf.c )</li> <li>172 \u53f7\u7cfb\u7edf\u8c03\u7528 <code>sys_getpid()</code> \u8be5\u8c03\u7528\u4ececurrent\u4e2d\u83b7\u53d6\u5f53\u524d\u7684pid\u653e\u5165a0\u4e2d\u8fd4\u56de\uff0c\u65e0\u53c2\u6570\u3002\uff08 \u5177\u4f53\u89c1 user/getpid.c \uff09</li> </ul> </li> <li>\u589e\u52a0 <code>syscall.c</code> <code>syscall.h</code> \u6587\u4ef6\uff0c \u5e76\u5728\u5176\u4e2d\u5b9e\u73b0 <code>getpid</code> \u4ee5\u53ca <code>write</code> \u903b\u8f91\u3002</li> <li>\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u53c2\u6570\u653e\u7f6e\u5728 <code>a0</code> \u4e2d (\u4e0d\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u5bc4\u5b58\u5668\uff0c \u5e94\u8be5\u4fee\u6539 regs \u4e2d\u4fdd\u5b58\u7684\u5185\u5bb9)\u3002</li> <li>\u9488\u5bf9\u7cfb\u7edf\u8c03\u7528\u8fd9\u4e00\u7c7b\u5f02\u5e38\uff0c \u6211\u4eec\u9700\u8981\u624b\u52a8\u5c06 <code>sepc + 4</code> \uff08 <code>sepc</code> \u8bb0\u5f55\u7684\u662f\u89e6\u53d1\u5f02\u5e38\u7684\u6307\u4ee4\u5730\u5740\uff0c \u7531\u4e8e\u7cfb\u7edf\u8c03\u7528\u8fd9\u7c7b\u5f02\u5e38\u5904\u7406\u5b8c\u6210\u4e4b\u540e\uff0c \u6211\u4eec\u5e94\u8be5\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u7684\u6307\u4ee4\uff0c\u56e0\u6b64\u9700\u8981\u6211\u4eec\u624b\u52a8\u4fee\u6539 <code>sepc</code> \u7684\u5730\u5740\uff0c\u4f7f\u5f97 <code>sret</code> \u4e4b\u540e \u7a0b\u5e8f\u7ee7\u7eed\u6267\u884c\uff09\u3002</li> </ul>"},{"location":"lab4/#heads-start_kernel","title":"\u4fee\u6539 head.S \u4ee5\u53ca start_kernel","text":"<ul> <li>\u5728\u4e4b\u524d\u7684 lab \u4e2d\uff0c \u5728 OS boot \u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u7b49\u5f85\u4e00\u4e2a\u65f6\u95f4\u7247\uff0c\u624d\u4f1a\u8fdb\u884c\u8c03\u5ea6\u3002\u6211\u4eec\u73b0\u5728\u66f4\u6539\u4e3a OS boot \u5b8c\u6210\u4e4b\u540e\u7acb\u5373\u8c03\u5ea6 uapp \u8fd0\u884c\u3002</li> <li>\u5728 start_kernel \u4e2d\u8c03\u7528 schedule() \u6ce8\u610f\u653e\u7f6e\u5728 test() \u4e4b\u524d\u3002</li> <li>\u5c06 head.S \u4e2d enable interrupt sstatus.SIE \u903b\u8f91\u6ce8\u91ca\uff0c\u786e\u4fdd schedule \u8fc7\u7a0b\u4e0d\u53d7\u4e2d\u65ad\u5f71\u54cd\u3002</li> </ul>"},{"location":"lab4/#_12","title":"\u6d4b\u8bd5\u7eaf\u4e8c\u8fdb\u5236\u6587\u4ef6","text":"<ul> <li>\u7531\u4e8e\u52a0\u5165\u4e86\u4e00\u4e9b\u65b0\u7684 .c \u6587\u4ef6\uff0c\u53ef\u80fd\u9700\u8981\u4fee\u6539\u4e00\u4e9bMakefile\u6587\u4ef6\uff0c\u8bf7\u540c\u5b66\u81ea\u5df1\u5c1d\u8bd5\u4fee\u6539\uff0c\u4f7f\u9879\u76ee\u53ef\u4ee5\u7f16\u8bd1\u5e76\u8fd0\u884c\u3002</li> <li>\u8f93\u51fa\u793a\u4f8b     <pre><code>OpenSBI v0.9\n      ____                    _____ ____ _____\n     / __ \\                  / ____|  _ \\_   _|\n    | |  | |_ __   ___ _ __ | (___ | |_) || |\n    | |  | | '_ \\ / _ \\ '_ \\ \\___ \\|  _ &lt; | |\n    | |__| | |_) |  __/ | | |____) | |_) || |_\n     \\____/| .__/ \\___|_| |_|_____/|____/_____|\n           | |\n           |_|\n\n    ...\n\n    Boot HART MIDELEG         : 0x0000000000000222\n    Boot HART MEDELEG         : 0x000000000000b109\n\n    ...mm_init done!\n    ...proc_init done!\n    [S-MODE] Hello RISC-V\n\n    [U-MODE] pid: 4, sp is 0000003fffffffe0, this is print No.*\n    [U-MODE] pid: 3, sp is 0000003fffffffe0, this is print No.*\n    [U-MODE] pid: 2, sp is 0000003fffffffe0, this is print No.*\n    [U-MODE] pid: 1, sp is 0000003fffffffe0, this is print No.*\n\n    [U-MODE] pid: 4, sp is 0000003fffffffe0, this is print No.*\n    [U-MODE] pid: 3, sp is 0000003fffffffe0, this is print No.*\n    [U-MODE] pid: 2, sp is 0000003fffffffe0, this is print No.*\n    [U-MODE] pid: 1, sp is 0000003fffffffe0, this is print No.*\n\n    [U-MODE] pid: 4, sp is 0000003fffffffe0, this is print No.*\n    [U-MODE] pid: 3, sp is 0000003fffffffe0, this is print No.*\n    [U-MODE] pid: 2, sp is 0000003fffffffe0, this is print No.*\n    [U-MODE] pid: 1, sp is 0000003fffffffe0, this is print No.*\n\n    [U-MODE] pid: 4, sp is 0000003fffffffe0, this is print No.*\n    [U-MODE] pid: 3, sp is 0000003fffffffe0, this is print No.*\n    [U-MODE] pid: 2, sp is 0000003fffffffe0, this is print No.*\n    [U-MODE] pid: 1, sp is 0000003fffffffe0, this is print No.*\n    ...\n</code></pre></li> </ul>"},{"location":"lab4/#elf_1","title":"\u6dfb\u52a0 ELF \u652f\u6301","text":""},{"location":"lab4/#elf-header","title":"ELF Header","text":"<p>ELF \u6587\u4ef6\u4e2d\u5305\u542b\u4e86\u5c06\u7a0b\u5e8f\u52a0\u8f7d\u5230\u5185\u5b58\u6240\u9700\u7684\u4fe1\u606f\u3002\u5f53\u6211\u4eec\u901a\u8fc7 <code>readelf</code> \u6765\u67e5\u770b\u4e00\u4e2a ELF \u53ef\u6267\u884c\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u8bfb\u5230\u88ab\u5305\u542b\u5728 ELF Header \u4e2d\u7684\u4fe1\u606f\uff1a</p> <pre><code>$ readelf -a uapp\nELF Header:\n  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 \n  Class:                             ELF64\n  Data:                              2's complement, little endian\n  Version:                           1 (current)\n  OS/ABI:                            UNIX - System V\n  ABI Version:                       0\n  Type:                              EXEC (Executable file)\n  Machine:                           RISC-V\n  Version:                           0x1\n  Entry point address:               0x100e8\n  Start of program headers:          64 (bytes into file)\n  Start of section headers:          3200 (bytes into file)\n  Flags:                             0x0\n  Size of this header:               64 (bytes)\n  Size of program headers:           56 (bytes)\n  Number of program headers:         3\n  Size of section headers:           64 (bytes)\n  Number of section headers:         9\n  Section header string table index: 8\n\nSection Headers:\n  [Nr] Name              Type             Address           Offset\n       Size              EntSize          Flags  Link  Info  Align\n  [ 0]                   NULL             0000000000000000  00000000\n       0000000000000000  0000000000000000           0     0     0\n  [ 1] .text             PROGBITS         00000000000100e8  000000e8\n       00000000000006fc  0000000000000000  AX       0     0     4\n  [ 2] .rodata           PROGBITS         00000000000107e8  000007e8\n       0000000000000078  0000000000000000   A       0     0     8\n  [ 3] .bss              NOBITS           0000000000011860  00000860\n       00000000000003f0  0000000000000000  WA       0     0     8\n  [ 4] .comment          PROGBITS         0000000000000000  00000860\n       000000000000002b  0000000000000001  MS       0     0     1\n  [ 5] .riscv.attributes RISCV_ATTRIBUTE  0000000000000000  0000088b\n       000000000000002e  0000000000000000           0     0     1\n  [ 6] .symtab           SYMTAB           0000000000000000  000008c0\n       00000000000002d0  0000000000000018           7    17     8\n  [ 7] .strtab           STRTAB           0000000000000000  00000b90\n       00000000000000a1  0000000000000000           0     0     1\n  [ 8] .shstrtab         STRTAB           0000000000000000  00000c31\n       0000000000000049  0000000000000000           0     0     1\nKey to Flags:\n  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),\n  L (link order), O (extra OS processing required), G (group), T (TLS),\n  C (compressed), x (unknown), o (OS specific), E (exclude),\n  D (mbind), p (processor specific)\n\nThere are no section groups in this file.\n\nProgram Headers:\n  Type           Offset             VirtAddr           PhysAddr\n                 FileSiz            MemSiz              Flags  Align\n  RISCV_ATTRIBUT 0x000000000000088b 0x0000000000000000 0x0000000000000000\n                 0x000000000000002e 0x0000000000000000  R      0x1\n  LOAD           0x00000000000000e8 0x00000000000100e8 0x00000000000100e8\n                 0x0000000000000778 0x0000000000001b68  RWE    0x8\n  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000\n                 0x0000000000000000 0x0000000000000000  RW     0x10\n\n Section to Segment mapping:\n  Segment Sections...\n   00     .riscv.attributes \n   01     .text .rodata .bss \n   02     \n\nThere is no dynamic section in this file.\n\nThere are no relocations in this file.\n\nThe decoding of unwind sections for machine type RISC-V is not currently supported.\n\nSymbol table '.symtab' contains 30 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 00000000000100e8     0 SECTION LOCAL  DEFAULT    1 .text\n     2: 00000000000107e8     0 SECTION LOCAL  DEFAULT    2 .rodata\n     3: 0000000000011860     0 SECTION LOCAL  DEFAULT    3 .bss\n     4: 0000000000000000     0 SECTION LOCAL  DEFAULT    4 .comment\n     5: 0000000000000000     0 SECTION LOCAL  DEFAULT    5 .riscv.attributes\n     6: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS start.o\n     7: 00000000000100e8     0 NOTYPE  LOCAL  DEFAULT    1 $x\n     8: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS getpid.c\n     9: 00000000000100ec    52 FUNC    LOCAL  DEFAULT    1 getpid\n    10: 00000000000100ec     0 NOTYPE  LOCAL  DEFAULT    1 $x\n    11: 0000000000010120     0 NOTYPE  LOCAL  DEFAULT    1 $x\n    12: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS printf.c\n    13: 000000000001017c     0 NOTYPE  LOCAL  DEFAULT    1 $x\n    14: 00000000000101d4  1412 FUNC    LOCAL  DEFAULT    1 vprintfmt\n    15: 00000000000101d4     0 NOTYPE  LOCAL  DEFAULT    1 $x\n    16: 0000000000010758     0 NOTYPE  LOCAL  DEFAULT    1 $x\n    17: 0000000000010758   140 FUNC    GLOBAL DEFAULT    1 printf\n    18: 0000000000012060     0 NOTYPE  GLOBAL DEFAULT  ABS __global_pointer$\n    19: 0000000000011860     0 NOTYPE  GLOBAL DEFAULT    2 __SDATA_BEGIN__\n    20: 0000000000011860     4 OBJECT  GLOBAL DEFAULT    3 tail\n    21: 00000000000100e8     0 NOTYPE  GLOBAL DEFAULT    1 _start\n    22: 0000000000011868  1000 OBJECT  GLOBAL DEFAULT    3 buffer\n    23: 0000000000011c50     0 NOTYPE  GLOBAL DEFAULT    3 __BSS_END__\n    24: 0000000000011860     0 NOTYPE  GLOBAL DEFAULT    3 __bss_start\n    25: 0000000000010120    92 FUNC    GLOBAL DEFAULT    1 main\n    26: 000000000001017c    88 FUNC    GLOBAL DEFAULT    1 putc\n    27: 0000000000011860     0 NOTYPE  GLOBAL DEFAULT    2 __DATA_BEGIN__\n    28: 0000000000011860     0 NOTYPE  GLOBAL DEFAULT    2 _edata\n    29: 0000000000011c50     0 NOTYPE  GLOBAL DEFAULT    3 _end\n\nNo version information found in this file.\nAttribute Section: riscv\nFile Attributes\n  Tag_RISCV_arch: \"rv64i2p0_m2p0_a2p0_f2p0_d2p0\"\n</code></pre> <p>\u5176\u4e2d\u5305\u542b\u4e86\u4e24\u79cd\u5c06\u7a0b\u5e8f\u5206\u5757\u7684\u7c92\u5ea6\uff0cSegment\uff08\u6bb5\uff09\u548c Section\uff08\u8282\uff09\uff0c\u6211\u4eec\u4ee5\u6bb5\u4e3a\u7c92\u5ea6\u5c06\u7a0b\u5e8f\u52a0\u8f7d\u8fdb\u5185\u5b58\u4e2d\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u7ed9\u51fa\u7684\u6837\u4f8b\u7a0b\u5e8f\u5305\u542b\u4e86\u4e09\u4e2a\u6bb5\uff0c\u8fd9\u91cc\u6211\u4eec\u53ea\u5173\u6ce8 Type \u4e3a LOAD \u7684\u6bb5\uff0cLOAD \u8868\u793a\u4ed6\u4eec\u9700\u8981\u5728\u5f00\u59cb\u8fd0\u884c\u524d\u88ab\u52a0\u8f7d\u8fdb\u5185\u5b58\u4e2d\uff0c\u8fd9\u662f\u6211\u4eec\u5728\u521d\u59cb\u5316\u8fdb\u7a0b\u7684\u65f6\u5019\u9700\u8981\u6267\u884c\u7684\u5de5\u4f5c\u3002</p> <p>\u800c\u201c\u8282\u201d\u4ee3\u8868\u4e86\u66f4\u7ec6\u5206\u7684\u8bed\u4e49\uff0c\u6bd4\u5982 <code>.text</code> \u4e00\u822c\u5305\u542b\u4e86\u7a0b\u5e8f\u7684\u6307\u4ee4\uff0c<code>.rodata</code> \u662f\u53ea\u8bfb\u7684\u5168\u5c40\u53d8\u91cf\u7b49\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c Google \u6765\u5b66\u4e60\u66f4\u591a\u76f8\u5173\u5185\u5bb9\u3002</p>"},{"location":"lab4/#_13","title":"\u6240\u4ee5\u4ee3\u7801\u600e\u4e48\u5199\uff1f","text":"<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u5c06 <code>uapp.S</code> \u4e2d\u7684 payload \u7ed9\u6362\u6210\u6211\u4eec\u7684 ELF \u6587\u4ef6\u3002</p> <p><pre><code>/* user/uapp.S */\n.section .uapp\n\n.incbin \"uapp\"\n</code></pre> \u8fd9\u65f6\u5019\u4ece <code>_sramdisk</code> \u5f00\u59cb\u7684\u6570\u636e\u5c31\u53d8\u6210\u4e86\u540d\u4e3a <code>uapp</code> \u7684 ELF \u6587\u4ef6\uff0c\u4e5f\u5c31\u662f\u8bf4 <code>_sramdisk</code> \u5904 32-bit \u7684\u6570\u636e\u4e0d\u518d\u662f\u6211\u4eec\u9700\u8981\u6267\u884c\u7b2c\u4e00\u6761\u6307\u4ee4\u4e86\uff0c\u800c\u662f ELF Header \u7684\u5f00\u59cb\u3002</p> <p>\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u4f60\u5bf9 <code>task_init</code> \u4e2d\u7684\u521d\u59cb\u5316\u6b65\u9aa4\u8fdb\u884c\u4fee\u6539\u3002\u6211\u4eec\u7ed9\u51fa\u4e86 ELF \u76f8\u5173\u7684\u7ed3\u6784\u4f53\u5b9a\u4e49\uff08<code>elf.h</code>\uff09\uff0c\u5927\u5bb6\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002\u4f60\u53ef\u80fd\u4f1a\u4f7f\u7528\u5230\u7684\u7ed3\u6784\u4f53\u6216\u8005\u57df\u5982\u4e0b\uff1a</p> <p><pre><code>Elf64_Ehdr   // \u4f60\u53ef\u4ee5\u5c06 _sramdisk \u5f3a\u5236\u8f6c\u5316\u4e3a\u8be5\u7c7b\u578b\u7684\u6307\u9488\uff0c\n                \u7136\u540e\u628a\u90a3\u4e00\u5757\u5185\u5b58\u5f53\u6210\u6b64\u7c7b\u7ed3\u6784\u4f53\u6765\u8bfb\u5176\u4e2d\u7684\u6570\u636e\uff0c\u5176\u4e2d\u5305\u62ec\uff1a\n    e_ident  // Magic Number, \u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u57df\u6765\u68c0\u6d4b\u81ea\u5df1\u662f\u4e0d\u662f\u771f\u7684\u6b63\u5728\u8bfb\u4e00\u4e2a Ehdr,\n                \u503c\u4e00\u5b9a\u662f 7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00\n    e_entry  // \u7a0b\u5e8f\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u88ab\u5b58\u50a8\u7684\u7528\u6237\u6001\u865a\u62df\u5730\u5740\n    e_phnum  // ELF \u6587\u4ef6\u5305\u542b\u7684 Segment \u7684\u6570\u91cf\n    e_phoff  // ELF \u6587\u4ef6\u5305\u542b\u7684 Segment \u6570\u7ec4\u76f8\u5bf9\u4e8e Ehdr \u7684\u504f\u79fb\u91cf\n\nElf64_Phdr   // \u5b58\u50a8\u4e86\u7a0b\u5e8f\u5404\u4e2a Segment \u76f8\u5173\u7684 metadata\n             // \u4f60\u53ef\u4ee5\u5c06 _sramdisk + e_phoff \u5f3a\u5236\u8f6c\u5316\u4e3a\u6b64\u7c7b\u578b\uff0c\u5c31\u4f1a\u6307\u5411\u7b2c\u4e00\u4e2a Phdr,\n             // _sramdisk + e_phoff + 1 * sizeof(Elf64_Phdr), \u5219\u6307\u5411\u7b2c\u4e8c\u4e2a\n    p_filesz // Segment \u5728\u6587\u4ef6\u4e2d\u5360\u7684\u5927\u5c0f\n    p_memsz  // Segment \u5728\u5185\u5b58\u4e2d\u5360\u7684\u5927\u5c0f\n    p_vaddr  // Segment \u8d77\u59cb\u7684\u7528\u6237\u6001\u865a\u62df\u5730\u5740\n    p_offset // Segment \u5728\u6587\u4ef6\u4e2d\u76f8\u5bf9\u4e8e Ehdr \u7684\u504f\u79fb\u91cf\n    p_type   // Segment \u7684\u7c7b\u578b \n    p_flags  // Segment \u7684\u6743\u9650\uff08\u5305\u62ec\u4e86\u8bfb\u3001\u5199\u548c\u6267\u884c\uff09\n</code></pre> \u6211\u4eec\u53ef\u4ee5\u6309\u7167\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5728\u4ece <code>_sramdisk</code> - <code>_eramdisk</code> \u8fd9\u4e2a ELF \u6587\u4ef6\u4e2d\u7684\u5185\u5bb9 \u62f7\u8d1d \u5230\u6211\u4eec\u5f00\u8f9f\u7684\u5185\u5b58\u4e2d\u3002</p> <p>\u5176\u4e2d\u76f8\u5bf9\u6587\u4ef6\u504f\u79fb <code>p_offset</code> \u6307\u51fa\u76f8\u5e94 segment \u7684\u5185\u5bb9\u4ece ELF \u6587\u4ef6\u7684\u7b2c <code>p_offset</code> \u5b57\u8282\u5f00\u59cb, \u5728\u6587\u4ef6\u4e2d\u7684\u5927\u5c0f\u4e3a <code>p_filesz</code>, \u5b83\u9700\u8981\u88ab\u5206\u914d\u5230\u4ee5 <code>p_vaddr</code> \u4e3a\u9996\u5730\u5740\u7684\u865a\u62df\u5185\u5b58\u4f4d\u7f6e, \u5728\u5185\u5b58\u4e2d\u5b83\u5360\u7528\u5927\u5c0f\u4e3a <code>p_memsz</code>. \u4e5f\u5c31\u662f\u8bf4, \u8fd9\u4e2a segment \u4f7f\u7528\u7684\u5185\u5b58\u5c31\u662f <code>[p_vaddr, p_vaddr + p_memsz)</code> \u8fd9\u4e00\u8fde\u7eed\u533a\u95f4, \u7136\u540e\u5c06 segment \u7684\u5185\u5bb9\u4eceELF\u6587\u4ef6\u4e2d\u8bfb\u5165\u5230\u8fd9\u4e00\u5185\u5b58\u533a\u95f4, \u5e76\u5c06 <code>[p_vaddr + p_filesz, p_vaddr + p_memsz)</code> \u5bf9\u5e94\u7684\u7269\u7406\u533a\u95f4\u6e05\u96f6. \uff08\u672c\u6bb5\u5185\u5bb9\u5f15\u7528\u81ea\u5357\u4eac\u5927\u5b66PA\uff09</p> <p>\u4f60\u4e5f\u53ef\u4ee5\u53c2\u8003\u8fd9\u7bc7 blog \u4e2d\u5173\u4e8e \u9759\u6001 \u94fe\u63a5\u7a0b\u5e8f\u7684\u8f7d\u5165\u8fc7\u7a0b\u6765\u8fdb\u884c\u4f60\u7684\u8f7d\u5165\u3002</p> <p>\u8fd9\u91cc\u6709\u4e0d\u5c11\u4f8b\u5b50\u53ef\u4ee5\u4e3e\uff0c\u4e3a\u4e86\u907f\u514d\u540c\u5b66\u4eec\u5728\u5b9e\u9a8c\u4e2d\u82b1\u592a\u591a\u65f6\u95f4\uff0c\u6211\u4eec\u544a\u8bc9\u5927\u5bb6\u53ef\u4ee5\u600e\u4e48\u627e\u5230\u5b9e\u9a8c\u4e2d\u8fd9\u4e9b\u76f8\u5173\u53d8\u91cf\uff1a\uff08\u6ce8\u610f\u4ee5\u4e0b\u7684 <code>_sramdisk</code> \u7c7b\u578b\u4f7f\u7528\u7684\u662f <code>char*</code>\uff0c\u5982\u679c\u4f60\u5728\u4f7f\u7528\u5176\u4ed6\u7c7b\u578b\uff0c\u9700\u8981\u6839\u636e\u4f60\u4f7f\u7528\u7684\u7c7b\u578b\u53bb\u8c03\u6574\u9488\u5bf9\u6307\u9488\u7684\u7b97\u6570\u8fd0\u7b97\u3002\uff09</p> <ul> <li><code>Elf64_Ehdr* ehdr = (Elf64_Ehdr*)_sramdisk</code>\uff0c\u4ece\u5730\u5740 _sramdisk \u5f00\u59cb\uff0c\u4fbf\u662f\u6211\u4eec\u8981\u627e\u7684 Ehdr.</li> <li><code>Elf64_Phdr* phdrs = (Elf64_Phdr*)(_sramdisk + ehdr-&gt;phoff)</code>\uff0c\u662f\u4e00\u4e2a Phdr \u6570\u7ec4\uff0c\u5176\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a <code>Elf64_Phdr</code>.</li> <li><code>phdrs[ehdr-&gt;phnum - 1]</code> \u662f\u6700\u540e\u4e00\u4e2a Phdr.</li> <li><code>phdrs[0].p_type == PT_LOAD</code>\uff0c\u8bf4\u660e\u8fd9\u4e2a Segment \u7684\u7c7b\u578b\u662f LOAD\uff0c\u9700\u8981\u5728\u521d\u59cb\u5316\u65f6\u88ab\u52a0\u8f7d\u8fdb\u5185\u5b58\u3002</li> <li><code>(void*)(_sramdisk + phdrs[1].p_offset)</code> \u5c06\u4f1a\u6307\u5411\u7b2c\u4e8c\u4e2a\u6bb5\u4e2d\u7684\u5185\u5bb9\u7684\u5f00\u5934.</li> </ul> <p>\u5269\u4e0b\u7684\u57df\u7684\u7528\u6cd5\u6211\u4eec\u5e0c\u671b\u540c\u5b66\u4eec\u901a\u8fc7\u9605\u8bfb <code>man elf</code> \u547d\u4ee4\u548c\u4f7f\u7528 Google\uff08\u6ce8\u610f\u4e0d\u662f\u767e\u5ea6\uff09\u6765\u83b7\u53d6\u3002\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u7684\u4ee3\u7801\u6765\u5c06\u7a0b\u5e8f load \u8fdb\u5165\u5185\u5b58\u3002</p> <pre><code>static uint64_t load_program(struct task_struct* task) {\n    Elf64_Ehdr* ehdr = (Elf64_Ehdr*)_sramdisk;\n\n    uint64_t phdr_start = (uint64_t)ehdr + ehdr-&gt;e_phoff;\n    int phdr_cnt = ehdr-&gt;e_phnum;\n\n    Elf64_Phdr* phdr;\n    int load_phdr_cnt = 0;\n    for (int i = 0; i &lt; phdr_cnt; i++) {\n        phdr = (Elf64_Phdr*)(phdr_start + sizeof(Elf64_Phdr) * i);\n        if (phdr-&gt;p_type == PT_LOAD) {\n            // alloc space and copy content\n            // do mapping\n            // code...\n        }\n    }\n\n    // allocate user stack and do mapping\n    // code...\n\n    // following code has been written for you\n    // set user stack\n    ...;\n    // pc for the user program\n    task-&gt;thread.sepc = ehdr-&gt;e_entry;\n    // sstatus bits set\n    task-&gt;thread.sstatus = ...;\n    // user stack for user program\n    task-&gt;thread.sscratch = ...;\n}\n</code></pre>"},{"location":"lab4/#_14","title":"\u601d\u8003\u9898","text":"<ol> <li>\u6211\u4eec\u5728\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u7684\u7528\u6237\u6001\u7ebf\u7a0b\u548c\u5185\u6838\u6001\u7ebf\u7a0b\u7684\u5bf9\u5e94\u5173\u7cfb\u662f\u600e\u6837\u7684\uff1f\uff08\u4e00\u5bf9\u4e00\uff0c\u4e00\u5bf9\u591a\uff0c\u591a\u5bf9\u4e00\u8fd8\u662f\u591a\u5bf9\u591a\uff09</li> <li>\u4e3a\u4ec0\u4e48 Phdr \u4e2d\uff0c<code>p_filesz</code> \u548c <code>p_memsz</code> \u662f\u4e0d\u4e00\u6837\u5927\u7684\uff1f</li> <li>\u4e3a\u4ec0\u4e48\u591a\u4e2a\u8fdb\u7a0b\u7684\u6808\u865a\u62df\u5730\u5740\u53ef\u4ee5\u662f\u76f8\u540c\u7684\uff1f\u7528\u6237\u6709\u6ca1\u6709\u5e38\u89c4\u7684\u65b9\u6cd5\u77e5\u9053\u81ea\u5df1\u6808\u6240\u5728\u7684\u7269\u7406\u5730\u5740\uff1f</li> </ol>"},{"location":"lab4/#_15","title":"\u4f5c\u4e1a\u63d0\u4ea4","text":"<p>\u540c\u5b66\u9700\u8981\u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\u4ee5\u53ca\u6574\u4e2a\u5de5\u7a0b\u4ee3\u7801\u3002\u5728\u63d0\u4ea4\u524d\u8bf7\u4f7f\u7528 <code>make clean</code> \u6e05\u9664\u6240\u6709\u6784\u5efa\u4ea7\u7269\u3002</p>"},{"location":"lab5/","title":"Lab 5: RV64 \u7f3a\u9875\u5f02\u5e38\u5904\u7406","text":"<p>\u975e\u5e38\u5efa\u8bae\u5927\u5bb6\u5148\u901a\u8bfb\u6574\u7bc7\u5b9e\u9a8c\u6307\u5bfc\uff0c\u5b8c\u6210\u601d\u8003\u9898\u540e\u518d\u52a8\u624b\u5199\u4ee3\u7801</p>"},{"location":"lab5/#_1","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<ul> <li>\u901a\u8fc7 vm_area_struct \u6570\u636e\u7ed3\u6784\u5b9e\u73b0\u5bf9 task \u591a\u533a\u57df\u865a\u62df\u5185\u5b58\u7684\u7ba1\u7406\u3002</li> <li>\u5728 Lab4 \u5b9e\u73b0\u7528\u6237\u6001\u7a0b\u5e8f\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u7f3a\u9875\u5f02\u5e38\u5904\u7406 Page Fault Handler\u3002</li> </ul>"},{"location":"lab5/#_2","title":"\u5b9e\u9a8c\u73af\u5883","text":"<ul> <li>Environment in previous labs.</li> </ul>"},{"location":"lab5/#_3","title":"\u80cc\u666f\u77e5\u8bc6","text":"<p>\u4e0b\u9762\u4ecb\u7ecd\u7684\u662f Linux \u4e2d\u5bf9\u4e8e VMA (virtual memory area) \u548c Page Fault Handler \u7684\u4ecb\u7ecd\uff08\u987a\u4fbf\u5e2e\u5927\u5bb6\u590d\u4e60\u4e0b\u671f\u672b\u8003\uff09\u3002\u7531\u4e8e Linux \u5de8\u5927\u7684\u4f53\u91cf\uff0c\u65e0\u8bba\u662f VMA \u8fd8\u662f Page Fault \u7684\u903b\u8f91\u90fd\u8f83\u4e3a\u590d\u6742\uff0c\u8fd9\u91cc\u53ea\u8981\u6c42\u5927\u5bb6\u5b9e\u73b0\u7b80\u5316\u7248\u672c\u7684\uff0c\u6240\u4ee5\u4e0d\u8981\u5728\u9605\u8bfb\u80cc\u666f\u4ecb\u7ecd\u7684\u65f6\u5019\u6709\u592a\u5927\u7684\u538b\u529b\u3002</p>"},{"location":"lab5/#vm_area_struct","title":"vm_area_struct \u4ecb\u7ecd","text":"<p>\u5728 linux \u7cfb\u7edf\u4e2d\uff0c<code>vm_area_struct</code> \u662f\u865a\u62df\u5185\u5b58\u7ba1\u7406\u7684\u57fa\u672c\u5355\u5143\uff0c<code>vm_area_struct</code> \u4fdd\u5b58\u4e86\u6709\u5173\u8fde\u7eed\u865a\u62df\u5185\u5b58\u533a\u57df\uff08\u7b80\u79f0 vma\uff09\u7684\u4fe1\u606f\u3002linux \u5177\u4f53\u67d0\u4e00 task \u7684\u865a\u62df\u5185\u5b58\u533a\u57df\u6620\u5c04\u5173\u7cfb\u53ef\u4ee5\u901a\u8fc7 procfs \u8bfb\u53d6 <code>/proc/pid/maps</code> \u7684\u5185\u5bb9\u6765\u83b7\u53d6:</p> <p>\u6bd4\u5982\uff0c\u5982\u4e0b\u4e00\u4e2a\u5e38\u89c4\u7684 <code>bash</code>  task \uff0c\u5047\u8bbe\u5b83\u7684 task \u53f7\u4e3a <code>7884</code> \uff0c\u5219\u901a\u8fc7\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\uff0c\u5c31\u53ef\u4ee5\u67e5\u770b\u8be5 task \u5177\u4f53\u7684\u865a\u62df\u5730\u5740\u5185\u5b58\u6620\u5c04\u60c5\u51b5(\u90e8\u5206\u4fe1\u606f\u5df2\u7701\u7565)\u3002</p> <pre><code>$ cat /proc/7884/maps\n556f22759000-556f22786000 r--p 00000000 08:05 16515165                   /usr/bin/bash\n556f22786000-556f22837000 r-xp 0002d000 08:05 16515165                   /usr/bin/bash\n556f22837000-556f2286e000 r--p 000de000 08:05 16515165                   /usr/bin/bash\n556f2286e000-556f22872000 r--p 00114000 08:05 16515165                   /usr/bin/bash\n556f22872000-556f2287b000 rw-p 00118000 08:05 16515165                   /usr/bin/bash\n556f22fa5000-556f2312c000 rw-p 00000000 00:00 0                          [heap]\n7fb9edb0f000-7fb9edb12000 r--p 00000000 08:05 16517264                   /usr/lib/x86_64-linux-gnu/libnss_files-2.31.so\n7fb9edb12000-7fb9edb19000 r-xp 00003000 08:05 16517264                   /usr/lib/x86_64-linux-gnu/libnss_files-2.31.so                 \n...\n7ffee5cdc000-7ffee5cfd000 rw-p 00000000 00:00 0                          [stack]\n7ffee5dce000-7ffee5dd1000 r--p 00000000 00:00 0                          [vvar]\n7ffee5dd1000-7ffee5dd2000 r-xp 00000000 00:00 0                          [vdso]\nffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]\n</code></pre> <p>\u4ece\u4e2d\u6211\u4eec\u53ef\u4ee5\u8bfb\u53d6\u5982\u4e0b\u4e00\u4e9b\u6709\u5173\u8be5 task \u5185\u865a\u62df\u5185\u5b58\u6620\u5c04\u7684\u5173\u952e\u4fe1\u606f\uff1a</p> <ul> <li><code>vm_start</code>  :  (\u7b2c1\u5217) \u6307\u7684\u662f\u8be5\u6bb5\u865a\u62df\u5185\u5b58\u533a\u57df\u7684\u5f00\u59cb\u5730\u5740</li> <li><code>vm_end</code>    :  (\u7b2c2\u5217) \u6307\u7684\u662f\u8be5\u6bb5\u865a\u62df\u5185\u5b58\u533a\u57df\u7684\u7ed3\u675f\u5730\u5740</li> <li><code>vm_flags</code>  :  (\u7b2c3\u5217) \u8be5 <code>vm_area</code> \u7684\u4e00\u7ec4\u6743\u9650(rwx)\u6807\u5fd7\uff0c<code>vm_flags</code> \u7684\u5177\u4f53\u53d6\u503c\u5b9a\u4e49\u53ef\u53c2\u8003linux\u6e90\u4ee3\u7801\u7684 linux/mm.h</li> <li><code>vm_pgoff</code>  :  (\u7b2c4\u5217) \u865a\u62df\u5185\u5b58\u6620\u5c04\u533a\u57df\u5728\u6587\u4ef6\u5185\u7684\u504f\u79fb\u91cf</li> <li><code>vm_file</code>   :  (\u7b2c5/6/7\u5217) \u5206\u522b\u8868\u793a\uff1a\u6620\u5c04\u6587\u4ef6\u6240\u5c5e\u8bbe\u5907\u53f7/\u4ee5\u53ca\u6307\u5411\u5173\u8054\u6587\u4ef6\u7ed3\u6784\u7684\u6307\u9488/\u4ee5\u53ca\u6587\u4ef6\u540d</li> </ul> <p>\u6ce8\u610f\u8fd9\u91cc\u8bb0\u5f55\u7684 <code>vm_start</code> \u548c <code>vm_end</code> \u90fd\u662f\u7528\u6237\u6001\u7684\u865a\u62df\u5730\u5740\uff0c\u5e76\u4e14\u5185\u6838\u5e76\u4e0d\u4f1a\u5c06\u9664\u4e86\u7528\u6237\u7a0b\u5e8f\u4f1a\u7528\u5230\u7684\u5185\u5b58\u533a\u57df\u4ee5\u5916\u7684\u90e8\u5206\u6dfb\u52a0\u6210\u4e3a VMA\u3002</p> <p>\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u4e00\u6bb5\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\u53ef\u80fd\u662f\u7531\u78c1\u76d8\u4e2d\u7684\u6587\u4ef6\u6620\u5c04\u7684\u3002\u5982\u679c\u8fd9\u6837\u7684\u5185\u5b58\u7684 VMA \u4ea7\u751f\u4e86\u7f3a\u9875\u5f02\u5e38\uff0c\u8bf4\u660e\u6587\u4ef6\u4e2d\u5bf9\u5e94\u7684\u9875\u4e0d\u5728\u64cd\u4f5c\u7cfb\u7edf\u7684 buffer pool \u4e2d\uff08\u56de\u60f3\u8d77\u6570\u636e\u5e93\u8bfe\u4e0a\u5b66\u4e60\u7684\u78c1\u76d8\u7f13\u5b58\u4e86\u5417\uff09\uff0c\u6216\u8005\u662f\u7531\u4e8e buffer pool \u7684\u8c03\u5ea6\u7b56\u7565\u88ab\u6362\u51fa\u5230\u78c1\u76d8\u4e0a\u4e86\u3002\u8fd9\u65f6\u5019\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u7528\u9a71\u52a8\u8bfb\u53d6\u786c\u76d8\u4e0a\u7684\u5185\u5bb9\uff0c\u653e\u5165 buffer pool\uff0c\u7136\u540e\u4fee\u6539\u5f53\u524d task \u7684\u9875\u8868\u6765\u8ba9\u5176\u80fd\u591f\u7528\u539f\u6765\u7684\u5730\u5740\u8bbf\u95ee\u6587\u4ef6\u5185\u5bb9\u3002\u800c\u8fd9\u4e00\u5207\u5bf9\u7528\u6237\u7a0b\u5e8f\u6765\u8bf4\u662f\u5b8c\u5168\u900f\u660e\u7684\uff0c\u9664\u4e86\u8bbf\u95ee\u5ef6\u8fdf\u3002</p> <p>\u9664\u4e86\u8ddf\u6587\u4ef6\u5efa\u7acb\u8054\u7cfb\u4ee5\u5916\uff0cVMA \u8fd8\u53ef\u80fd\u662f\u4e00\u5757\u533f\u540d (anonymous) \u7684\u533a\u57df\u3002\u4f8b\u5982\u88ab\u6807\u6210 <code>[stack]</code> \u7684\u8fd9\u4e00\u5757\u533a\u57df\uff0c\u5e76\u6ca1\u6709\u5bf9\u5e94\u7684\u6587\u4ef6\u3002</p> <p>\u5176\u5b83\u4fdd\u5b58\u5728 <code>vm_area_struct</code> \u4e2d\u7684\u4fe1\u606f\u8fd8\u6709\uff1a</p> <ul> <li><code>vm_ops</code>: \u8be5 <code>vm_area</code> \u4e2d\u7684\u4e00\u7ec4\u5de5\u4f5c\u51fd\u6570\uff0c\u5176\u4e2d\u662f\u4e00\u7cfb\u5217\u51fd\u6570\u6307\u9488\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u5b9a\u5236</li> <li><code>vm_next/vm_prev</code>: \u540c\u4e00 task \u7684\u6240\u6709\u865a\u62df\u5185\u5b58\u533a\u57df\u7531 \u94fe\u8868\u7ed3\u6784 \u94fe\u63a5\u8d77\u6765\uff0c\u8fd9\u662f\u5206\u522b\u6307\u5411\u524d\u540e\u4e24\u4e2a <code>vm_area_struct</code> \u7ed3\u6784\u4f53\u7684\u6307\u9488</li> </ul> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u539f\u672c\u7684 Linux \u4f7f\u7528\u94fe\u8868\u5bf9\u4e00\u4e2a task \u5185\u7684 VMA \u8fdb\u884c\u7ba1\u7406\u3002\u4f46\u662f\u7531\u4e8e\u5982\u4eca\u4e00\u4e2a\u7a0b\u5e8f\u53ef\u80fd\u4f53\u91cf\u975e\u5e38\u5de8\u5927\uff0c\u6240\u4ee5\u73b0\u5728\u7684 Linux \u5df2\u7ecf\u7528\u865a\u62df\u5730\u5740\u4e3a\u7d22\u5f15\u6765\u5efa\u7acb\u7ea2\u9ed1\u6811\u4e86\uff08\u5982\u679c\u4f60\u559c\u6b22\u53ef\u4ee5\u5728\u8fd9\u6b21\u5b9e\u9a8c\u4e2d\u4e5f\u624b\u6413\u4e00\u68f5\u7ea2\u9ed1\u6811\uff09\u3002</p>"},{"location":"lab5/#page-fault","title":"\u7f3a\u9875\u5f02\u5e38 Page Fault","text":"<p>\u5728\u4e00\u4e2a\u542f\u7528\u4e86\u865a\u62df\u5185\u5b58\u7684\u7cfb\u7edf\u4e0a\uff0c\u5f53\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u8bbf\u95ee\u4e00\u4e2a\u5185\u5b58\u5730\u5740\u65f6\uff0c\u5982\u679c\u8be5\u5730\u5740\u5f53\u524d\u672a\u88ab\u5185\u5b58\u7ba1\u7406\u5355\u5143\uff08MMU\uff09\u6620\u5c04\uff0c\u5219\u7531\u8ba1\u7b97\u673a\u786c\u4ef6\u5f15\u53d1\u7f3a\u9875\u5f02\u5e38\u3002\u8bbf\u95ee\u672a\u88ab\u6620\u5c04\u7684\u9875\u6216\u8bbf\u95ee\u6743\u9650\u4e0d\u8db3\uff0c\u90fd\u4f1a\u5bfc\u81f4\u8be5\u7c7b\u5f02\u5e38\u7684\u53d1\u751f\u3002\u5904\u7406\u7f3a\u9875\u5f02\u5e38\u901a\u5e38\u662f\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7684\u4e00\u90e8\u5206\uff0c\u5f53\u5904\u7406\u7f3a\u9875\u5f02\u5e38\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c06\u5c1d\u8bd5\u4f7f\u6240\u9700\u9875\u9762\u5728\u7269\u7406\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\u53d8\u5f97\u53ef\u8bbf\u95ee\uff08\u5efa\u7acb\u65b0\u7684\u6620\u5c04\u5173\u7cfb\u5230\u865a\u62df\u5185\u5b58\uff09\u3002\u800c\u5982\u679c\u5728\u975e\u6cd5\u8bbf\u95ee\u5185\u5b58\u7684\u60c5\u51b5\u4e0b\uff0c\u5373\u53d1\u73b0\u89e6\u53d1 <code>Page Fault</code> \u7684\u865a\u62df\u5185\u5b58\u5730\u5740\uff08Bad Address\uff09\u4e0d\u5728\u5f53\u524d task  <code>vm_area_struct</code> \u94fe\u8868\u4e2d\u6240\u5b9a\u4e49\u7684\u5141\u8bb8\u8bbf\u95ee\u7684\u865a\u62df\u5185\u5b58\u5730\u5740\u8303\u56f4\u5185\uff0c\u6216\u8bbf\u95ee\u4f4d\u7f6e\u7684\u6743\u9650\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\uff0c\u7f3a\u9875\u5f02\u5e38\u5904\u7406\u5c06\u7ec8\u6b62\u8be5\u7a0b\u5e8f\u7684\u7ee7\u7eed\u8fd0\u884c\u3002 </p>"},{"location":"lab5/#page-fault-handler","title":"Page Fault Handler","text":"<p>\u603b\u7684\u8bf4\u6765\uff0c\u5904\u7406\u7f3a\u9875\u5f02\u5e38\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ol> <li>\u6355\u83b7\u5f02\u5e38</li> <li>\u5bfb\u627e\u5f53\u524d task \u4e2d\u5bfc\u81f4\u4ea7\u751f\u4e86\u5f02\u5e38\u7684\u5730\u5740\u5bf9\u5e94\u7684 VMA</li> <li>\u5224\u65ad\u4ea7\u751f\u5f02\u5e38\u7684\u539f\u56e0</li> <li>\u5982\u679c\u662f\u533f\u540d\u533a\u57df\uff0c\u90a3\u4e48\u5f00\u8f9f\u4e00\u9875\u5185\u5b58\uff0c\u7136\u540e\u628a\u8fd9\u4e00\u9875\u6620\u5c04\u5230\u4ea7\u751f\u5f02\u5e38\u7684 task \u7684\u9875\u8868\u4e2d\u3002\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u4e48\u9996\u5148\u5c06\u786c\u76d8\u4e2d\u7684\u5185\u5bb9\u8bfb\u5165 buffer pool\uff0c\u5c06 buffer pool \u4e2d\u8fd9\u6bb5\u5185\u5b58\u6620\u5c04\u7ed9 task\u3002</li> <li>\u8fd4\u56de\u5230\u4ea7\u751f\u4e86\u8be5\u7f3a\u9875\u5f02\u5e38\u7684\u90a3\u6761\u6307\u4ee4\uff0c\u5e76\u7ee7\u7eed\u6267\u884c\u7a0b\u5e8f</li> </ol> <p>\u5f53 Linux \u53d1\u751f\u7f3a\u9875\u5f02\u5e38\u5e76\u627e\u5230\u4e86\u5f53\u524d task \u4e2d\u5bf9\u5e94\u7684 <code>vm_area_struct</code> \u540e\uff0c\u53ef\u4ee5\u6839\u636e\u4ee5\u4e0b\u4fe1\u606f\u6765\u5224\u65ad\u53d1\u751f\u5f02\u5e38\u7684\u539f\u56e0</p> <ol> <li>CSRs</li> <li><code>vm_area_struct</code> \u4e2d\u8bb0\u5f55\u7684\u4fe1\u606f</li> <li>\u53d1\u751f\u5f02\u5e38\u7684\u865a\u62df\u5730\u5740\u5bf9\u5e94\u7684 PTE (page table entry) \u4e2d\u8bb0\u5f55\u7684\u4fe1\u606f</li> </ol> <p>\u5e76\u5bf9\u5f53\u524d\u7684\u5f02\u5e38\u8fdb\u884c\u5904\u7406\u3002</p> <p>Page Fault \u662f\u4e00\u7c7b\u6bd4\u8f83\u590d\u6742\u7684\u5f02\u5e38\uff0c\u53ef\u4ee5\u770b\u5230 Linux \u5185\u6838\u4e2d\u7684\u5904\u7406\u65f6\u7684\u903b\u8f91\u662f\u5145\u6ee1\u4e86 <code>if</code> <code>else</code> \u4e43\u81f3 <code>goto</code> \u7684\uff1a </p>"},{"location":"lab5/#_4","title":"\u5b9e\u9a8c\u6b65\u9aa4","text":""},{"location":"lab5/#lab5","title":"\u5728\u5f00\u59cb Lab5 \u4e4b\u524d","text":"<p>\u6211\u4eec\u7684\u5b9e\u9a8c\u5df2\u7ecf\u8fdb\u884c\u4e86\u5c06\u8fd1\u4e00\u5b66\u671f\uff0c\u5728\u6301\u7eed\u5f00\u53d1\u7684\u4ee3\u7801\u4e0a\u6dfb\u52a0\u5185\u5bb9\u53ef\u80fd\u4f1a\u8ba9\u4f60\u7684\u601d\u7ef4\u6bd4\u8f83\u6df7\u4e71\u3002\u5982\u679c\u4f60\u8ba4\u4e3a\u4f60\u7684\u4ee3\u7801\u53ef\u80fd\u9700\u8981\u6574\u7406\uff0c\u8fd9\u91cc\u6709\u4e00\u4efd\u7b80\u8981\u7684 Checklist\uff0c\u53ef\u4ee5\u8ba9\u4f60\u7684\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u5e76\u8ba9\u4f60\u5728\u5b9e\u73b0 Lab5 \u7684\u65f6\u5019\u601d\u8def\u66f4\u52a0\u6e05\u6670\u3002\u5982\u679c\u4f60\u8981\u6309\u7167\u4ee5\u4e0b\u7684\u5efa\u8bae\u8fdb\u884c\u4fee\u6539\uff0c\u8bf7\u52a1\u5fc5\u786e\u8ba4\u505a\u597d\u5907\u4efd\uff0c\u5e76\u5728\u6539\u4e00\u5c0f\u90e8\u5206\u540e\u5c31\u7f16\u8bd1\u8fd0\u884c\u4e00\u6b21\uff0c\u4e0d\u8981\u8ba9\u4f60\u8f9b\u82e6\u5199\u7684\u4ee3\u7801 crash\u3002\u5f53\u7136\uff0c\u8fd9\u4e00\u4e2a\u6b65\u9aa4\u5e76\u4e0d\u662f\u5f3a\u5236\u7684\uff0c\u5b8c\u5168\u590d\u7528\u4e4b\u524d\u7684\u4ee3\u7801\u4ecd\u7136\u53ef\u4ee5\u5b8c\u6210 Lab5\u3002</p> <ol> <li> <p>\u7531\u4e8e\u4e00\u4e9b\u5386\u53f2\u9057\u7559\u95ee\u9898\uff0c\u5728\u4e4b\u524d\u7684\u5b9e\u9a8c\u6307\u5bfc\u4e2d\u7684 <code>task_struct</code> \u4e2d\u5305\u542b\u4e86\u4e00\u4e2a <code>thread_info</code> \u57df\uff0c\u4f46\u5176\u5b9e\u8fd9\u4e2a\u57df\u5e76\u4e0d\u5fc5\u8981\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u5185\u6838\u6001\u53ef\u4ee5\u7528 <code>sp</code> \u548c <code>sscratch</code> \u6765\u5b58\u50a8\u5185\u6838\u6001\u548c\u7528\u6237\u6001\u7684\u4e24\u4e2a\u6307\u9488\uff0c\u4e0d\u9700\u8981\u501f\u52a9 <code>thread_info</code> \u4e2d\u7684\u4e24\u4e2a\u57df\u3002\u56e0\u4e3a <code>switch_to</code> \u4e2d\u76f4\u63a5\u4f7f\u7528\u4e86\u6c47\u7f16\u6765\u8bbf\u95ee <code>task_struct</code> \u4e2d\u7684\u5185\u5bb9\uff0c\u9700\u8981\u4fee\u6539 <code>__switch_to</code> \u4e2d\u7528\u4e8e\u8bbf\u95ee <code>thread</code> \u8fd9\u4e2a\u6210\u5458\u7684\u4e00\u4e9b offset\u3002\u5f53\u7136\u5982\u679c\u4f60\u5728\u522b\u7684\u5730\u65b9\u4e5f\u76f4\u63a5\u4f7f\u7528\u4e86\u6c47\u7f16\u6765\u8bbf\u5b58 <code>task_struct</code> \u4e2d\u7684\u503c\uff0c\u4f60\u4e5f\u9700\u8981\u4e00\u5e76\u4fee\u6539\u3002\u8fd9\u91cc\u9700\u8981\u4f60\u5584\u7528 <code>grep</code> \u547d\u4ee4\u3002</p> </li> <li> <p>\u8c03\u6574 <code>pt_regs</code> \u548c <code>trap_handler</code>\uff0c\u6765\u66f4\u597d\u5730\u6355\u83b7\u5f02\u5e38\u5e76\u8f85\u52a9\u8c03\u8bd5\u3002\u6bd4\u5982\u6211\u4f7f\u7528\u8fd9\u6837\u7684 <code>pt_regs</code> \u548c <code>trap_handler</code>:     <pre><code>struct pt_regs {\n    uint64_t zero;\n    ...\n    uint64_t t6;\n    uint64_t sepc;\n    uint64_t sstatus;\n    uint64_t stval;\n    uint64_t sscratch;\n    uint64_t scause;\n};\n\nvoid trap_handler(unsigned long scause, struct pt_regs *regs) {\n\n    if (scause == 0x8000000000000005) {\n        ...\n   }  else if (scause == 8) {\n        uint64_t sys_call_num = regs-&gt;a7;\n        if (sys_call_num == 64) {\n            ...\n        } else if (sys_call_num == 172) {\n            ...\n        } else if (sys_call_num == 220) {\n            ...\n        } else {\n            printk(\"[S] Unhandled syscall: %lx\", sys_call_num);\n            while (1);\n        }\n    } else if (scause == ...){\n        ...\n    } else {\n        printk(\"[S] Unhandled trap, \");\n        printk(\"scause: %lx, \", scause);\n        printk(\"stval: %lx, \", regs-&gt;stval);\n        printk(\"sepc: %lx\\n\", regs-&gt;sepc);\n        while (1);\n    }\n}\n</code></pre>     \u8fd9\u6837\u53d1\u751f\u4e86\u6ca1\u6709\u5904\u7406\u7684\u5f02\u5e38\u3001\u4e2d\u65ad\u6216\u8005\u662f\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u5019\uff0c\u5185\u6838\u4f1a\u76f4\u63a5\u8fdb\u5165\u6b7b\u5faa\u73af\u3002\u4f60\u53ef\u4ee5\u8c03\u6574 <code>printk</code> \u7684\u5185\u5bb9\u6765\u8ba9\u5185\u6838\u7ed9\u4f60\u8f93\u51fa\u4f60\u9700\u8981\u7684\u4fe1\u606f\u3002</p> </li> </ol>"},{"location":"lab5/#_5","title":"\u51c6\u5907\u5de5\u4f5c","text":"<ul> <li>\u6b64\u6b21\u5b9e\u9a8c\u57fa\u4e8e lab4 \u540c\u5b66\u6240\u5b9e\u73b0\u7684\u4ee3\u7801\u8fdb\u884c\u3002</li> <li>\u4ece repo \u540c\u6b65\u4ee5\u4e0b\u6587\u4ef6\u5939: user \u5e76\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5c06\u8fd9\u4e9b\u6587\u4ef6\u6b63\u786e\u653e\u7f6e\u3002 <pre><code>.\n\u2514\u2500\u2500 user\n    \u251c\u2500\u2500 Makefile\n    \u251c\u2500\u2500 getpid.c\n    \u251c\u2500\u2500 link.lds\n    \u251c\u2500\u2500 printf.c\n    \u251c\u2500\u2500 start.S\n    \u251c\u2500\u2500 stddef.h\n    \u251c\u2500\u2500 stdio.h\n    \u251c\u2500\u2500 syscall.h\n    \u2514\u2500\u2500 uapp.S\n</code></pre></li> <li>\u5728 <code>user/getpid.c</code> \u4e2d\u6211\u4eec\u8bbe\u7f6e\u4e86\u56db\u4e2a <code>main</code> \u51fd\u6570\u3002\u5728\u5b9e\u73b0\u4e86 <code>Page Fault</code> \u4e4b\u540e\u7b2c\u4e00\u4e2a <code>main</code> \u51fd\u6570\u53ef\u4ee5\u6210\u529f\u8fd0\u884c\uff0c\u5728 lab6 \u5b9e\u73b0\u4e86 <code>fork</code> \u4e4b\u540e\u5176\u4f59\u4e09\u4e2a <code>main</code> \u51fd\u6570\u53ef\u4ee5\u6210\u529f\u8fd0\u884c\u3002\u8fd9\u4e9b\u7528\u6237\u7a0b\u5e8f\u7684\u884c\u4e3a\u9700\u8981\u540c\u5b66\u4eec\u81ea\u884c\u7406\u89e3\uff08\u4f30\u8ba1\u671f\u672b\u8003\u4e5f\u4e00\u5b9a\u4f1a\u8003\u5230\uff09\u3002</li> </ul>"},{"location":"lab5/#vma","title":"\u5b9e\u73b0 VMA","text":"<p>\u4fee\u6539 <code>proc.h</code>\uff0c\u589e\u52a0\u5982\u4e0b\u76f8\u5173\u7ed3\u6784\uff1a(\u56e0\u4e3a\u94fe\u8868\u592a\u9ebb\u70e6\u4e86\uff0c\u8fd9\u6b21\u8ba9\u5927\u5bb6\u7528\u6570\u7ec4\u5b58\u50a8 VMA)</p> <pre><code>#define VM_X_MASK         0x0000000000000008\n#define VM_W_MASK         0x0000000000000004\n#define VM_R_MASK         0x0000000000000002\n#define VM_ANONYM         0x0000000000000001\n\nstruct vm_area_struct {\n    uint64_t vm_start;          /* VMA \u5bf9\u5e94\u7684\u7528\u6237\u6001\u865a\u62df\u5730\u5740\u7684\u5f00\u59cb   */\n    uint64_t vm_end;            /* VMA \u5bf9\u5e94\u7684\u7528\u6237\u6001\u865a\u62df\u5730\u5740\u7684\u7ed3\u675f   */\n    uint64_t vm_flags;          /* VMA \u5bf9\u5e94\u7684 flags */\n\n    /* uint64_t file_offset_on_disk */  /* \u539f\u672c\u9700\u8981\u8bb0\u5f55\u5bf9\u5e94\u7684\u6587\u4ef6\u5728\u78c1\u76d8\u4e0a\u7684\u4f4d\u7f6e\uff0c\n                                \u4f46\u662f\u6211\u4eec\u53ea\u6709\u4e00\u4e2a\u6587\u4ef6 uapp\uff0c\u6240\u4ee5\u6682\u65f6\u4e0d\u9700\u8981\u8bb0\u5f55 */\n\n    uint64_t vm_content_offset_in_file;                /* \u5982\u679c\u5bf9\u5e94\u4e86\u4e00\u4e2a\u6587\u4ef6\uff0c\n                        \u90a3\u4e48\u8fd9\u5757 VMA \u8d77\u59cb\u5730\u5740\u5bf9\u5e94\u7684\u6587\u4ef6\u5185\u5bb9\u76f8\u5bf9\u6587\u4ef6\u8d77\u59cb\u4f4d\u7f6e\u7684\u504f\u79fb\u91cf\uff0c\n                                          \u4e5f\u5c31\u662f ELF \u4e2d\u5404\u6bb5\u7684 p_offset \u503c */\n\n    uint64_t vm_content_size_in_file;                /* \u5bf9\u5e94\u7684\u6587\u4ef6\u5185\u5bb9\u7684\u957f\u5ea6\u3002\n                                                      \u601d\u8003\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981\u8fd9\u4e2a\u57df?\n                                                      \u548c (vm_end-vm_start)\n                                                      \u4e00\u6bd4\uff0c\u4e0d\u662f\u5197\u4f59\u4e86\u5417? */\n};\n\nstruct task_struct {\n    uint64_t state;    \n    uint64_t counter; \n    uint64_t priority; \n    uint64_t pid;    \n\n    struct thread_struct thread;\n    pagetable_t pgd;\n\n    uint64_t vma_cnt;                       /* \u4e0b\u9762\u8fd9\u4e2a\u6570\u7ec4\u91cc\u7684\u5143\u7d20\u7684\u6570\u91cf */\n    struct vm_area_struct vmas[0];          /* \u4e3a\u4ec0\u4e48\u53ef\u4ee5\u5f00\u5927\u5c0f\u4e3a 0 \u7684\u6570\u7ec4?\n                                \u8fd9\u4e2a\u5b9a\u4e49\u53ef\u4ee5\u548c\u524d\u9762\u7684 vma_cnt \u6362\u4e2a\u4f4d\u7f6e\u5417? */\n};\n</code></pre> <p>\u6bcf\u4e00\u4e2a vm_area_struct \u90fd\u5bf9\u5e94\u4e8e task \u5730\u5740\u7a7a\u95f4\u7684\u552f\u4e00\u8fde\u7eed\u533a\u95f4\u3002\u6ce8\u610f\u6211\u4eec\u8fd9\u91cc\u7684 <code>vm_flag</code> \u548c <code>p_flags</code> \u5e76\u6ca1\u6709\u6309 bit \u8fdb\u884c\u5bf9\u5e94\uff0c\u8bf7\u540c\u5b66\u4eec\u4ed4\u7ec6\u5bf9\u7167 bit \u7684\u4f4d\u7f6e\uff0c\u4ee5\u514d\u51fa\u73b0\u95ee\u9898\u3002</p> <p>\u4e3a\u4e86\u652f\u6301 <code>Demand Paging</code>\uff08\u89c1 4.3\uff09\uff0c\u6211\u4eec\u9700\u8981\u652f\u6301\u5bf9 vm_area_struct \u7684\u6dfb\u52a0\u548c\u67e5\u627e\u3002</p> <pre><code>void do_mmap(struct task_struct *task, uint64_t addr, uint64_t length, uint64_t flags,\n    uint64_t vm_content_offset_in_file, uint64_t vm_content_size_in_file);\n\nstruct vm_area_struct *find_vma(struct task_struct *task, uint64_t addr);\n</code></pre> <ul> <li><code>find_vma</code> \u67e5\u627e\u5305\u542b\u67d0\u4e2a addr \u7684 vma\uff0c\u8be5\u51fd\u6570\u4e3b\u8981\u5728 Page Fault \u5904\u7406\u65f6\u8d77\u4f5c\u7528\u3002</li> <li><code>do_mmap</code> \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 vma</li> </ul>"},{"location":"lab5/#page-fault-handler_1","title":"Page Fault Handler","text":""},{"location":"lab5/#risc-v-page-faults","title":"RISC-V Page Faults","text":"<p>RISC-V \u5f02\u5e38\u5904\u7406\uff1a\u5f53\u7cfb\u7edf\u8fd0\u884c\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u53ef\u5373\u65f6\u5730\u901a\u8fc7\u89e3\u6790 <code>scause</code> \u5bc4\u5b58\u5668\u7684\u503c\uff0c\u8bc6\u522b\u5982\u4e0b\u4e09\u79cd\u4e0d\u540c\u7684 Page Fault\u3002</p> <p>SCAUSE \u5bc4\u5b58\u5668\u6307\u793a\u53d1\u751f\u5f02\u5e38\u7684\u79cd\u7c7b\uff1a</p> Interrupt Exception Code Description 0 12 Instruction Page Fault 0 13 Load Page Fault 0 15 Store/AMO Page Fault"},{"location":"lab5/#page-fault_1","title":"\u5e38\u89c4\u5904\u7406 Page Fault \u7684\u65b9\u5f0f\u4ecb\u7ecd","text":"<p>\u5904\u7406\u7f3a\u9875\u5f02\u5e38\u65f6\u6240\u9700\u7684\u4fe1\u606f\u5982\u4e0b\uff1a</p> <ul> <li>\u89e6\u53d1 Page Fault \u65f6\u8bbf\u95ee\u7684\u865a\u62df\u5185\u5b58\u5730\u5740 VA\u3002\u5f53\u89e6\u53d1 page fault \u65f6\uff0c<code>stval</code> \u5bc4\u5b58\u5668\u88ab\u88ab\u786c\u4ef6\u81ea\u52a8\u8bbe\u7f6e\u4e3a\u8be5\u51fa\u9519\u7684 VA \u5730\u5740</li> <li>\u5bfc\u81f4 Page Fault \u7684\u7c7b\u578b\uff1a<ul> <li>Exception Code = 12: page fault caused by an instruction fetch </li> <li>Exception Code = 13: page fault caused by a read  </li> <li>Exception Code = 15: page fault caused by a write </li> </ul> </li> <li>\u53d1\u751f Page Fault \u65f6\u7684\u6307\u4ee4\u6267\u884c\u4f4d\u7f6e\uff0c\u4fdd\u5b58\u5728 <code>sepc</code> \u4e2d</li> <li>\u5f53\u524d task \u5408\u6cd5\u7684 VMA \u6620\u5c04\u5173\u7cfb\uff0c\u4fdd\u5b58\u5728 <code>vm_area_struct</code> \u94fe\u8868\u4e2d</li> </ul> <p>\u5904\u7406\u7f3a\u9875\u5f02\u5e38\u7684\u65b9\u5f0f\uff1a</p> <ul> <li>\u5f53\u7f3a\u9875\u5f02\u5e38\u53d1\u751f\u65f6\uff0c\u68c0\u67e5 VMA</li> <li>\u5982\u679c\u5f53\u524d\u8bbf\u95ee\u7684\u865a\u62df\u5730\u5740\u5728 VMA \u4e2d\u6ca1\u6709\u8bb0\u5f55\uff0c\u5373\u662f\u4e0d\u5408\u6cd5\u7684\u5730\u5740\uff0c\u5219\u8fd0\u884c\u51fa\u9519\uff08\u672c\u5b9e\u9a8c\u4e0d\u6d89\u53ca\uff09</li> <li>\u5982\u679c\u5f53\u524d\u8bbf\u95ee\u7684\u865a\u62df\u5730\u5740\u5728 VMA \u4e2d\u5b58\u5728\u8bb0\u5f55\uff0c\u5219\u8fdb\u884c\u76f8\u5e94\u7684\u6620\u5c04\u5373\u53ef\uff1a</li> <li>\u5982\u679c\u8bbf\u95ee\u7684\u9875\u662f\u5b58\u5728\u6570\u636e\u7684\uff0c\u5982\u8bbf\u95ee\u7684\u662f\u4ee3\u7801\uff0c\u5219\u9700\u8981\u4ece\u6587\u4ef6\u7cfb\u7edf\u4e2d\u8bfb\u53d6\u5185\u5bb9\uff0c\u968f\u540e\u8fdb\u884c\u6620\u5c04</li> <li>\u5426\u5219\u662f\u533f\u540d\u6620\u5c04\uff0c\u5373\u627e\u4e00\u4e2a\u53ef\u7528\u7684\u5e27\u6620\u5c04\u4e0a\u53bb\u5373\u53ef</li> </ul>"},{"location":"lab5/#demand-paging","title":"Demand Paging","text":"<p>\u5728\u524d\u9762\u7684\u5b9e\u9a8c\u4e2d\u63d0\u5230\uff0cLinux \u5728 Page Fault Handler \u4e2d\u9700\u8981\u8003\u8651\u4e09\u7c7b\u6570\u636e\u7684\u503c\u3002\u6211\u4eec\u7684\u5b9e\u9a8c\u7ecf\u8fc7\u7b80\u5316\uff0c\u53ea\u9700\u8981\u6839\u636e <code>vm_area_struct</code> \u4e2d\u7684 <code>vm_flags</code> \u6765\u786e\u5b9a\u5f53\u524d\u53d1\u751f\u4e86\u4ec0\u4e48\u6837\u7684\u9519\u8bef\uff0c\u5e76\u4e14\u9700\u8981\u5982\u4f55\u5904\u7406\u3002\u5728\u521d\u59cb\u5316\u4e00\u4e2a task \u65f6\u6211\u4eec\u65e2\u4e0d\u5206\u914d\u5185\u5b58\uff0c\u53c8\u4e0d\u66f4\u6539\u9875\u8868\u9879\u6765\u5efa\u7acb\u6620\u5c04\u3002\u56de\u9000\u5230\u7528\u6237\u6001\u8fdb\u884c\u7a0b\u5e8f\u6267\u884c\u7684\u65f6\u5019\u5c31\u4f1a\u56e0\u4e3a\u6ca1\u6709\u6620\u5c04\u800c\u53d1\u751f Page Fault\uff0c\u8fdb\u5165\u6211\u4eec\u7684 Page Fault Handler \u540e\uff0c\u6211\u4eec\u518d\u5206\u914d\u7a7a\u95f4\uff08\u6309\u9700\u8981\u62f7\u8d1d\u5185\u5bb9\uff09\u8fdb\u884c\u6620\u5c04\u3002</p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u539f\u672c\u8981\u4e3a\u7528\u6237\u6001\u865a\u62df\u5730\u5740\u6620\u5c04\u4e00\u4e2a\u9875\uff0c\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a</p> <ol> <li>\u4f7f\u7528 <code>alloc_page</code> \u5206\u914d\u4e00\u4e2a\u9875\u7684\u7a7a\u95f4</li> <li>\u5bf9\u8fd9\u4e2a\u9875\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u586b\u5145</li> <li>\u5c06\u8fd9\u4e2a\u9875\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\uff0c\u4f9b\u7528\u6237\u7a0b\u5e8f\u8bbf\u95ee\u3002\u5e76\u8bbe\u7f6e\u597d\u5bf9\u5e94\u7684 U, W, X, R \u6743\u9650\uff0c\u6700\u540e\u5c06 V \u7f6e\u4e3a 1\uff0c\u4ee3\u8868\u5176\u6709\u6548\u3002</li> </ol> <p>\u800c\u4e3a\u4e86\u51cf\u5c11 task \u521d\u59cb\u5316\u65f6\u7684\u5f00\u9500\uff0c\u6211\u4eec\u5bf9\u4e00\u4e2a Segment \u6216\u8005 \u7528\u6237\u6001\u7684\u6808 \u53ea\u9700\u5206\u522b\u5efa\u7acb\u4e00\u4e2a VMA\u3002</p> <p>\u4fee\u6539 <code>task_init</code> \u51fd\u6570\u4ee3\u7801\uff0c\u66f4\u6539\u4e3a <code>Demand Paging</code></p> <ul> <li>\u53d6\u6d88\u4e4b\u524d\u5b9e\u9a8c\u4e2d\u5bf9 <code>U-MODE</code> \u4ee3\u7801\u4ee5\u53ca\u6808\u8fdb\u884c\u7684\u6620\u5c04</li> <li>\u8c03\u7528 <code>do_mmap</code> \u51fd\u6570\uff0c\u5efa\u7acb\u7528\u6237 task \u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4fe1\u606f\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u4ec5\u5305\u62ec\u4e24\u4e2a\u533a\u57df:<ul> <li>\u4ee3\u7801\u548c\u6570\u636e\u533a\u57df\uff1a\u8be5\u533a\u57df\u4ece ELF \u7ed9\u51fa\u7684 Segment \u8d77\u59cb\u7528\u6237\u6001\u865a\u62df\u5730\u5740 <code>phdr-&gt;p_vaddr</code> \u5f00\u59cb\uff0c\u5bf9\u5e94\u6587\u4ef6\u4e2d\u504f\u79fb\u91cf\u4e3a <code>phdr-&gt;p_offset</code> \u5f00\u59cb\u7684\u90e8\u5206\u3002\u6743\u9650\u53c2\u8003 <code>phdr-&gt;p_flags</code> \u8fdb\u884c\u8bbe\u7f6e\u3002</li> <li>\u7528\u6237\u6808\uff1a\u8303\u56f4\u4e3a <code>[USER_END - PGSIZE, USER_END)</code> \uff0c\u6743\u9650\u4e3a <code>VM_READ | VM_WRITE</code>, \u5e76\u4e14\u662f\u533f\u540d\u7684\u533a\u57df\u3002 </li> </ul> </li> </ul> <p>\u5728\u5b8c\u6210\u4e0a\u8ff0\u4fee\u6539\u4e4b\u540e\uff0c\u5982\u679c\u8fd0\u884c\u4ee3\u7801\u6211\u4eec\u5c31\u53ef\u4ee5\u622a\u83b7\u4e00\u4e2a page fault\uff0c\u5982\u4e0b\u6240\u793a\uff08\u5176\u4e2d\u4e09\u4e2a <code>address0</code> \u662f\u540c\u4e00\u4e2a\u5730\u5740\uff0c\u8868\u793a\u4e86\u7528\u6237\u6001\u9700\u8981\u8fd0\u884c\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u7684\u4f4d\u7f6e\uff09\uff1a</p> <pre><code>[S] Switch to: pid: 1, priority: 1, counter: 4\n[S] Unhandled trap, scause: 000000000000000c, stval: address0, sepc: address0\n\n************************** uapp elf_header **************************\n\n\u276f readelf -a uapp\nELF Header:\n  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 \n  Class:                             ELF64\n  Data:                              2's complement, little endian\n  Version:                           1 (current)\n  OS/ABI:                            UNIX - System V\n  ABI Version:                       0\n  Type:                              EXEC (Executable file)\n  Machine:                           RISC-V\n  Version:                           0x1\n  Entry point address:               address0\n\n......\n************************** uapp elf_header **************************\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u53d1\u751f\u4e86\u7f3a\u9875\u5f02\u5e38\u7684 <code>sepc</code> \u662f <code>0x100e8</code>\uff0c\u8bf4\u660e\u6211\u4eec\u5728 <code>sret</code> \u6765\u6267\u884c\u7528\u6237\u6001\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u6761\u6307\u4ee4\u5c31\u56e0\u4e3a <code>V-bit</code> \u4e3a 0 \u8868\u5f81\u5176\u6620\u5c04\u7684\u5730\u5740\u65e0\u6548\u800c\u53d1\u751f\u4e86\u5f02\u5e38\uff0c\u5e76\u4e14\u53d1\u751f\u7684\u5f02\u5e38\u662f Insturction Page Fault\u3002</p> <p>\u5b9e\u73b0 Page Fault \u7684\u68c0\u6d4b\u4e0e\u5904\u7406</p> <ul> <li>\u4fee\u6539 <code>trap.c</code>, \u6dfb\u52a0\u6355\u83b7 Page Fault \u7684\u903b\u8f91</li> <li>\u5f53\u6355\u83b7\u4e86 <code>Page Fault</code> \u4e4b\u540e\uff0c\u9700\u8981\u5b9e\u73b0\u7f3a\u9875\u5f02\u5e38\u7684\u5904\u7406\u51fd\u6570 <code>do_page_fault</code>\u3002 \u6211\u4eec\u6700\u5148\u6355\u83b7\u5230\u4e86\u4e00\u6761\u6307\u4ee4\u9875\u9519\u8bef\u5f02\u5e38\uff0c\u8fd9\u4e2a\u5f02\u5e38\u9700\u8981\u4f60\u65b0\u5206\u914d\u4e00\u4e2a\u9875\uff0c\u5e76\u62f7\u8d1d uapp \u8fd9\u4e2a ELF \u6587\u4ef6\u4e2d\u7684\u5bf9\u5e94\u5185\u5bb9\u5230\u65b0\u5206\u914d\u7684\u9875\u5185\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u9875\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\u4e2d\u3002</li> <li>\u6211\u4eec\u4e4b\u540e\u8fd8\u4f1a\u6355\u83b7\u5230 <code>0xd, 0xf</code> \u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5904\u7406\u7684\u903b\u8f91\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a\u6d41\u7a0b\uff1a    </li> </ul> <pre><code>void do_page_fault(struct pt_regs *regs) {\n    /*\n     1. \u901a\u8fc7 stval \u83b7\u5f97\u8bbf\u95ee\u51fa\u9519\u7684\u865a\u62df\u5185\u5b58\u5730\u5740\uff08Bad Address\uff09\n     2. \u901a\u8fc7 find_vma() \u67e5\u627e Bad Address \u662f\u5426\u5728\u67d0\u4e2a vma \u4e2d\n     3. \u5206\u914d\u4e00\u4e2a\u9875\uff0c\u5c06\u8fd9\u4e2a\u9875\u6620\u5c04\u5230\u5bf9\u5e94\u7684\u7528\u6237\u5730\u5740\u7a7a\u95f4\n     4. \u901a\u8fc7 (vma-&gt;vm_flags &amp; VM_ANONYM) \u83b7\u5f97\u5f53\u524d\u7684 VMA \u662f\u5426\u662f\u533f\u540d\u7a7a\u95f4\n     5. \u6839\u636e VMA \u533f\u540d\u4e0e\u5426\u51b3\u5b9a\u5c06\u65b0\u7684\u9875\u6e05\u96f6\u6216\u662f\u62f7\u8d1d uapp \u4e2d\u7684\u5185\u5bb9\n    */\n}\n</code></pre>"},{"location":"lab5/#_6","title":"\u7f16\u8bd1\u53ca\u6d4b\u8bd5","text":"<p>\u5728\u6d4b\u8bd5\u65f6\uff0c\u7531\u4e8e\u5927\u5bb6\u7535\u8111\u6027\u80fd\u90fd\u4e0d\u4e00\u6837\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u65f6\u949f\u4e2d\u65ad\u9891\u7387\u6bd4\u7528\u6237\u6253\u5370\u9891\u7387\u9ad8\u5f88\u591a\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u51cf\u5c11\u7528\u6237\u7a0b\u5e8f\u91cc\u7684 while \u5faa\u73af\u7684\u6b21\u6570\u6765\u52a0\u5feb\u6253\u5370\u3002\u8fd9\u91cc\u7684\u5b9e\u4f8b\u4ec5\u4f9b\u53c2\u8003\uff0c\u53ea\u8981 OS \u548c\u7528\u6237\u6001\u7a0b\u5e8f\u8fd0\u884c\u7b26\u5408\u4f60\u7684\u9884\u671f\uff0c\u90a3\u5c31\u662f\u6b63\u786e\u7684\u3002</p> <ul> <li>\u8f93\u51fa\u793a\u4f8b</li> </ul> <pre><code>OpenSBI v1.1\n   ____                    _____ ____ _____\n  / __ \\                  / ____|  _ \\_   _|\n | |  | |_ __   ___ _ __ | (___ | |_) || |\n | |  | | '_ \\ / _ \\ '_ \\ \\___ \\|  _ &lt; | |\n | |__| | |_) |  __/ | | |____) | |_) || |_\n  \\____/| .__/ \\___|_| |_|_____/|____/_____|\n        | |\n        |_|\n\nPlatform Name             : riscv-virtio,qemu\nPlatform Features         : medeleg\nPlatform HART Count       : 1\nPlatform IPI Device       : aclint-mswi\nPlatform Timer Device     : aclint-mtimer @ 10000000Hz\nPlatform Console Device   : uart8250\nPlatform HSM Device       : ---\nPlatform Reboot Device    : sifive_test\nPlatform Shutdown Device  : sifive_test\nFirmware Base             : 0x80000000\nFirmware Size             : 288 KB\nRuntime SBI Version       : 1.0\n\nDomain0 Name              : root\nDomain0 Boot HART         : 0\nDomain0 HARTs             : 0*\nDomain0 Region00          : 0x0000000002000000-0x000000000200ffff (I)\nDomain0 Region01          : 0x0000000080000000-0x000000008007ffff ()\nDomain0 Region02          : 0x0000000000000000-0xffffffffffffffff (R,W,X)\nDomain0 Next Address      : 0x0000000080200000\nDomain0 Next Arg1         : 0x0000000087e00000\nDomain0 Next Mode         : S-mode\nDomain0 SysReset          : yes\n\nBoot HART ID              : 0\nBoot HART Domain          : root\nBoot HART Priv Version    : v1.12\nBoot HART Base ISA        : rv64imafdch\nBoot HART ISA Extensions  : time,sstc\nBoot HART PMP Count       : 16\nBoot HART PMP Granularity : 4\nBoot HART PMP Address Bits: 54\nBoot HART MHPM Count      : 16\nBoot HART MIDELEG         : 0x0000000000001666\nBoot HART MEDELEG         : 0x0000000000f0b509\n[S] buddy_init done!\n[S] proc_init done!\n2023 Hello RISC-V\nTime remaining: 1, switching to PID: 1\n[U] pid: 1, sp is 0000003fffffffe0, this is print No. 1\n[U] pid: 1, sp is 0000003fffffffe0, this is print No. 2\n[U] pid: 1, sp is 0000003fffffffe0, this is print No. 3\n[U] pid: 1, sp is 0000003fffffffe0, this is print No. 4\n[U] pid: 1, sp is 0000003fffffffe0, this is print No. 5\nTime remaining: 5, switching to PID: 4\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 1\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 2\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 3\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 4\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 5\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 6\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 7\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 8\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 9\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 10\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 11\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 12\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 13\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 14\n[U] pid: 4, sp is 0000003fffffffe0, this is print No. 15\nTime remaining: 10, switching to PID: 2\n[U] pid: 2, sp is 0000003fffffffe0, this is print No. 1\n[U] pid: 2, sp is 0000003fffffffe0, this is print No. 2\n[U] pid: 2, sp is 0000003fffffffe0, this is print No. 3\n[U] pid: 2, sp is 0000003fffffffe0, this is print No. 4\n[U] pid: 2, sp is 0000003fffffffe0, this is print No. 5\n[U] pid: 2, sp is 0000003fffffffe0, this is print No. 6\n[U] pid: 2, sp is 0000003fffffffe0, this is print No. 7\n[U] pid: 2, sp is 0000003fffffffe0, this is print No. 8\n[U] pid: 2, sp is 0000003fffffffe0, this is print No. 9\n......\n</code></pre>"},{"location":"lab5/#_7","title":"\u601d\u8003\u9898","text":"<p>\u6839\u636e\u5b9e\u9a8c\u6307\u5bfc\u548c\u4ee3\u7801\u6846\u67b6\u6765\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\uff1a</p> <ol> <li><code>uint64_t vm_content_size_in_file;</code> \u5bf9\u5e94\u7684\u6587\u4ef6\u5185\u5bb9\u7684\u957f\u5ea6\u3002\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981\u8fd9\u4e2a\u57df?</li> <li><code>struct vm_area_struct vmas[0];</code> \u4e3a\u4ec0\u4e48\u53ef\u4ee5\u5f00\u5927\u5c0f\u4e3a 0 \u7684\u6570\u7ec4? \u8fd9\u4e2a\u5b9a\u4e49\u53ef\u4ee5\u548c\u524d\u9762\u7684 vma_cnt \u6362\u4e2a\u4f4d\u7f6e\u5417?</li> </ol>"},{"location":"lab5/#_8","title":"\u4f5c\u4e1a\u63d0\u4ea4","text":"<p>\u540c\u5b66\u9700\u8981\u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\u4ee5\u53ca\u6574\u4e2a\u5de5\u7a0b\u4ee3\u7801\u3002\u5728\u63d0\u4ea4\u524d\u8bf7\u4f7f\u7528 <code>make clean</code> \u6e05\u9664\u6240\u6709\u6784\u5efa\u4ea7\u7269\u3002\u8bf7\u5728\u5904\u7406 Page Fault \u524d\uff0c\u8f93\u51fa\u4e00\u6bb5\u4fe1\u606f\u8868\u660e\u53d1\u751f\u4e86 Page Fault\uff0c\u5e76\u4e14\u8f93\u51fa <code>sepc, scause, stval</code>\u3002\u5e76\u4e14\u5bf9\u4e8e\u6211\u4eec\u7ed9\u51fa\u7684 <code>main</code> \u51fd\u6570\uff0c\u8bf7\u622a\u56fe\u5230\u6bcf\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u88ab\u8c03\u5ea6\u5230\u4e24\u6b21\u4e3a\u6b62\u3002\u5e76\u6807\u660e\u5728 <code>main</code> \u4f5c\u4e3a <code>uapp</code> \u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u5171\u4f1a\u53d1\u751f\u591a\u5c11\u6b21 Page Fault\u3002</p>"},{"location":"lab6/","title":"Lab 6: \u5b9e\u73b0 fork \u673a\u5236","text":"<p>\u5f3a\u70c8\u5efa\u8bae\u5927\u5bb6\u5148\u901a\u8bfb\u6574\u7bc7\u5b9e\u9a8c\u6307\u5bfc\uff0c\u5b8c\u6210\u601d\u8003\u9898\u540e\u518d\u52a8\u624b\u5199\u4ee3\u7801\u3002</p>"},{"location":"lab6/#_1","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<ul> <li>\u4e3a task \u52a0\u5165 fork \u673a\u5236\uff0c\u80fd\u591f\u652f\u6301\u901a\u8fc7 fork \u521b\u5efa\u65b0\u7684\u7528\u6237\u6001 task \u3002</li> </ul>"},{"location":"lab6/#_2","title":"\u5b9e\u9a8c\u73af\u5883","text":"<ul> <li>Environment in previous labs.</li> </ul>"},{"location":"lab6/#_3","title":"\u80cc\u666f\u77e5\u8bc6","text":""},{"location":"lab6/#fork","title":"<code>fork</code> \u7cfb\u7edf\u8c03\u7528","text":"<p><code>fork</code> \u662f Linux \u4e2d\u7684\u91cd\u8981\u7cfb\u7edf\u8c03\u7528\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5c06\u8fdb\u884c\u4e86\u8be5\u7cfb\u7edf\u8c03\u7528\u7684 task \u5b8c\u6574\u5730\u590d\u5236\u4e00\u4efd\uff0c\u5e76\u52a0\u5165 Ready Queue\u3002\u8fd9\u6837\u5728\u4e0b\u4e00\u6b21\u8c03\u5ea6\u53d1\u751f\u65f6\uff0c\u8c03\u5ea6\u5668\u5c31\u80fd\u591f\u53d1\u73b0\u591a\u4e86\u4e00\u4e2a task\uff0c\u4ece\u8fd9\u65f6\u5019\u5f00\u59cb\uff0c\u65b0\u7684 task \u5c31\u53ef\u80fd\u88ab\u6b63\u5f0f\u4ece Ready \u8c03\u5ea6\u5230 Running\uff0c\u800c\u5f00\u59cb\u6267\u884c\u4e86\u3002\u9700\u7559\u610f\uff0cfork \u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a</p> <ul> <li>\u5b50 task \u548c\u7236 task \u5728\u4e0d\u540c\u7684\u5185\u5b58\u7a7a\u95f4\u4e0a\u8fd0\u884c\u3002</li> <li>\u5173\u4e8e fork \u7684\u8fd4\u56de\u503c\uff1a</li> <li><code>fork</code> \u6210\u529f\u65f6\uff0c\u7236 task  \u8fd4\u56de\u503c\u4e3a\u5b50 task \u7684 pid\uff0c\u5b50 task \u8fd4\u56de\u503c\u4e3a 0\u3002</li> <li><code>fork</code> \u5931\u8d25\u65f6\uff0c\u7236 task  \u8fd4\u56de\u503c\u4e3a -1\u3002</li> <li>\u521b\u5efa\u7684\u5b50 task \u9700\u8981\u6df1\u62f7\u8d1d <code>task_struct</code>\uff0c\u5e76\u4e14\u8c03\u6574\u81ea\u5df1\u7684\u9875\u8868\u3001\u6808 \u548c CSR \u7b49\u4fe1\u606f\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u590d\u5236\u4e00\u4efd\u5728\u7528\u6237\u6001\u4f1a\u7528\u5230\u7684\u5185\u5b58\uff08\u7528\u6237\u6001\u7684\u6808\u3001\u7a0b\u5e8f\u7684\u4ee3\u7801\u548c\u6570\u636e\u7b49\uff09\uff0c\u5e76\u4e14\u5c06\u81ea\u5df1\u4f2a\u88c5\u6210\u662f\u4e00\u4e2a\u56e0\u4e3a\u8c03\u5ea6\u800c\u52a0\u5165\u4e86 Ready Queue \u7684\u666e\u901a\u7a0b\u5e8f\u6765\u7b49\u5f85\u8c03\u5ea6\u3002\u5728\u8c03\u5ea6\u53d1\u751f\u65f6\uff0c\u8fd9\u4e2a\u65b0 task \u5c31\u50cf\u662f\u539f\u672c\u5c31\u5728\u7b49\u5f85\u8c03\u5ea6\u4e00\u6837\uff0c\u88ab\u8c03\u5ea6\u5668\u9009\u62e9\u5e76\u8c03\u5ea6\u3002</li> </ul> <ul> <li>Linux \u4e2d\u4f7f\u7528\u4e86 <code>copy-on-write</code> \u673a\u5236\uff0c<code>fork</code> \u521b\u5efa\u7684\u5b50 task \u9996\u5148\u4e0e\u7236 task \u5171\u4eab\u7269\u7406\u5185\u5b58\u7a7a\u95f4\uff0c\u76f4\u5230\u7236\u5b50 task \u6709\u4fee\u6539\u5185\u5b58\u7684\u64cd\u4f5c\u53d1\u751f\u65f6\u518d\u4e3a\u5b50 task \u5206\u914d\u7269\u7406\u5185\u5b58\uff08\u56e0\u4e3a\u903b\u8f91\u8f83\u4e3a\u590d\u6742\uff0c\u4e0d\u8981\u6c42\u6240\u6709\u540c\u5b66\u90fd\u5b9e\u73b0\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u8fd9\u4e2a\u673a\u5236\u5f88\u6709\u8da3\uff0c\u53ef\u4ee5\u5728\u5b9e\u9a8c\u4e2d\u5b8c\u6210 COW \u673a\u5236\uff09\u3002</li> </ul>"},{"location":"lab6/#fork-linux","title":"<code>fork</code> \u5728 Linux \u4e2d\u7684\u5b9e\u9645\u5e94\u7528","text":"<p>Linux \u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u7cfb\u7edf\u8c03\u7528\u662f <code>exec</code>\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5c06\u8fdb\u884c\u4e86\u8be5\u7cfb\u7edf\u8c03\u7528\u7684 task \u6362\u6210\u53e6\u4e00\u4e2a task \u3002\u8fd9\u4e24\u4e2a\u7cfb\u7edf\u8c03\u7528\u4e00\u8d77\uff0c\u652f\u6491\u8d77\u4e86 Linux \u5904\u7406\u591a\u4efb\u52a1\u7684\u57fa\u7840\u3002\u5f53\u6211\u4eec\u5728 shell \u91cc\u952e\u5165\u4e00\u4e2a\u7a0b\u5e8f\u7684\u76ee\u5f55\u65f6\uff0cshell\uff08\u6bd4\u5982 zsh \u6216 bash\uff09\u4f1a\u5148\u8fdb\u884c\u4e00\u6b21 fork\uff0c\u8fd9\u65f6\u5019\u76f8\u5f53\u4e8e\u6709\u4e24\u4e2a shell \u6b63\u5728\u8fd0\u884c\u3002\u7136\u540e\u5176\u4e2d\u7684\u4e00\u4e2a shell \u6839\u636e <code>fork</code> \u7684\u8fd4\u56de\u503c\uff08\u662f\u5426\u4e3a 0\uff09\uff0c\u53d1\u73b0\u81ea\u5df1\u548c\u539f\u672c\u7684 shell \u4e0d\u540c\uff0c\u518d\u8c03\u7528 <code>exec</code> \u6765\u628a\u81ea\u5df1\u7ed9\u6362\u6210\u53e6\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8fd9\u6837 shell \u5916\u7684\u7a0b\u5e8f\u5c31\u5f97\u4ee5\u6267\u884c\u4e86\u3002</p> <p>\u5982\u679c\u4f60\u5bf9 fork \u7684\u66f4\u591a\u7ec6\u8282\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u5728 Linux \u547d\u4ee4\u884c\u4e2d\u6267\u884c\u4ee5\u4e0b\u6307\u4ee4\uff1a <code>man 2 fork</code>\u3002 GNU/Linux \u63d0\u4f9b\u4e86\u5185\u5bb9\u4e30\u5bcc\u7684\u79bb\u7ebf\u624b\u518c\uff0c\u5b83\u88ab\u5206\u4e3a\u82e5\u5e72\u7ae0\u8282\uff0c\u6bcf\u4e2a\u7ae0\u8282\u8bb0\u5f55\u4e86\u4e0d\u540c\u7684\u5185\u5bb9\u3002\u5176\u4e2d\uff0cman 2\uff0c\u4e5f\u5c31\u662f\u624b\u518c\u7684\u7b2c\u4e8c\u7ae0\uff0c\u8bb0\u5f55\u7684\u662f\u4e0e Linux \u7cfb\u7edf\u8c03\u7528\u76f8\u5173\u7684\u5e2e\u52a9\u6587\u6863\u3002</p>"},{"location":"lab6/#_4","title":"\u5b9e\u9a8c\u6b65\u9aa4","text":""},{"location":"lab6/#_5","title":"\u51c6\u5907\u5de5\u4f5c","text":"<ul> <li>\u6b64\u6b21\u5b9e\u9a8c\u57fa\u4e8e lab5 \u540c\u5b66\u6240\u5b9e\u73b0\u7684\u4ee3\u7801\u8fdb\u884c\u3002</li> <li>\u8bf7\u6ce8\u610f\uff0c\u5728 lab5 \u4e2d\uff0c\u6211\u4eec\u5f15\u5165\u5230 <code>user/getpid.c</code> \u4e2d\u7684\u4ee3\u7801\u88ab\u6ce8\u91ca\u6389\u4e86\u4e00\u90e8\u5206\u3002\u8fd9\u90e8\u5206\u88ab\u6ce8\u91ca\u6389\u7684\u4ee3\u7801\u7531\u4e09\u4e2a\u4e0d\u540c\u7684 main \u51fd\u6570\u6784\u6210\u3002\u5728\u4f60\u5b9e\u73b0\u4e86 fork \u76f8\u5173\u673a\u5236\u4e4b\u540e\uff0c\u4f60\u5e94\u8be5\u786e\u4fdd\u8fd9\u4e09\u4e2a main \u51fd\u6570\u90fd\u53ef\u4ee5\u88ab\u7b26\u5408\u9884\u671f\u5730\u8fd0\u884c\u3002</li> </ul>"},{"location":"lab6/#fork_1","title":"\u5b9e\u73b0 fork()","text":""},{"location":"lab6/#sys_clone","title":"sys_clone","text":"<p>Fork \u5728\u65e9\u671f\u7684 Linux \u4e2d\u5c31\u88ab\u6307\u5b9a\u4e86\u540d\u5b57\uff0c\u53eb\u505a <code>clone</code>, <pre><code>#define SYS_CLONE 220\n</code></pre> \u6211\u4eec\u5728\u5b9e\u9a8c\u539f\u7406\u4e2d\u8bf4\u5230\uff0cfork \u7684\u5173\u952e\u5728\u4e8e\u72b6\u6001\u548c\u5185\u5b58\u7684\u590d\u5236\u3002\u6211\u4eec\u4e0d\u4ec5\u9700\u8981\u5b8c\u6574\u5730\u6df1\u62f7\u8d1d\u4e00\u4efd\u9875\u8868\u4ee5\u53ca VMA \u4e2d\u8bb0\u5f55\u7684\u7528\u6237\u6001\u7684\u5185\u5b58\uff0c\u8fd8\u9700\u8981\u590d\u5236\u5185\u6838\u6001\u7684\u5bc4\u5b58\u5668\u72b6\u6001\u548c\u5185\u6838\u6001\u7684\u5185\u5b58\u3002\u5e76\u4e14\u5728\u6700\u540e\uff0c\u9700\u8981\u5c06 task \u201c\u4f2a\u88c5\u201d\u6210\u662f\u56e0\u4e3a\u8c03\u5ea6\u800c\u8fdb\u5165\u4e86 Ready Queue\u3002</p> <p>\u56de\u5fc6\u4e00\u4e0b\u6211\u4eec\u662f\u600e\u6837\u4f7f\u7528 <code>task_struct</code> \u7684\uff0c\u6211\u4eec\u5e76\u4e0d\u662f\u5206\u914d\u4e86\u4e00\u5757\u521a\u597d\u5927\u5c0f\u7684\u7a7a\u95f4\uff0c\u800c\u662f\u5206\u914d\u4e86\u4e00\u6574\u4e2a\u9875\uff0c\u5e76\u5c06\u9875\u7684\u9ad8\u5904\u4f5c\u4e3a\u4e86 task \u7684\u5185\u6838\u6001\u6808\u3002</p> <pre><code>                    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u25c4\u2500\u2500\u2500 High Address\n                    \u2502             \u2502\n                    \u2502    stack    \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n              sp \u2500\u2500\u25ba\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n                    \u2502      \u2502      \u2502\n                    \u2502      \u25bc      \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n    4KB Page        \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2502 task_struct \u2502\n                    \u2502             \u2502\n                    \u2502             \u2502\n                    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u25c4\u2500\u2500\u2500 Low Address\n</code></pre> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5185\u6838\u6001\u7684\u6240\u6709\u6570\u636e\uff0c\u5305\u62ec\u4e86\u6808\u3001\u9677\u5165\u5185\u6838\u6001\u65f6\u7684\u5bc4\u5b58\u5668\uff0c\u8fd8\u6709\u4e0a\u4e00\u6b21\u53d1\u751f\u8c03\u5ea6\uff0c\u8c03\u7528 <code>switch_to</code> \u65f6\u7684 <code>thread_struct</code> \u4fe1\u606f\uff0c\u90fd\u88ab\u5b58\u5728\u4e86\u8fd9\u77ed\u77ed\u7684 4K \u5185\u5b58\u4e2d\u3002\u8fd9\u7ed9\u6211\u4eec\u7684\u5b9e\u73b0\u5e26\u6765\u4e86\u5f88\u5927\u7684\u65b9\u4fbf\uff0c\u8fd9 4K \u7a7a\u95f4\u91cc\u7684\u6570\u636e\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u5185\u6838\u6001\u6570\u636e\u4e86\uff01</p> <p>\u9664\u4e86\u5185\u6838\u6001\u4e4b\u5916\uff0c\u4f60\u8fd8\u9700\u8981\u6df1\u62f7\u8d1d\u4e00\u4efd\u9875\u8868\uff0c\u5e76\u904d\u5386\u9875\u8868\u4e2d\u6620\u5c04\u5230 parent task \u7528\u6237\u5730\u5740\u7a7a\u95f4\u7684\u9875\u8868\u9879\uff08\u4e3a\u4e86\u51cf\u5c0f\u5f00\u9500\uff0c\u4f60\u9700\u8981\u6839\u636e parent task \u7684 vmas \u6765 walk page table\uff09\uff0c\u8fd9\u4e9b\u5e94\u8be5\u7531 parent task \u4e13\u6709\u7684\u9875\uff0c\u5982\u679c\u5df2\u7ecf\u5206\u914d\u5e76\u6620\u5c04\u5230 parent task \u7684\u5730\u5740\u7a7a\u95f4\u4e2d\u4e86\uff0c\u5c31\u9700\u8981\u4f60\u53e6\u5916\u5206\u914d\u7a7a\u95f4\uff0c\u5e76\u4ece\u539f\u6765\u7684\u5185\u5b58\u4e2d\u62f7\u8d1d\u6570\u636e\u5230\u65b0\u5f00\u8f9f\u7684\u7a7a\u95f4\uff0c\u7136\u540e\u5c06\u65b0\u5f00\u8f9f\u7684\u9875\u6620\u5c04\u5230 child task \u7684\u5730\u5740\u7a7a\u95f4\u4e2d\u3002\u60f3\u60f3\u4e3a\u4ec0\u4e48\u53ea\u8981\u62f7\u8d1d\u90a3\u4e9b\u5df2\u7ecf\u5206\u914d\u5e76\u6620\u5c04\u7684\u9875\uff1b\u90a3\u4e9b\u672c\u6765\u5e94\u8be5\u88ab\u5206\u914d\u5e76\u6620\u5c04\uff0c\u4f46\u662f\u6682\u65f6\u8fd8\u6ca1\u6709\u56e0\u4e3a Page Fault \u800c\u88ab\u5206\u914d\u5e76\u6620\u5c04\u7684\u9875\u600e\u4e48\u529e?</p>"},{"location":"lab6/#__ret_from_fork","title":"__ret_from_fork","text":"<p>\u8ba9 fork \u51fa\u6765\u7684 task \u88ab\u6b63\u5e38\u8c03\u5ea6\u662f\u672c\u5b9e\u9a8c\u6700\u91cd\u8981\u7684\u90e8\u5206\u3002\u6211\u4eec\u5728 Lab2 \u4e2d\u6709\u4e00\u9053\u601d\u8003\u9898</p> <ol> <li>\u5f53\u7ebf\u7a0b\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6, \u5176 <code>ra</code> \u6240\u4ee3\u8868\u7684\u8fd4\u56de\u70b9\u662f <code>__dummy</code>\u3002\u90a3\u4e48\u5728\u4e4b\u540e\u7684\u7ebf\u7a0b\u8c03\u7528\u4e2d <code>context_switch</code> \u4e2d, <code>ra</code> \u4fdd\u5b58/\u6062\u590d\u7684\u51fd\u6570\u8fd4\u56de\u70b9\u662f\u4ec0\u4e48\u5462? \u8bf7\u540c\u5b66\u7528 gdb \u5c1d\u8bd5\u8ffd\u8e2a\u4e00\u6b21\u5b8c\u6574\u7684\u7ebf\u7a0b\u5207\u6362\u6d41\u7a0b, \u5e76\u5173\u6ce8\u6bcf\u4e00\u6b21 <code>ra</code> \u7684\u53d8\u6362 (\u9700\u8981\u622a\u56fe)\u3002</li> </ol> <p>\u7ecf\u8fc7\u4e86\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u601d\u8003\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u8bc6\u5230\uff0c\u5f53\u4e00\u4e2a\u7a0b\u5e8f\u7b2c\u4e00\u6b21\u88ab\u8c03\u5ea6\u65f6\uff0c\u5176\u5b9e\u662f\u53ef\u4ee5\u6307\u660e\u8fd4\u56de\u5230\u54ea\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6307\u4ee4\u7684\u3002\u4f8b\u5982\u6211\u4eec\u5f53\u65f6\u6267\u884c\u7684 <code>__dummy</code>, \u5c31\u66ff\u4ee3\u4e86\u6b63\u5e38\u4ece <code>switch_to</code> \u8fd4\u56de\u7684\u6267\u884c\u6d41\u3002\u8fd9\u6b21\u6211\u4eec\u540c\u6837\u4f7f\u7528\u8fd9\u4e2a\u6280\u5de7\uff0c\u901a\u8fc7\u4fee\u6539 <code>task_struct-&gt;thread.ra</code>\uff0c\u8ba9\u7a0b\u5e8f <code>ret</code> \u65f6\uff0c\u76f4\u63a5\u8df3\u8f6c\u5230\u6211\u4eec\u8bbe\u7f6e\u7684 symbol <code>__ret_from_fork</code>\u3002 </p> <p>\u6211\u4eec\u5728 <code>_traps</code> \u4e2d\u7684 <code>jal x1, trap_handler</code> \u540e\u9762\u63d2\u5165\u4e00\u4e2a\u7b26\u53f7\uff1a</p> <pre><code>    .global _traps\n_traps:\n    ...\n   jal x1, trap_handler\n    .global __ret_from_fork\n__ret_from_fork:\n    ... ;\u5229\u7528 sp \u4ece\u6808\u4e2d\u6062\u590d\u51fa\u5bc4\u5b58\u5668\u7684\u503c \n    sret\n</code></pre> <p>\u7ee7\u7eed\u56de\u5fc6\uff0c\u6211\u4eec\u7684 <code>__switch_to</code> \u903b\u8f91\u7684\u540e\u534a\u6bb5\uff0c\u5c31\u662f\u4ece <code>task_struct-&gt;thread</code> \u4e2d\u6062\u590d callee-saved registers \u7684\u503c\uff0c\u5176\u4e2d\u6b63\u5305\u62ec\u4e86\u6211\u4eec\u6062\u590d\u5bc4\u5b58\u5668\u503c\u6240\u9700\u8981\u7684 sp\u3002</p> <p>\u81ea\u6b64\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e24\u4e2a\u5bc4\u5b58\u5668\uff0c\u5b8c\u6210\u4e00\u4e2a\u7c7b\u4f3c\u4e8e ROP (return oriented programming) \u7684\u64cd\u4f5c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u901a\u8fc7\u63a7\u5236 <code>ra</code> \u5bc4\u5b58\u5668\uff0c\u6765\u63a7\u5236\u7a0b\u5e8f\u7684\u6267\u884c\u6d41\uff0c\u8ba9\u5b83\u8df3\u8f6c\u5230 context switch \u7684\u540e\u534a\u6bb5\uff1b\u901a\u8fc7\u63a7\u5236 <code>sp</code> \u5bc4\u5b58\u5668\uff0c\u4ece\u5185\u6838\u6001\u7684\u6808\u4e0a\u6062\u590d\u51fa\u6211\u4eec\u5728 <code>sys_clone</code> \u65f6\u62f7\u8d1d\u5230\u65b0\u7684 task \u7684\u6808\u4e0a\u7684\uff0c\u539f\u672c\u5728 context switch \u65f6\u88ab\u538b\u5165\u7236 task \u7684\u5bc4\u5b58\u5668\u503c\uff0c\u7136\u540e\u901a\u8fc7 sret \u76f4\u63a5\u8df3\u56de\u7528\u6237\u6001\u6267\u884c\u7528\u6237\u6001\u7a0b\u5e8f\u3002</p> <p>\u4e8e\u662f\uff0c\u7236 task \u7684\u8fd4\u56de\u8def\u5f84\u662f\u8fd9\u6837\u7684\uff1a<code>sys_clone-&gt;trap_handler-&gt;_traps-&gt;user program</code>\uff0c\u800c\u6211\u4eec\u65b0 <code>fork</code> \u51fa\u6765\u7684 task\uff0c\u5219\u8981\u4ee5\u8fd9\u6837\u7684\u8def\u5f84\u8fd4\u56de: <code>__switch_to-&gt;__ret_from_fork(in _traps)-&gt;user program</code>\u3002</p>"},{"location":"lab6/#code-skeleton","title":"Code Skeleton","text":"<p>\u67d0\u77e5\u540d\u4f53\u7cfb\u7ed3\u6784\u8bfe\u7a0b\u8001\u5e08\u8bf4\u8fc7\uff0cskeleton \u662f\u7ed9\u5927\u5bb6\u53c2\u8003\u7528\u7684\uff0c\u4e0d\u662f\u7ed9\u5927\u5bb6\u76f4\u63a5\u6284\u7684\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u7ed9\u5927\u5bb6\u7684\u4ee3\u7801\u6846\u67b6\u7406\u8bba\u4e0a\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\uff0c\u56e0\u4e3a\u5728\u5199\u4f5c\u5b9e\u9a8c\u6587\u6863\u524d\u67d0\u52a9\u6559\u521a\u521a\u81ea\u5df1\u5b8c\u6574\u5b9e\u73b0\u4e86\u4e00\u6b21\u3002\u4f46\u662f\u6211\u4eec\u7684\u5f53\u524d\u7684\u6846\u67b6\u662f\u201c\u6700\u5c0f\u7684\u201d\u2014\u2014\u867d\u7136\u4e00\u5b9a\u80fd\u8dd1\uff0c\u4f46\u662f\u540c\u5b66\u4eec\u7167\u7740\u8fd9\u4e2a\u6765\u5199\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u4e0d\u65b9\u4fbf\u3002\u540c\u5b66\u53ef\u4ee5\u81ea\u884c\u4fee\u6539\u6846\u67b6\uff0c\u6765\u66f4\u597d\u5730\u8d34\u5408\u81ea\u5df1\u7684\u5b9e\u73b0\u3002</p> <p>\u6211\u4eec\u8981\u5728\u5b58\u50a8\u6240\u6709 task \u7684\u6570\u7ec4 <code>task</code> \u4e2d\u5bfb\u627e\u4e00\u4e2a\u7a7a\u95f2\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u7528\u6700\u7b80\u5355\u7684\u7ba1\u7406\u65b9\u5f0f\uff0c\u5c06\u539f\u672c\u7684 <code>task</code> \u6570\u7ec4\u7684\u5927\u5c0f\u5f00\u8f9f\u6210 16\uff0cIDLE task \u548c \u521d\u59cb\u5316\u65f6\u65b0\u5efa\u7684 task \u5404\u5360\u7528\u4e00\u4e2a\uff0c\u5269\u4f59 14 \u4e2a\u5168\u90e8\u8d4b\u503c\u6210 NULL\u3002 \u5982\u679c <code>task[pid] == NULL</code>, \u8bf4\u660e\u8fd9\u4e2a pid \u8fd8\u6ca1\u6709\u88ab\u5360\u7528\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u65b0 task \u7684 pid\uff0c\u5e76\u5c06 <code>task[pid]</code> \u8d4b\u503c\u4e3a\u65b0\u7684 <code>struct task_struct*</code>\u3002\u7531\u4e8e\u6211\u4eec\u7684\u5b9e\u9a8c\u4e2d\u4e0d\u6d89\u53ca task \u7684\u9500\u6bc1\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u903b\u8f91\u53ef\u4ee5\u53ea\u7ba1\u586b\u5145\uff0c\u4e0d\u7ba1\u64e6\u9664\u3002</p> <p>\u5728\u5b9e\u73b0\u4e2d\uff0c\u4f60\u9700\u8981\u59cb\u7ec8\u601d\u8003\u7684\u95ee\u9898\u662f\uff0c\u600e\u4e48\u624d\u80fd\u591f\u8ba9\u65b0\u521b\u5efa\u7684 task \u83b7\u5f97\u8c03\u5ea6\u540e\uff0c\u6b63\u786e\u5730\u8df3\u8f6c\u5230 <code>__ref_from_fork</code>, \u5e76\u4e14\u5229\u7528 <code>sp</code> \u6b63\u786e\u5730\u4ece\u5185\u5b58\u4e2d\u53d6\u503c\u3002\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c<code>sys_clone</code> \u53ea\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570 <code>pt_regs *</code>\uff0c\u4e0b\u9762\u662f\u4ee3\u7801\u6846\u67b6\uff1a</p> <pre><code>uint64_t sys_clone(struct pt_regs *regs) {\n    /*\n     1. \u53c2\u8003 task_init \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 task\uff0c\u5c06\u7684 parent task \u7684\u6574\u4e2a\u9875\u590d\u5236\u5230\u65b0\u521b\u5efa\u7684 \n        task_struct \u9875\u4e0a(\u8fd9\u4e00\u6b65\u590d\u5236\u4e86\u54ea\u4e9b\u4e1c\u897f?\uff09\u3002\u5c06 thread.ra \u8bbe\u7f6e\u4e3a \n        __ret_from_fork\uff0c\u5e76\u6b63\u786e\u8bbe\u7f6e thread.sp\n        (\u4ed4\u7ec6\u60f3\u60f3\uff0c\u8fd9\u4e2a\u5e94\u8be5\u8bbe\u7f6e\u6210\u4ec0\u4e48\u503c?\u53ef\u4ee5\u6839\u636e child task \u7684\u8fd4\u56de\u8def\u5f84\u6765\u5012\u63a8)\n\n     2. \u5229\u7528\u53c2\u6570 regs \u6765\u8ba1\u7b97\u51fa child task \u7684\u5bf9\u5e94\u7684 pt_regs \u7684\u5730\u5740\uff0c\n        \u5e76\u5c06\u5176\u4e2d\u7684 a0, sp, sepc \u8bbe\u7f6e\u6210\u6b63\u786e\u7684\u503c(\u4e3a\u4ec0\u4e48\u8fd8\u8981\u8bbe\u7f6e sp?)\n\n     3. \u4e3a child task \u7533\u8bf7 user stack\uff0c\u5e76\u5c06 parent task \u7684 user stack \n        \u6570\u636e\u590d\u5236\u5230\u5176\u4e2d\u3002 (\u65e2\u7136 user stack \u4e5f\u5728 vma \u4e2d\uff0c\u8fd9\u4e00\u6b65\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728 5 \u4e2d\u505a\uff0c\u65e0\u9700\u7279\u6b8a\u5904\u7406)\n\n     3.1. \u540c\u65f6\u5c06\u5b50 task \u7684 user stack \u7684\u5730\u5740\u4fdd\u5b58\u5728 thread_info-&gt;\n        user_sp \u4e2d\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u53bb\u6389\u4e86 thread_info\uff0c\u90a3\u4e48\u65e0\u9700\u6267\u884c\u8fd9\u4e00\u6b65\n\n     4. \u4e3a child task \u5206\u914d\u4e00\u4e2a\u6839\u9875\u8868\uff0c\u5e76\u4eff\u7167 setup_vm_final \u6765\u521b\u5efa\u5185\u6838\u7a7a\u95f4\u7684\u6620\u5c04\n\n     5. \u6839\u636e parent task \u7684\u9875\u8868\u548c vma \u6765\u5206\u914d\u5e76\u62f7\u8d1d child task \u5728\u7528\u6237\u6001\u4f1a\u7528\u5230\u7684\u5185\u5b58\n\n     6. \u8fd4\u56de\u5b50 task \u7684 pid\n    */\n}\n</code></pre>"},{"location":"lab6/#_6","title":"\u7f16\u8bd1\u53ca\u6d4b\u8bd5","text":"<p>\u5728\u6d4b\u8bd5\u65f6\uff0c\u7531\u4e8e\u5927\u5bb6\u7535\u8111\u6027\u80fd\u90fd\u4e0d\u4e00\u6837\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u65f6\u949f\u4e2d\u65ad\u9891\u7387\u6bd4\u7528\u6237\u6253\u5370\u9891\u7387\u9ad8\u5f88\u591a\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u51cf\u5c11\u7528\u6237\u7a0b\u5e8f\u91cc\u7684 while \u5faa\u73af\u7684\u6b21\u6570\u6765\u52a0\u5feb\u6253\u5370\u3002\u8fd9\u91cc\u7684\u5b9e\u4f8b\u4ec5\u4f9b\u53c2\u8003\uff0c\u53ea\u8981 OS \u548c\u7528\u6237\u6001\u7a0b\u5e8f\u8fd0\u884c\u7b26\u5408\u4f60\u7684\u9884\u671f\uff0c\u90a3\u5c31\u662f\u6b63\u786e\u7684\u3002\u8fd9\u91cc\u4ee5\u6211\u4eec\u7ed9\u51fa\u7684\u7b2c\u4e09\u6bb5 <code>main</code> \u7a0b\u5e8f\u4e3a\u4f8b\uff1a</p> <ul> <li>\u8f93\u51fa\u793a\u4f8b</li> </ul> <pre><code>    OpenSBI v0.9\n     ____                    _____ ____ _____\n    / __ \\                  / ____|  _ \\_   _|\n   | |  | |_ __   ___ _ __ | (___ | |_) || |\n   | |  | | '_ \\ / _ \\ '_ \\ \\___ \\|  _ &lt; | |\n   | |__| | |_) |  __/ | | |____) | |_) || |_\n    \\____/| .__/ \\___|_| |_|_____/|____/_____|\n          | |\n          |_|\n\n    Platform Name             : riscv-virtio,qemu\n    Platform Features         : timer,mfdeleg\n    Platform HART Count       : 1\n    Firmware Base             : 0x80000000\n    Firmware Size             : 100 KB\n    Runtime SBI Version       : 0.2\n\n    Domain0 Name              : root\n    Domain0 Boot HART         : 0\n    Domain0 HARTs             : 0*\n    Domain0 Region00          : 0x0000000080000000-0x000000008001ffff ()\n    Domain0 Region01          : 0x0000000000000000-0xffffffffffffffff (R,W,X)\n    Domain0 Next Address      : 0x0000000080200000\n    Domain0 Next Arg1         : 0x0000000087000000\n    Domain0 Next Mode         : S-mode\n    Domain0 SysReset          : yes\n\n    Boot HART ID              : 0\n    Boot HART Domain          : root\n    Boot HART ISA             : rv64imafdcsu\n    Boot HART Features        : scounteren,mcounteren,time\n    Boot HART PMP Count       : 16\n    Boot HART PMP Granularity : 4\n    Boot HART PMP Address Bits: 54\n    Boot HART MHPM Count      : 0\n    Boot HART MHPM Count      : 0\n    Boot HART MIDELEG         : 0x0000000000000222\n    Boot HART MEDELEG         : 0x000000000000b109\n    [S] buddy_init done!\n    [S] Initialized: pid: 1, priority: 1, counter: 0\n    [S] 2022 Hello RISC-V\n    [S] Value of sstatus is 8000000000006002\n    [S] Set schedule: pid: 1, priority: 1, counter: 4\n    [S] Switch to: pid: 1, priority: 1, counter: 4\n    [S] Supervisor Page Fault, scause: 000000000000000c\n    [S] Supervisor Page Fault, scause: 000000000000000f, stval: 0000003ffffffff8, sepc: 0000000000010158\n    [S] Supervisor Page Fault, scause: 000000000000000d, stval: 0000000000011a00, sepc: 000000000001017c\n    [U] pid: 1 is running!, global_variable: 0\n    [U] pid: 1 is running!, global_variable: 1\n    [U] pid: 1 is running!, global_variable: 2\n    [S] New task: 2\n    [U-PARENT] pid: 1 is running!, global_variable: 3\n    [U-PARENT] pid: 1 is running!, global_variable: 4\n    [U-PARENT] pid: 1 is running!, global_variable: 5\n    [S] Supervisor Mode Timer Interrupt\n    [U-PARENT] pid: 1 is running!, global_variable: 6\n    [U-PARENT] pid: 1 is running!, global_variable: 7\n    [S] Supervisor Mode Timer Interrupt\n    [U-PARENT] pid: 1 is running!, global_variable: 8\n    [U-PARENT] pid: 1 is running!, global_variable: 9\n    [S] Supervisor Mode Timer Interrupt\n    [U-PARENT] pid: 1 is running!, global_variable: 10\n    [U-PARENT] pid: 1 is running!, global_variable: 11\n    [S] Supervisor Mode Timer Interrupt\n    [S] Switch to: pid: 2, priority: 1, counter: 3\n    [U-CHILD] pid: 2 is running!, global_variable: 3\n    [U-CHILD] pid: 2 is running!, global_variable: 4\n    [U-CHILD] pid: 2 is running!, global_variable: 5\n    [S] Supervisor Mode Timer Interrupt\n    [U-CHILD] pid: 2 is running!, global_variable: 6\n    [U-CHILD] pid: 2 is running!, global_variable: 7\n    [S] Supervisor Mode Timer Interrupt\n    [U-CHILD] pid: 2 is running!, global_variable: 8\n    [U-CHILD] pid: 2 is running!, global_variable: 9\n    [S] Supervisor Mode Timer Interrupt\n    [S] Set schedule: pid: 1, priority: 1, counter: 10\n    [S] Set schedule: pid: 2, priority: 1, counter: 4\n    [S] Switch to: pid: 2, priority: 1, counter: 4\n    [U-CHILD] pid: 2 is running!, global_variable: 10\n</code></pre>"},{"location":"lab6/#_7","title":"\u601d\u8003\u9898","text":"<p>\u4e0b\u9762\u7528\u659c\u4f53\u6807\u51fa\u7684\u90e8\u5206\u662f\u8fd9\u7bc7\u5b9e\u9a8c\u6307\u5bfc\u4e2d\u7684\u539f\u6587\u3002\u8bf7\u627e\u5230\u539f\u6587\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u57fa\u4e8e\u4e0a\u4e0b\u6587\u6765\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\uff1a</p> <ol> <li>\u53c2\u8003 task_init \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 task\uff0c\u5c06\u7684 parent task \u7684\u6574\u4e2a\u9875\u590d\u5236\u5230\u65b0\u521b\u5efa\u7684 task_struct \u9875\u4e0a\u3002\u8fd9\u4e00\u6b65\u590d\u5236\u4e86\u54ea\u4e9b\u4e1c\u897f?</li> <li>\u5c06 thread.ra \u8bbe\u7f6e\u4e3a <code>__ret_from_fork</code>\uff0c\u5e76\u6b63\u786e\u8bbe\u7f6e <code>thread.sp</code>\u3002\u4ed4\u7ec6\u60f3\u60f3\uff0c\u8fd9\u4e2a\u5e94\u8be5\u8bbe\u7f6e\u6210\u4ec0\u4e48\u503c\uff1f\u53ef\u4ee5\u6839\u636e child task \u7684\u8fd4\u56de\u8def\u5f84\u6765\u5012\u63a8\u3002</li> <li>\u5229\u7528\u53c2\u6570 regs \u6765\u8ba1\u7b97\u51fa child task \u7684\u5bf9\u5e94\u7684 pt_regs \u7684\u5730\u5740\uff0c\u5e76\u5c06\u5176\u4e2d\u7684 a0, sp, sepc \u8bbe\u7f6e\u6210\u6b63\u786e\u7684\u503c\u3002\u4e3a\u4ec0\u4e48\u8fd8\u8981\u8bbe\u7f6e sp?</li> </ol>"},{"location":"lab6/#_8","title":"\u4f5c\u4e1a\u63d0\u4ea4","text":"<p>\u4f60\u9700\u8981\u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\u4ee5\u53ca\u6574\u4e2a\u5de5\u7a0b\u4ee3\u7801\u3002\u5728\u63d0\u4ea4\u524d\u8bf7\u4f7f\u7528 <code>make clean</code> \u6e05\u9664\u6240\u6709\u6784\u5efa\u4ea7\u7269\u3002</p>"},{"location":"lab6/#_9","title":"\u66f4\u591a\u6d4b\u8bd5\u6837\u4f8b","text":"<p>\u4e0b\u9762\u662f\u540c\u5b66\u63d0\u4f9b\u7684\u6d4b\u8bd5\u6837\u4f8b\uff0c\u4e0d\u5f3a\u5236\u8981\u6c42\u5927\u5bb6\u90fd\u8fd0\u884c\u4e00\u904d\u3002\u4f46\u662f\u5982\u679c\u60f3\u589e\u5f3a\u4e00\u4e0b\u5bf9\u81ea\u5df1\u5199\u7684\u4ee3\u7801\u7684\u4fe1\u5fc3\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u66ff\u6362 <code>main</code> \u5e76\u8fd0\u884c\u3002\u5982\u679c\u4f60\u6709\u5176\u4ed6\u9002\u5408\u7528\u6765\u6d4b\u8bd5\u7684\u4ee3\u7801\uff0c\u6b22\u8fce\u4e3a\u4ed3\u5e93\u505a\u51fa\u8d21\u732e\u3002</p> <p>lhjgg \u7ed9\u51fa\u7684\u6837\u4f8b\uff1a</p> <pre><code>#define LARGE 512\n\nunsigned long something_large_here[512] = {0};\n\nint fib(int times) {\n  if (times &lt;= 2) {\n    return 1;\n  } else {\n    return fib(times - 1) + fib(times - 2);\n  }\n}\n\nint main() {\n  for (int i = 0; i &lt; LARGE; i++) {\n    something_large_here[i] = i;\n  }\n  int pid = fork();\n  printf(\"[U] fork returns %d\\n\", pid);\n\n  if (pid == 0) {\n    while(1) {\n      printf(\"[U-CHILD] pid: %ld is running! the %dth fibonacci number is %d and the number @ %d in the large array is %d\\n\", getpid(), global_variable, fib(global_variable), LARGE - global_variable, something_large_here[LARGE - global_variable]);\n      global_variable++;\n      for (int i = 0; i &lt; 0xFFFFFF; i++);\n    }\n  } else {\n    while (1) {\n      printf(\"[U-PARENT] pid: %ld is running! the %dth fibonacci number is %d and the number @ %d in the large array is %d\\n\", getpid(), global_variable, fib(global_variable), LARGE - global_variable, something_large_here[LARGE - global_variable]);\n      global_variable++;\n      for (int i = 0; i &lt; 0xFFFFFF; i++);\n    }\n  }\n}\n</code></pre> <p>\u6709\u4e00\u4e2a\u53ef\u80fd\u7684bug\u5c31\u662f\u4e24\u4e2a\u7ebf\u7a0b\u7b97\u51fa\u6765\u7684\u540c\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u4e0d\u4e00\u81f4\uff0c\u8fd9\u65f6\u5019\u5c31\u662f\u7528\u6237\u6808\u5207\u6362\u7684\u95ee\u9898\uff0c\u5176\u4ed6\u6837\u4f8b\u5e94\u8be5\u6d4b\u4e0d\u51fa\u6765. \u5220\u4e86\u51e0\u884c\u4e4b\u540e\u7684\u9519\u8bef\u793a\u8303\uff08 </p>"},{"location":"lab7/","title":"Lab7: VFS &amp; FAT32 \u6587\u4ef6\u7cfb\u7edf","text":"<p>\u672c\u5b9e\u9a8c\u4e2d\u4e0d\u6d89\u53ca <code>fork</code> \u7684\u5b9e\u73b0\u548c\u7f3a\u9875\u5f02\u5e38\uff0c\u53ea\u9700\u8981\u5b8c\u6210 Lab4 \u5373\u53ef\u5f00\u59cb\u672c\u5b9e\u9a8c\u3002</p>"},{"location":"lab7/#_1","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<ul> <li>\u4e3a\u7528\u6237\u6001\u7684 Shell \u63d0\u4f9b <code>read</code> \u548c <code>write</code> syscall \u7684\u5b9e\u73b0\uff08\u5b8c\u6210\u8be5\u90e8\u5206\u7684\u6240\u6709\u5b9e\u73b0\u65b9\u5f97 60 \u5206\uff09\u3002</li> <li>\u5b9e\u73b0 FAT32 \u6587\u4ef6\u7cfb\u7edf\u7684\u57fa\u672c\u529f\u80fd\uff0c\u5e76\u5bf9\u5176\u4e2d\u7684\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\uff08\u5b8c\u6210\u8be5\u90e8\u5206\u7684\u6240\u6709\u5b9e\u73b0\u65b9\u5f97 40 \u5206\uff09\u3002</li> </ul>"},{"location":"lab7/#_2","title":"\u5b9e\u9a8c\u73af\u5883","text":"<p>\u4e0e\u5148\u524d\u7684\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u7684\u73af\u5883\u76f8\u540c\u3002</p>"},{"location":"lab7/#_3","title":"\u80cc\u666f\u77e5\u8bc6","text":""},{"location":"lab7/#vfs","title":"VFS","text":"<p>\u865a\u62df\u6587\u4ef6\u7cfb\u7edf(VFS)\u6216\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u4ea4\u6362\u673a\u662f\u4f4d\u4e8e\u66f4\u5177\u4f53\u7684\u6587\u4ef6\u7cfb\u7edf\u4e4b\u4e0a\u7684\u62bd\u8c61\u5c42\u3002VFS\u7684\u76ee\u7684\u662f\u5141\u8bb8\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u4ee5\u7edf\u4e00\u7684\u65b9\u5f0f\u8bbf\u95ee\u4e0d\u540c\u7c7b\u578b\u7684\u5177\u4f53\u6587\u4ef6\u7cfb\u7edf\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528VFS\u900f\u660e\u5730\u8bbf\u95ee\u672c\u5730\u548c\u7f51\u7edc\u5b58\u50a8\u8bbe\u5907\uff0c\u800c\u5ba2\u6237\u673a\u5e94\u7528\u7a0b\u5e8f\u4e0d\u4f1a\u6ce8\u610f\u5230\u5176\u4e2d\u7684\u5dee\u5f02\u3002\u5b83\u53ef\u4ee5\u7528\u6765\u5f25\u5408Windows\u3001\u7ecf\u5178Mac OS/macOS\u548cUnix\u6587\u4ef6\u7cfb\u7edf\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u8fd9\u6837\u5e94\u7528\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u7c7b\u578b\u7684\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u6587\u4ef6\uff0c\u800c\u4e0d\u5fc5\u77e5\u9053\u5b83\u4eec\u6b63\u5728\u8bbf\u95ee\u4ec0\u4e48\u7c7b\u578b\u7684\u6587\u4ef6\u7cfb\u7edf\u3002</p> <p>VFS\u6307\u5b9a\u5185\u6838\u548c\u5177\u4f53\u6587\u4ef6\u7cfb\u7edf\u4e4b\u95f4\u7684\u63a5\u53e3(\u6216\u201c\u534f\u8bae\u201d)\u3002\u56e0\u6b64\uff0c\u53ea\u9700\u5b8c\u6210\u534f\u8bae\uff0c\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5411\u5185\u6838\u6dfb\u52a0\u5bf9\u65b0\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b\u7684\u652f\u6301\u3002\u534f\u8bae\u53ef\u80fd\u4f1a\u968f\u7740\u7248\u672c\u7684\u4e0d\u540c\u800c\u4e0d\u517c\u5bb9\u5730\u6539\u53d8\uff0c\u8fd9\u5c06\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u5177\u4f53\u7684\u6587\u4ef6\u7cfb\u7edf\u652f\u6301\uff0c\u5e76\u4e14\u53ef\u80fd\u5728\u91cd\u65b0\u7f16\u8bd1\u4e4b\u524d\u8fdb\u884c\u4fee\u6539\uff0c\u4ee5\u5141\u8bb8\u5b83\u4e0e\u65b0\u7248\u672c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e00\u8d77\u5de5\u4f5c;\u6216\u8005\u64cd\u4f5c\u7cfb\u7edf\u7684\u4f9b\u5e94\u5546\u53ef\u80fd\u53ea\u5bf9\u534f\u8bae\u8fdb\u884c\u5411\u540e\u517c\u5bb9\u7684\u66f4\u6539\uff0c\u4ee5\u4fbf\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ed9\u5b9a\u7248\u672c\u6784\u5efa\u7684\u5177\u4f53\u6587\u4ef6\u7cfb\u7edf\u652f\u6301\u5c06\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u7684\u672a\u6765\u7248\u672c\u4e00\u8d77\u5de5\u4f5c\u3002</p>"},{"location":"lab7/#virtio","title":"VirtIO","text":"<p>Virtio \u662f\u4e00\u4e2a\u5f00\u653e\u6807\u51c6\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u79cd\u534f\u8bae\uff0c\u7528\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u9a71\u52a8\u7a0b\u5e8f\u548c\u8bbe\u5907\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\u5728 QEMU \u4e0a\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e VirtIO \u4f7f\u7528\u8bb8\u591a\u6a21\u62df\u51fa\u6765\u7684\u5916\u90e8\u8bbe\u5907\uff0c\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u6211\u4eec\u4f7f\u7528 VirtIO \u6a21\u62df\u5b58\u50a8\u8bbe\u5907\uff0c\u5e76\u5728\u5176\u4e0a\u6784\u5efa\u6587\u4ef6\u7cfb\u7edf\u3002</p>"},{"location":"lab7/#mbr","title":"MBR","text":"<p>\u4e3b\u5f15\u5bfc\u8bb0\u5f55\uff08\u82f1\u8bed\uff1aMaster Boot Record\uff0c\u7f29\u5199\uff1aMBR\uff09\uff0c\u53c8\u53eb\u505a\u4e3b\u5f15\u5bfc\u6247\u533a\uff0c\u662f\u8ba1\u7b97\u673a\u5f00\u673a\u540e\u8bbf\u95ee\u786c\u76d8\u65f6\u6240\u5fc5\u987b\u8981\u8bfb\u53d6\u7684\u9996\u4e2a\u6247\u533a\uff0c\u5b83\u5728\u786c\u76d8\u4e0a\u4f4d\u4e8e\u7b2c\u4e00\u4e2a\u6247\u533a\u3002\u5728\u6df1\u5165\u8ba8\u8bba\u4e3b\u5f15\u5bfc\u6247\u533a\u5185\u90e8\u7ed3\u6784\u7684\u65f6\u5019\uff0c\u6709\u65f6\u4e5f\u5c06\u5176\u5f00\u5934\u7684446\u5b57\u8282\u5185\u5bb9\u7279\u6307\u4e3a\u201c\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u201d\uff08MBR\uff09\uff0c\u5176\u540e\u662f4\u4e2a16\u5b57\u8282\u7684\u201c\u78c1\u76d8\u5206\u533a\u8868\u201d\uff08DPT\uff09\uff0c\u4ee5\u53ca2\u5b57\u8282\u7684\u7ed3\u675f\u6807\u5fd7\uff0855AA\uff09\u3002\u56e0\u6b64\uff0c\u5728\u4f7f\u7528\u201c\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u201d\uff08MBR\uff09\u8fd9\u4e2a\u672f\u8bed\u7684\u65f6\u5019\uff0c\u9700\u8981\u6839\u636e\u5177\u4f53\u60c5\u51b5\u5224\u65ad\u5176\u5230\u5e95\u662f\u6307\u6574\u4e2a\u4e3b\u5f15\u5bfc\u6247\u533a\uff0c\u8fd8\u662f\u4e3b\u5f15\u5bfc\u6247\u533a\u7684\u524d446\u5b57\u8282\u3002</p>"},{"location":"lab7/#fat32","title":"FAT32","text":"<p>\u6587\u4ef6\u5206\u914d\u8868\uff08File Allocation Table\uff0c\u9996\u5b57\u6bcd\u7f29\u7565\u5b57\uff1aFAT\uff09\uff0c\u662f\u4e00\u79cd\u7531\u5fae\u8f6f\u53d1\u660e\u5e76\u62e5\u6709\u90e8\u5206\u4e13\u5229\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u4f9bMS-DOS\u4f7f\u7528\uff0c\u4e5f\u662f\u6240\u6709\u975eNT\u6838\u5fc3\u7684Windows\u7cfb\u7edf\u4f7f\u7528\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u6700\u65e9\u7684 FAT \u6587\u4ef6\u7cfb\u7edf\u76f4\u63a5\u4f7f\u7528\u6247\u533a\u53f7\u6765\u4f5c\u4e3a\u5b58\u50a8\u7684\u7d22\u5f15\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u7684\u7f3a\u70b9\u662f\u663e\u7136\u6613\u89c1\u7684\uff1a\u5f53\u78c1\u76d8\u7684\u5927\u5c0f\u4e0d\u65ad\u6269\u5927\uff0c\u5b58\u50a8\u6247\u533a\u53f7\u7684\u4f4d\u6570\u8d8a\u6765\u8d8a\u591a\uff0c\u8d8a\u53d1\u5360\u7528\u5b58\u50a8\u7a7a\u95f4\u3002\u4ee5 32 \u4f4d\u6247\u533a\u53f7\u7684\u6587\u4ef6\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u5982\u679c\u78c1\u76d8\u7684\u6247\u533a\u5927\u5c0f\u4e3a 512B\uff0c\u90a3\u4e48\u6587\u4ef6\u7cfb\u7edf\u80fd\u652f\u6301\u7684\u6700\u5927\u78c1\u76d8\u5927\u5c0f\u4ec5\u4e3a 2TB\u3002</p> <p>\u6240\u4ee5\u5728 FAT32 \u4e2d\u5f15\u5165\u7684\u65b0\u7684\u5b58\u50a8\u7ba1\u7406\u5355\u4f4d\u201c\u7c07\u201d\uff0c\u4e00\u4e2a\u7c07\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u6247\u533a\uff0c\u6587\u4ef6\u7cfb\u7edf\u4e2d\u8bb0\u5f55\u7684\u7d22\u5f15\u4e0d\u518d\u4e3a\u6247\u533a\u53f7\uff0c\u800c\u662f\u7c07\u53f7\uff0c\u4ee5\u6b64\u6765\u652f\u6301\u66f4\u5927\u7684\u5b58\u50a8\u8bbe\u5907\u3002\u4f60\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e9b\u8d44\u6599\u6765\u5b66\u4e60 FAT32 \u6587\u4ef6\u7cfb\u7edf\u7684\u6807\u51c6\u4e0e\u5b9e\u73b0\uff1a</p> <ul> <li>FAT32\u6587\u4ef6\u7cfb\u7edf\uff1f\u76d8\u5b83\uff01</li> <li>Microsoft FAT Specification</li> </ul>"},{"location":"lab7/#_4","title":"\u5b9e\u9a8c\u6b65\u9aa4","text":""},{"location":"lab7/#shell","title":"Shell: \u4e0e\u5185\u6838\u8fdb\u884c\u4ea4\u4e92","text":"<p>\u6211\u4eec\u4e3a\u5927\u5bb6\u63d0\u4f9b\u4e86 <code>nish</code> \u6765\u4e0e\u6211\u4eec\u5728\u5b9e\u9a8c\u4e2d\u5b8c\u6210\u7684 kernel \u8fdb\u884c\u4ea4\u4e92\u3002<code>nish</code> (Not Implemented SHell) \u63d0\u4f9b\u4e86\u7b80\u5355\u7684\u7528\u6237\u4ea4\u4e92\u548c\u6587\u4ef6\u8bfb\u5199\u529f\u80fd\uff0c\u6709\u5982\u4e0b\u7684\u547d\u4ee4\u3002</p> <pre><code>echo [string] # \u5c06 string \u8f93\u51fa\u5230 stdout\ncat  [path]   # \u5c06\u8def\u5f84\u4e3a path \u7684\u6587\u4ef6\u7684\u5185\u5bb9\u8f93\u51fa\u5230 stdout\nedit [path] [offset] [string] # \u5c06\u8def\u5f84\u4e3a path \u7684\u6587\u4ef6\uff0c\n            # \u504f\u79fb\u91cf\u4e3a offset \u7684\u90e8\u5206\u5f00\u59cb\uff0c\u5199\u4e3a string\n</code></pre> <p>\u540c\u6b65 <code>os23fall-stu</code> \u4e2d\u7684 <code>user</code> \u6587\u4ef6\u5939\uff0c\u66ff\u6362\u539f\u6709\u7684\u7528\u6237\u6001\u7a0b\u5e8f\u4e3a <code>nish</code>\u3002\u4e3a\u4e86\u80fd\u591f\u6b63\u786e\u542f\u52a8 QEMU\uff0c\u9700\u8981\u4e0b\u8f7d\u78c1\u76d8\u955c\u50cf\u5e76\u653e\u7f6e\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u3002\u540c\u65f6\uff0c\u8fd8\u9700\u8981\u5c06 <code>NR_TASKS</code> \u4fee\u6539\u4e3a 2\uff0c\u4e5f\u5c31\u662f\u4ec5\u521d\u59cb\u5316 <code>nish</code> \u8fd9\u4e00\u4e2a\u7528\u6237\u6001\u8fdb\u7a0b\u3002</p> <pre><code>lab7\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 disk.img\n\u251c\u2500\u2500 arch\n\u2502   \u2514\u2500\u2500 riscv\n\u2502       \u251c\u2500\u2500 Makefile\n\u2502       \u2514\u2500\u2500 include\n\u2502          \u2514\u2500\u2500 sbi.h\n\u251c\u2500\u2500 fs\n\u2502   \u251c\u2500\u2500 Makefile\n\u2502   \u251c\u2500\u2500 fat32.c\n\u2502   \u251c\u2500\u2500 fs.S\n\u2502   \u251c\u2500\u2500 mbr.c\n\u2502   \u251c\u2500\u2500 vfs.c\n\u2502   \u2514\u2500\u2500 virtio.c\n\u251c\u2500\u2500 include\n\u2502   \u251c\u2500\u2500 fat32.h\n\u2502   \u251c\u2500\u2500 fs.h\n\u2502   \u251c\u2500\u2500 mbr.h\n\u2502   \u251c\u2500\u2500 string.h\n\u2502   \u251c\u2500\u2500 debug.h\n\u2502   \u2514\u2500\u2500 virtio.h\n\u251c\u2500\u2500 lib\n\u2502   \u2514\u2500\u2500 string.c\n\u2514\u2500\u2500 user\n    \u251c\u2500\u2500 Makefile\n    \u251c\u2500\u2500 forktest.c\n    \u251c\u2500\u2500 link.lds\n    \u251c\u2500\u2500 printf.c\n    \u251c\u2500\u2500 ramdisk.S\n    \u251c\u2500\u2500 shell.c\n    \u251c\u2500\u2500 start.S\n    \u251c\u2500\u2500 stddef.h\n    \u251c\u2500\u2500 stdio.h\n    \u251c\u2500\u2500 string.h\n    \u251c\u2500\u2500 syscall.h\n    \u251c\u2500\u2500 unistd.c\n    \u2514\u2500\u2500 unistd.h\n</code></pre> <p>\u6b64\u5916\uff0c\u53ef\u80fd\u8fd8\u8981\u5411 <code>include/types.h</code> \u4e2d\u8865\u5145\u4e00\u4e9b\u7c7b\u578b\u522b\u540d </p> <pre><code>typedef unsigned long uint64_t;\ntypedef long int64_t;\ntypedef unsigned int uint32_t;\ntypedef int int32_t;\ntypedef unsigned short uint16_t;\ntypedef short int16_t;\ntypedef uint64_t* pagetable_t;\ntypedef char int8_t;\ntypedef unsigned char uint8_t;\ntypedef uint64_t size_t;\n</code></pre> <p>\u8fd8\u8981\u4fee\u6539\u4e00\u4e0b <code>arch/riscv/kernel/vmlinux.lds</code> \u4e2d\u7684 <code>_sramdisk</code> \u7b26\u53f7\u90e8\u5206(\u5c06 uapp \u4fee\u6539\u4e3a ramdisk)</p> <pre><code>        _sramdisk = .;\n        *(.ramdisk .ramdisk*)\n        _eramdisk = .;\n</code></pre> <p>\u5b8c\u6210\u8fd9\u4e00\u6b65\u540e\uff0c\u53ef\u80fd\u4f60\u8fd8\u9700\u8981\u8c03\u6574\u4e00\u90e8\u5206\u5934\u6587\u4ef6\u5f15\u7528\u548c <code>Makefile</code>\uff0c\u4ee5\u8ba9\u9879\u76ee\u80fd\u591f\u6210\u529f\u7f16\u8bd1\u5e76\u8fd0\u884c\u3002</p> <p>\u6211\u4eec\u5728\u542f\u52a8\u4e00\u4e2a\u7528\u6237\u6001\u7a0b\u5e8f\u65f6\u9ed8\u8ba4\u6253\u5f00\u4e86\u4e09\u4e2a\u6587\u4ef6\uff0c<code>stdin</code>\uff0c<code>stdout</code> \u548c <code>stderr</code>\uff0c\u4ed6\u4eec\u5bf9\u5e94\u7684 file descriptor \u5206\u522b\u4e3a <code>0</code>\uff0c<code>1</code>\uff0c<code>2</code>\u3002\u5728 <code>nish</code> \u542f\u52a8\u65f6\uff0c\u4f1a\u9996\u5148\u5411 <code>stdout</code> \u548c <code>stderr</code> \u5206\u522b\u5199\u5165\u4e00\u6bb5\u5185\u5bb9\uff0c\u7528\u6237\u6001\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>// user/shell.c\n\nwrite(1, \"hello, stdout!\\n\", 15);\nwrite(2, \"hello, stderr!\\n\", 15);\n</code></pre>"},{"location":"lab7/#stdout","title":"\u5904\u7406 <code>stdout</code> \u7684\u5199\u5165","text":"<p>\u6211\u4eec\u5728\u7528\u6237\u6001\u5df2\u7ecf\u50cf\u4e0a\u9762\u8fd9\u6837\u5b9e\u73b0\u597d\u4e86 <code>write</code> \u51fd\u6570\u6765\u5411\u5185\u6838\u53d1\u8d77 syscall\uff0c\u6211\u4eec\u5148\u5728\u5185\u6838\u6001\u5b8c\u6210\u771f\u5b9e\u7684\u5199\u5165\u8fc7\u7a0b\uff0c\u4e5f\u5373\u5c06\u5199\u5165\u7684\u5b57\u7b26\u8f93\u51fa\u5230\u4e32\u53e3\u3002</p> <pre><code>// arch/riscv/include/syscall.h\n\nint64_t sys_write(unsigned int fd, const char* buf, uint64_t count);\n\n// arch/riscv/include/syscall.c\n\nvoid trap_handler(uint64_t scause, uint64_t sepc, struct pt_regs *regs) {\n    ...\n    if (scause == 0x8) { // syscalls\n        uint64_t sys_call_num = regs-&gt;a7;\n        ...\n        if (sys_call_num == SYS_WRITE) {\n            regs-&gt;a0 = sys_write(regs-&gt;a0, (const char*)(regs-&gt;a1), regs-&gt;a2);\n            regs-&gt;sepc = regs-&gt;sepc + 4;\n        } else {\n            printk(\"Unhandled Syscall: 0x%lx\\n\", regs-&gt;a7);\n            while (1);\n        }\n    }\n    ...\n}\n</code></pre> <p>\u6ce8\u610f\u5230\u6211\u4eec\u4f7f\u7528\u7684\u662f <code>fd</code> \u6765\u7d22\u5f15\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u6240\u4ee5\u5728\u8be5\u8fdb\u7a0b\u7684\u5185\u6838\u6001\u9700\u8981\u7ef4\u62a4\u5f53\u524d\u8fdb\u7a0b\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u5c06\u8fd9\u4e9b\u6587\u4ef6\u7684\u4fe1\u606f\u50a8\u5b58\u5728\u4e00\u4e2a\u8868\u4e2d\uff0c\u5e76\u5728 <code>task_struct</code> \u4e2d\u6307\u5411\u8fd9\u4e2a\u8868\u3002</p> <pre><code>// include/fs.h\n\nstruct file {\n    uint32_t opened;\n    uint32_t perms;\n    int64_t cfo;\n    uint32_t fs_type;\n\n    union {\n        struct fat32_file fat32_file;\n    };\n\n    int64_t (*lseek) (struct file* file, int64_t offset, uint64_t whence);\n    int64_t (*write) (struct file* file, const void* buf, uint64_t len);\n    int64_t (*read)  (struct file* file, void* buf, uint64_t len);\n\n    char path[MAX_PATH_LENGTH];\n};\n\n// arch/riscv/include/proc.h\n\nstruct task_struct {\n    ...\n    struct file *files;\n    ...\n};\n</code></pre> <p>\u9996\u5148\u8981\u505a\u7684\u662f\u5728\u521b\u5efa\u8fdb\u7a0b\u65f6\u4e3a\u8fdb\u7a0b\u521d\u59cb\u5316\u6587\u4ef6\uff0c\u5f53\u521d\u59cb\u5316\u8fdb\u7a0b\u65f6\uff0c\u5148\u5b8c\u6210\u6253\u5f00\u7684\u6587\u4ef6\u7684\u5217\u8868\u7684\u521d\u59cb\u5316\uff0c\u8fd9\u91cc\u6211\u4eec\u7684\u65b9\u5f0f\u662f\u76f4\u63a5\u5206\u914d\u4e00\u4e2a\u9875\uff0c\u5e76\u7528 <code>files</code> \u6307\u5411\u8fd9\u4e2a\u9875\u3002</p> <pre><code>// fs/vfs.c\nint64_t stdout_write(struct file* file, const void* buf, uint64_t len);\nint64_t stderr_write(struct file* file, const void* buf, uint64_t len);\nint64_t stdin_read(struct file* file, void* buf, uint64_t len);\n\nstruct file* file_init() {\n    struct file *ret = (struct file*)alloc_page();\n\n    // stdin\n    ret[0].opened = 1;\n    ...\n\n    // stdout\n    ret[1].opened = 1;\n    ret[1].perms = FILE_WRITABLE;\n    ret[1].cfo = 0;\n    ret[1].lseek = NULL;\n    ret[1].write = /* todo */;\n    ret[1].read = NULL;\n    memcpy(ret[1].path, \"stdout\", 7);\n\n    // stderr\n    ret[2].opened = 1;\n    ...\n\n    return ret;\n}\n\nint64_t stdout_write(struct file* file, const void* buf, uint64_t len) {\n    char to_print[len + 1];\n    for (int i = 0; i &lt; len; i++) {\n        to_print[i] = ((const char*)buf)[i];\n    }\n    to_print[len] = 0;\n    return printk(buf);\n}\n\n// arch/riscv/kernel/proc.c\nvoid task_init() {\n    ...\n    // Initialize the stdin, stdout, and stderr.\n    task[1]-&gt;files = file_init();\n    printk(\"[S] proc_init done!\\n\");\n    ...\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u6bcf\u4e00\u4e2a\u88ab\u6253\u5f00\u7684\u6587\u4ef6\u5bf9\u5e94\u4e09\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u8fd9\u4e09\u4e2a\u51fd\u6570\u6307\u9488\u62bd\u8c61\u51fa\u4e86\u6bcf\u4e2a\u88ab\u6253\u5f00\u7684\u6587\u4ef6\u7684\u64cd\u4f5c\u3002\u4e5f\u5bf9\u5e94\u4e86 <code>SYS_LSEEK</code>\uff0c<code>SYS_WRITE</code>\uff0c\u548c <code>SYS_READ</code> \u8fd9\u4e09\u79cd syscall. \u6700\u7ec8\u7531\u51fd\u6570 <code>sys_write</code> \u8c03\u7528 <code>stdout</code> \u5bf9\u5e94\u7684 <code>struct file</code> \u4e2d\u7684\u51fd\u6570\u6307\u9488 <code>write</code> \u6765\u6267\u884c\u5bf9\u5e94\u7684\u5199\u4e32\u53e3\u64cd\u4f5c\u3002\u6211\u4eec\u8fd9\u91cc\u76f4\u63a5\u7ed9\u51fa <code>stdout_write</code> \u7684\u5b9e\u73b0\uff0c\u53ea\u9700\u8981\u76f4\u63a5\u628a\u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u8d4b\u503c\u7ed9 <code>stdout</code> \u5bf9\u5e94 <code>struct file</code> \u4e2d\u7684 <code>write</code> \u5373\u53ef\u3002</p> <p>\u63a5\u7740\u4f60\u9700\u8981\u5b9e\u73b0 <code>sys_write</code> syscall\uff0c\u6765\u95f4\u63a5\u8c03\u7528\u6211\u4eec\u8d4b\u503c\u7684 <code>stdout</code> \u5bf9\u5e94\u7684\u51fd\u6570\u6307\u9488\u3002</p> <pre><code>// arch/riscv/kernel/syscall.c\n\nint64_t sys_write(unsigned int fd, const char* buf, uint64_t count) {\n    int64_t ret;\n    struct file* target_file = &amp;(current-&gt;files[fd]);\n    if (target_file-&gt;opened) {\n        /* todo: indirect call */\n    } else {\n        printk(\"file not open\\n\");\n        ret = ERROR_FILE_NOT_OPEN;\n    }\n    return ret;\n}\n</code></pre> <p>\u81f3\u6b64\uff0c\u4f60\u5df2\u7ecf\u80fd\u591f\u6253\u5370\u51fa <code>stdout</code> \u7684\u8f93\u51fa\u4e86\u3002</p> <pre><code>2023 Hello RISC-V\nhello, stdout!\n</code></pre>"},{"location":"lab7/#stderr","title":"\u5904\u7406 <code>stderr</code> \u7684\u5199\u5165","text":"<p>\u4eff\u7167 <code>stdout</code> \u7684\u8f93\u51fa\u8fc7\u7a0b\uff0c\u5b8c\u6210 <code>stderr</code> \u7684\u5199\u5165\uff0c\u8ba9 <code>nish</code> \u53ef\u4ee5\u6b63\u786e\u6253\u5370\u51fa</p> <pre><code>2023 Hello RISC-V\nhello, stdout!\nhello, stderr!\nSHELL &gt;\n</code></pre>"},{"location":"lab7/#stdin","title":"\u5904\u7406 <code>stdin</code> \u7684\u8bfb\u53d6","text":"<p>\u6b64\u65f6 <code>nish</code> \u5df2\u7ecf\u6253\u5370\u51fa\u547d\u4ee4\u884c\u7b49\u5f85\u8f93\u5165\u547d\u4ee4\u4ee5\u8fdb\u884c\u4ea4\u4e92\u4e86\uff0c\u4f46\u662f\u8fd8\u9700\u8981\u8bfb\u5165\u4ece\u7ec8\u7aef\u8f93\u5165\u7684\u547d\u4ee4\u624d\u80fd\u591f\u4e0e\u4eba\u8fdb\u884c\u4ea4\u4e92\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5b9e\u73b0 <code>stdin</code> \u4ee5\u83b7\u53d6\u952e\u76d8\u952e\u5165\u7684\u5185\u5bb9\u3002</p> <p>\u5728\u7ec8\u7aef\u4e2d\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e0d\u65ad\u8bfb <code>stdin</code> \u6587\u4ef6\u6765\u83b7\u53d6\u952e\u5165\u7684\u5185\u5bb9\uff0c\u5e76\u89e3\u6790\u51fa\u547d\u4ee4\uff0c\u4f60\u9700\u8981\u5b8c\u6210\u7684\u53ea\u662f\u54cd\u5e94\u5982\u4e0b\u7684\u7cfb\u7edf\u8c03\u7528\uff1a</p> <pre><code>// user/shell.c\n\nread(0, read_buf, 1);\n</code></pre> <p>\u4ee3\u7801\u6846\u67b6\u4e2d\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5728\u5185\u6838\u6001\u7528\u4e8e\u5411\u7ec8\u7aef\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\u7684\u51fd\u6570\uff0c\u4f60\u9700\u8981\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u5b9e\u73b0\u4f60\u7684 <code>stdin_read</code>.</p> <pre><code>// fs/vfs.c\n\nchar uart_getchar() {\n    /* already implemented in the file */\n}\n\nint64_t stdin_read(struct file* file, void* buf, uint64_t len) {\n    /* todo: use uart_getchar() to get &lt;len&gt; chars */\n}\n</code></pre> <p>\u63a5\u7740\u53c2\u8003 <code>syscall_write</code> \u7684\u5b9e\u73b0\uff0c\u6765\u5b9e\u73b0 <code>syscall_read</code>.</p> <pre><code>// arch/riscv/kernel/syscall.c\n\nint64_t sys_read(unsigned int fd, char* buf, uint64_t count) {\n    int64_t ret;\n    struct file* target_file = &amp;(current-&gt;files[fd]);\n    if (target_file-&gt;opened) {\n        /* todo: indirect call */\n    } else {\n        printk(\"file not open\\n\");\n        ret = ERROR_FILE_NOT_OPEN;\n    }\n    return ret;\n}\n</code></pre> <p>\u81f3\u6b64\uff0c\u5c31\u53ef\u4ee5\u5728 <code>nish</code> \u4e2d\u4f7f\u7528 <code>echo</code> \u547d\u4ee4\u4e86\u3002</p> <pre><code>SHELL &gt; echo \"this is echo\"\nthis is echo\n</code></pre>"},{"location":"lab7/#fat32_1","title":"FAT32: \u6301\u4e45\u5b58\u50a8","text":"<p>\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\u6211\u4eec\u4ec5\u9700\u5b9e\u73b0 FAT32 \u6587\u4ef6\u7cfb\u7edf\u4e2d\u5f88\u5c0f\u4e00\u90e8\u5206\u529f\u80fd\uff0c\u6211\u4eec\u4e3a\u5b9e\u9a8c\u4e2d\u7684\u6d4b\u8bd5\u505a\u5982\u4e0b\u9650\u5236\uff1a</p> <ul> <li>\u6587\u4ef6\u540d\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e 8 \u4e2a\u5b57\u7b26\uff0c\u5e76\u4e14\u4e0d\u5305\u542b\u540e\u7f00\u540d\u548c\u5b57\u7b26 <code>.</code> .</li> <li>\u4e0d\u5305\u542b\u76ee\u5f55\u7684\u5b9e\u73b0\uff0c\u6240\u6709\u6587\u4ef6\u90fd\u4fdd\u5b58\u5728\u78c1\u76d8\u6839\u76ee\u5f55\u4e0b\u3002</li> <li>\u4e0d\u6d89\u53ca\u78c1\u76d8\u4e0a\u6587\u4ef6\u7684\u521b\u5efa\u548c\u5220\u9664\u3002</li> <li>\u4e0d\u6d89\u53ca\u6587\u4ef6\u5927\u5c0f\u7684\u4fee\u6539\u3002</li> </ul>"},{"location":"lab7/#_5","title":"\u51c6\u5907\u5de5\u4f5c","text":""},{"location":"lab7/#virtio-qemu","title":"\u5229\u7528 VirtIO \u4e3a QEMU \u6dfb\u52a0\u865a\u62df\u5b58\u50a8","text":"<p>\u6211\u4eec\u4e3a\u5927\u5bb6\u6784\u5efa\u597d\u4e86\u78c1\u76d8\u955c\u50cf\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a MBR \u5206\u533a\u8868\u4ee5\u53ca\u4e00\u4e2a\u5b58\u50a8\u6709\u4e00\u4e9b\u6587\u4ef6\u7684 FAT32 \u5206\u533a\u3002\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u547d\u4ee4\u6765\u542f\u52a8 QEMU\uff0c\u5e76\u5c06\u8be5\u78c1\u76d8\u8fde\u63a5\u5230 QEMU \u7684\u4e00\u4e2a VirtIO \u63a5\u53e3\u4e0a\uff0c\u6784\u6210\u4e00\u4e2a <code>virtio-blk-device</code>\u3002</p> <pre><code>run: all\n    @echo Launch the qemu ......\n    @qemu-system-riscv64 \\\n        -machine virt \\\n        -nographic \\\n        -bios default \\\n        -kernel vmlinux \\\n        -global virtio-mmio.force-legacy=false \\\n        -drive file=disk.img,if=none,format=raw,id=hd0 \\\n        -device virtio-blk-device,drive=hd0\n</code></pre> <p><code>virtio</code> \u6240\u9700\u7684\u9a71\u52a8\u6211\u4eec\u5df2\u7ecf\u4e3a\u5927\u5bb6\u7f16\u5199\u5b8c\u6210\u4e86\uff0c\u5728 <code>fs/virtio.c</code> \u4e2d\u7ed9\u51fa\u3002</p> <p>\u7136\u540e\u5728\u521b\u5efa\u865a\u62df\u5185\u5b58\u6620\u5c04\u65f6\uff0c\u8fd8\u9700\u8981\u6dfb\u52a0\u6620\u5c04 VritIO \u5916\u8bbe\u90e8\u5206\u7684\u6620\u5c04\u3002</p> <pre><code>// arch/riscv/kernel/vm.c\ncreate_mapping(task-&gt;pgd, io_to_virt(VIRTIO_START), VIRTIO_START, VIRTIO_SIZE * VIRTIO_COUNT, PTE_W | PTE_R | PTE_V);\n</code></pre>"},{"location":"lab7/#mbr_1","title":"\u521d\u59cb\u5316 MBR","text":"<p>\u6211\u4eec\u4e3a\u5927\u5bb6\u5b9e\u73b0\u4e86\u8bfb\u53d6 MBR \u8fd9\u4e00\u78c1\u76d8\u521d\u59cb\u5316\u8fc7\u7a0b\u3002\u8be5\u8fc7\u7a0b\u4f1a\u641c\u7d22\u78c1\u76d8\u4e2d\u5b58\u5728\u7684\u5206\u533a\uff0c\u7136\u540e\u5bf9\u5206\u533a\u8fdb\u884c\u521d\u6b65\u7684\u521d\u59cb\u5316\u3002</p> <p>\u5bf9 VirtIO \u548c MBR \u8fdb\u884c\u521d\u59cb\u5316\u7684\u903b\u8f91\u53ef\u4ee5\u88ab\u6dfb\u52a0\u5728\u521d\u59cb\u5316\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u7684 <code>task_init</code> \u4e2d</p> <pre><code>// arch/riscv/kernel/proc.c\nvoid task_init() {\n    ...\n    printk(\"[S] proc_init done!\\n\");\n\n    virtio_dev_init();\n    mbr_init();\n}\n</code></pre> <p>\u8fd9\u6837\u4ece\u7b2c\u4e00\u4e2a\u7528\u6237\u6001\u8fdb\u7a0b\u88ab\u521d\u59cb\u5316\u5b8c\u6210\u5f00\u59cb\uff0c\u5c31\u80fd\u591f\u76f4\u63a5\u4f7f\u7528 VirtIO\uff0c\u5e76\u4f7f\u7528\u521d\u59cb\u5316\u5b8c\u6210\u7684 MBR \u8868\u4e86\u3002</p>"},{"location":"lab7/#fat32_2","title":"\u521d\u59cb\u5316 FAT32 \u5206\u533a","text":"<p>\u5728 FAT32 \u5206\u533a\u7684\u7b2c\u4e00\u4e2a\u6247\u533a\u4e2d\u5b58\u50a8\u4e86\u5173\u4e8e\u8fd9\u4e2a\u5206\u533a\u7684\u5143\u6570\u636e\uff0c\u9996\u5148\u9700\u8981\u8bfb\u53d6\u5e76\u89e3\u6790\u8fd9\u4e9b\u5143\u6570\u636e\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u5b9a\u4e49\uff0c<code>fat32_bpb</code> \u4e3a FAT32 BIOS Parameter Block \u7684\u7b80\u5199\u3002\u8fd9\u662f\u4e00\u4e2a\u7269\u7406\u6247\u533a\uff0c\u5176\u4e2d\u5bf9\u5e94\u7684\u662f\u8fd9\u4e2a\u5206\u533a\u7684\u5143\u6570\u636e\u3002\u9996\u5148\u9700\u8981\u5c06\u8be5\u6247\u533a\u7684\u5185\u5bb9\u8bfb\u5230\u4e00\u4e2a <code>fat32_bpb</code> \u6570\u636e\u7ed3\u6784\u4e2d\u8fdb\u884c\u89e3\u6790\u3002<code>fat32_volume</code> \u662f\u7528\u6765\u5b58\u50a8\u6211\u4eec\u5b9e\u9a8c\u4e2d\u9700\u8981\u7528\u5230\u7684\u5143\u6570\u636e\u7684\uff0c\u9700\u8981\u6839\u636e <code>fat32_bpb</code> \u4e2d\u7684\u6570\u636e\u6765\u8fdb\u884c\u8ba1\u7b97\u5e76\u521d\u59cb\u5316\u3002</p> <pre><code>// fs/fat32.c\n\nstruct fat32_bpb fat32_header;      // FAT32 metadata in the disk\nstruct fat32_volume fat32_volume;   // FAT32 metadata to initialize\n\nvoid fat32_init(uint64_t lba, uint64_t size) {\n    virtio_blk_read_sector(lba, (void*)&amp;fat32_header);\n    fat32_volume.first_fat_sec = /* to calculate */;\n    fat32_volume.sec_per_cluster = /* to calculate */;\n    fat32_volume.first_data_sec = /* to calculate */;\n    fat32_volume.fat_sz = /* to calculate */;\n\n    virtio_blk_read_sector(fat32_volume.first_data_sec, fat32_buf); // Get the root directory\n    struct fat32_dir_entry *dir_entry = (struct fat32_dir_entry *)fat32_buf;\n}\n</code></pre>"},{"location":"lab7/#fat32_3","title":"\u8bfb\u53d6 FAT32 \u6587\u4ef6","text":"<p>\u5728\u8bfb\u53d6\u6587\u4ef6\u4e4b\u524d\uff0c\u9996\u5148\u9700\u8981\u6253\u5f00\u5bf9\u5e94\u7684\u6587\u4ef6\uff0c\u8fd9\u9700\u8981\u5b9e\u73b0 <code>openat</code> syscall.</p> <pre><code>// arch/riscv/syscall.c\n\nint64_t sys_openat(int dfd, const char* filename, int flags) {\n    int fd = -1;\n\n    // Find an available file descriptor first\n    for (int i = 0; i &lt; PGSIZE / sizeof(struct file); i++) {\n        if (!current-&gt;files[i].opened) {\n            fd = i;\n            break;\n        }\n    }\n\n    // Do actual open\n    file_open(&amp;(current-&gt;files[fd]), filename, flags);\n\n    return fd;\n}\n\nvoid file_open(struct file* file, const char* path, int flags) {\n    file-&gt;opened = 1;\n    file-&gt;perms = flags;\n    file-&gt;cfo = 0;\n    file-&gt;fs_type = get_fs_type(path);\n    memcpy(file-&gt;path, path, strlen(path) + 1);\n\n    if (file-&gt;fs_type == FS_TYPE_FAT32) {\n        file-&gt;lseek = fat32_lseek;\n        file-&gt;write = fat32_write;\n        file-&gt;read = fat32_read;\n        file-&gt;fat32_file = fat32_open_file(path);\n    } else if (file-&gt;fs_type == FS_TYPE_EXT2) {\n        printk(\"Unsupport ext2\\n\");\n        while (1);\n    } else {\n        printk(\"Unknown fs type: %s\\n\", path);\n        while (1);\n    }\n}\n</code></pre> <p>\u6211\u4eec\u4f7f\u7528\u6700\u7b80\u5355\u7684\u5224\u522b\u6587\u4ef6\u7cfb\u7edf\u7684\u65b9\u5f0f\uff0c\u6587\u4ef6\u524d\u7f00\u4e3a <code>/fat32/</code> \u7684\u5373\u662f\u672c\u6b21 FAT32 \u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6\uff0c\u4f8b\u5982\uff0c\u5728 <code>nish</code> \u4e2d\u6211\u4eec\u5c1d\u8bd5\u8bfb\u53d6\u6587\u4ef6\uff0c\u4f7f\u7528\u7684\u547d\u4ee4\u662f <code>cat /fat32/$FILENAME</code>. <code>file_open</code> \u4f1a\u6839\u636e\u524d\u7f00\u51b3\u5b9a\u662f\u5426\u8c03\u7528 <code>fat32_open_file</code> \u51fd\u6570\u3002\u6ce8\u610f\u56e0\u4e3a\u6211\u4eec\u7684\u6587\u4ef6\u4e00\u5b9a\u5728\u6839\u76ee\u5f55\u4e0b\uff0c\u4e5f\u5373 <code>/fat32/</code> \u4e0b\uff0c\u65e0\u9700\u5b9e\u73b0\u4e0e\u76ee\u5f55\u904d\u5386\u76f8\u5173\u7684\u903b\u8f91\u3002\u6b64\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u9700\u8981\u5c06\u6587\u4ef6\u540d\u7edf\u4e00\u8f6c\u6362\u4e3a\u5927\u5199\u6216\u5c0f\u5199\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u5b9e\u73b0\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u3002</p> <pre><code>// arch/riscv/syscall.c\n\nstruct fat32_file fat32_open_file(const char *path) {\n    struct fat32_file file;\n    /* todo: open the file according to path */\n    return file;\n}\n</code></pre> <p>\u5728\u6253\u5f00\u6587\u4ef6\u540e\u81ea\u7136\u662f\u8fdb\u884c\u6587\u4ef6\u7684\u8bfb\u53d6\u64cd\u4f5c\uff0c\u9700\u8981\u5148\u5b9e\u73b0 <code>lseek</code> syscall. \u6ce8\u610f\u5b9e\u73b0\u4e4b\u540e\u9700\u8981\u5728\u6253\u5f00\u6587\u4ef6\u65f6\u5c06\u5bf9\u5e94\u7684 <code>fat32_lseek</code> \u8d4b\u503c\u5230\u6253\u5f00\u7684 FAT32 \u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6\u7684 <code>lseek</code> \u51fd\u6570\u6307\u9488\u4e0a\u3002</p> <pre><code>// arch/riscv/kernel/syscall.c\n\nint64_t sys_lseek(int fd, int64_t offset, int whence) {\n    int64_t ret;\n    struct file* target_file = &amp;(current-&gt;files[fd]);\n    if (target_file-&gt;opened) {\n        /* todo: indirect call */\n    } else {\n        printk(\"file not open\\n\");\n        ret = ERROR_FILE_NOT_OPEN;\n    }\n    return ret;\n}\n\n// fs/fat32.c\n\nint64_t fat32_lseek(struct file* file, int64_t offset, uint64_t whence) {\n    if (whence == SEEK_SET) {\n        file-&gt;cfo = /* to calculate */;\n    } else if (whence == SEEK_CUR) {\n        file-&gt;cfo = /* to calculate */;\n    } else if (whence == SEEK_END) {\n        /* Calculate file length */\n        file-&gt;cfo = /* to calculate */;\n    } else {\n        printk(\"fat32_lseek: whence not implemented\\n\");\n        while (1);\n    }\n    return file-&gt;cfo;\n}\n</code></pre> <p>\u7136\u540e\u9700\u8981\u5b8c\u6210 <code>fat32_read</code> \u5e76\u5c06\u5176\u8d4b\u503c\u7ed9\u6253\u5f00\u7684 FAT32 \u6587\u4ef6\u7684 <code>read</code> \u51fd\u6570\u6307\u9488\u3002</p> <pre><code>// fs/fat32.c\n\nint64_t fat32_read(struct file* file, void* buf, uint64_t len) {\n    /* todo: read content to buf, and return read length */\n}\n</code></pre> <p>\u5b8c\u6210 FAT32 \u8bfb\u7684\u90e8\u5206\u540e\uff0c\u5c31\u5df2\u7ecf\u53ef\u4ee5\u5728 <code>nish</code> \u4e2d\u4f7f\u7528 <code>cat /fat32/email</code> \u6765\u8bfb\u53d6\u5230\u5728\u78c1\u76d8\u4e2d\u9884\u5148\u5b58\u50a8\u7684\u4e00\u4e2a\u540d\u4e3a email \u7684\u6587\u4ef6\u4e86\u3002</p> <p>\u5f53\u7136\uff0c\u6700\u540e\u8fd8\u9700\u8981\u5b8c\u6210 <code>close</code> syscall \u6765\u5c06\u6587\u4ef6\u5173\u95ed\u3002</p>"},{"location":"lab7/#fat32_4","title":"\u5199\u5165 FAT32 \u6587\u4ef6","text":"<p>\u5728\u5b8c\u6210\u8bfb\u53d6\u540e\uff0c\u5c31\u53ef\u4ee5\u4eff\u7167\u8bfb\u53d6\u7684\u51fd\u6570\u5b8c\u6210\u5bf9\u6587\u4ef6\u7684\u4fee\u6539\u3002\u5728\u6d4b\u8bd5\u65f6\u53ef\u4ee5\u4f7f\u7528 <code>edit</code> \u547d\u4ee4\u5728 <code>nish</code> \u4e2d\u5bf9\u6587\u4ef6\u505a\u51fa\u4fee\u6539\u3002\u9700\u8981\u5b9e\u73b0 <code>fat32_write</code>\uff0c\u53ef\u4ee5\u53c2\u8003\u524d\u9762\u7684 <code>fat32_read</code> \u6765\u8fdb\u884c\u5b9e\u73b0\u3002</p> <pre><code>// fs/fat32.c\n\nint64_t fat32_write(struct file* file, const void* buf, uint64_t len) {\n    /* todo: fat32_write */\n}\n</code></pre>"},{"location":"lab7/#_6","title":"\u6d4b\u8bd5","text":"<pre><code>[S] buddy_init done!\n[S] proc_init done!\n[S] virtio_blk_init done!\n[S] fat32 partition init done!\n2023 Hello RISC-V\nhello, stdout!\nhello, stderr!\nSHELL &gt; echo \"this is echo\"\nthis is echo\nSHELL &gt; cat /fat32/email\nFrom: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)\n...\nSHELL &gt; edit /fat32/email 6 TORVALDS\nSHELL &gt; cat /fat32/email\nFrom: TORVALDS@klaava.Helsinki.FI (Linus Benedict Torvalds)\n...\n</code></pre>"}]}
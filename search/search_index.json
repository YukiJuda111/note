{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Yuk1's note","text":"<p>my personal note</p>"},{"location":"about/","title":"My github repos","text":"<p>https://github.com/YukiJuda111?tab=repositories</p>"},{"location":"SE/chapter31/","title":"\u9879\u76ee\u7ba1\u7406","text":""},{"location":"SE/chapter31/#1-4p","title":"1 4\u4e2ap","text":"<ul> <li>\u7ba1\u4eba</li> <li>\u7ba1\u4ea7\u54c1\uff1aproduct\u600e\u4e48\u53bb\u6784\u9020</li> <li>\u7ba1\u6d41\u7a0b\uff1a\u8f6f\u4ef6\u5de5\u7a0b\u5206\u4e3a\u54ea\u4e9b\u6d3b\u52a8</li> <li>\u7ba1project\uff1a\u8d44\u6e90\uff0c\u534f\u8c03\uff0c\u5ba3\u4f20\u8fd9\u4e9b\u600e\u4e48\u505a</li> </ul>"},{"location":"SE/chapter31/#2","title":"2 \u5229\u76ca\u76f8\u5173\u8005","text":"<ul> <li>\u9ad8\u7ea7\u7ecf\u7406\uff1a\u90e8\u95e8\u5934\u90e8\uff0c\u4f60\u8981\u5e72\u5565\uff0c\u7ed9\u4f60\u8d44\u6e90\uff0c\u94b1\uff0c\u4eba</li> <li>\u9879\u76ee(\u6280\u672f)\u7ba1\u7406\u8005</li> <li>\u5b9e\u8df5\u8005\uff1a\u6280\u672f\u4eba\u5458(\u7cfb\u7edf\u5206\u6790\uff0c\u7cfb\u7edf\u67b6\u6784\uff0c\u7a0b\u5e8f\u5458\uff0c\u6d4b\u8bd5)</li> <li>\u5ba2\u6237\uff1a\u7ed9\u533b\u9662\u505a\u75ab\u60c5\u4e0a\u62a5\u7cfb\u7edf\uff0c\u5ba2\u6237\u662f\u533b\u9662</li> <li>\u7ec8\u7aef\u7528\u6237\uff1a\u7528\u6237\u662f\u533b\u751f</li> </ul>"},{"location":"SE/chapter31/#3","title":"3 \u9886\u5bfc","text":"<p>\u9886\u5bfc\u5f88\u91cd\u8981\uff0c\u9886\u5bfc\u9700\u8981\u6709\u80fd\u529b\uff0c\u6709\u5f71\u54cd\u529b</p> <p>MOI\u6a21\u578b\uff1a</p> <ul> <li>\u6fc0\u52b1\uff1a\u80fd\u591f\u6fc0\u52b1\u4eba\uff0c\u6fc0\u53d1\u6f5c\u8d28(\u5206\u7ea2\u80a1\u7968)</li> <li>\u7ec4\u7ec7\u80fd\u529b\uff1a\u8981\u627e\u5230\u5408\u9002\u7684\u4eba\u53bb\u5e72</li> <li>\u521b\u65b0\u80fd\u529b\uff1a\u4efb\u4f55\u56e2\u961f\u8981\u53d1\u5c55\uff0c\u4e0d\u80fd\u4e00\u6210\u4e0d\u53d8\u3002\u4e00\u4e2a\u7ec4\u7ec7\u4e0d\u521b\u65b0\u5f88\u96be\u7ef4\u6301\u3002eg.\u963f\u91cc\uff1a\u6dd8\u5b9d-&gt;\u652f\u4ed8\u5b9d</li> </ul>"},{"location":"SE/chapter31/#4","title":"4 \u7ec4\u7ec7\u65b9\u5f0f","text":"<p>\u524d\u9762\u6709</p>"},{"location":"SE/chapter31/#5","title":"5 \u654f\u6377\u56e2\u961f","text":"<ul> <li>\u76f8\u4e92\u4fe1\u4efb</li> <li>\u6280\u80fd\u4e92\u8865</li> <li>\u53bb\u6389\u523a\u5934\uff1a\u53ef\u4ee5\u53d1\u6325\u4e2a\u4eba\u82f1\u96c4\u4e3b\u4e49\uff0c\u4f46\u4e0d\u80fd\u8a00\u884c\u8fc7\u6fc0\uff0c\u5e26\u574f\u56e2\u961f</li> </ul>"},{"location":"SE/chapter31/#6","title":"6 \u6c9f\u901a\u65b9\u5f0f","text":"<ul> <li>\u6b63\u5f0f\uff0c\u548c\u4eba\u65e0\u5173\uff1a\u6587\u6863\uff0c\u8ba1\u5212\uff0c\u8d44\u6599</li> <li>\u6b63\u5f0f\uff0c\u4eba\u9645\u4e4b\u95f4\uff1a\u4fdd\u8bc1\u8d28\u91cf\uff0c\u6280\u672f\u590d\u5ba1\uff0c\u4ee3\u7801\u5ba1\u67e5</li> <li>\u975e\u6b63\u5f0f\uff0c\u4eba\u9645\u4e4b\u95f4\uff1a\u9879\u76ee\u4f1a\u8bae</li> <li>\u7535\u5b50\u5316\u901a\u8baf\uff1a\u90ae\u4ef6\u89c6\u9891\u4f1a\u8bae</li> <li>\u4eba\u4e0e\u4eba\u4e4b\u95f4\u7684\u7f51\u7edc\uff1a\u9080\u8bf7\u6709\u6280\u672f\u7684\uff0c\u8d44\u6df1\u7684\u4eba\u6765\u56e2\u961f\u91cc\u505a\u4ea4\u6d41</li> </ul>"},{"location":"SE/chapter31/#7","title":"7 \u4ea7\u54c1\u8303\u56f4","text":"<p>\u9700\u6c42\u5206\u6790\u5c31\u662f\u4e3a\u4e86\u628a\u4ea7\u54c1\u8303\u56f4\u63cf\u7ed8\u51fa\u6765</p> <ul> <li>\u4e0a\u4e0b\u6587\uff1a\u8fd0\u884c\u5728\u4ec0\u4e48\u6837\u7684\u786c\u4ef6\u4e0a\uff0c\u4ec0\u4e48\u7cfb\u7edf\u4e0a\u3002eg.\u533b\u9662\u4fe1\u606f\u6536\u96c6\u7cfb\u7edf\u8981\u548c\u5f71\u50cf\u7cfb\u7edf\u6709\u5173\u8054\u5173\u7cfb</li> <li>\u5b9a\u4e49\u76ee\u6807\uff1a\u8f93\u5165\u4ec0\u4e48\uff0c\u8f93\u51fa\u4ec0\u4e48</li> <li>\u529f\u80fd\u6027\u80fd\uff1a\u5e94\u8be5\u5177\u5907\u4ec0\u4e48\u529f\u80fd\uff0c\u600e\u4e48\u628ainput\u8f6c\u6362\u6210output\u3002\u6027\u80fd\u600e\u4e48\u6837\uff0c\u652f\u6491\u591a\u5c11\u7528\u6237</li> <li>\u53ef\u9760\u6027\uff1a24\u5c0f\u65f6\u4e0d\u5b95\u673a(\u652f\u4ed8\u5b9d)\uff0c\u8fd8\u662f\u4fdd\u8bc1\u4e00\u5b9a\u65f6\u95f4\u4e0d\u51fa\u95ee\u9898\u5c31\u884c(\u80a1\u7968)</li> <li>\u63a5\u53e3\uff1a\u9762\u5411\u786c\u4ef6\u63a5\u53e3\u662f\u4ec0\u4e48\uff0c\u8f6f\u4ef6\u548c\u8f6f\u4ef6\u4e4b\u95f4\u7684\u63a5\u53e3\u662f\u4ec0\u4e48</li> <li>\u5b89\u5168\uff1a\u8ba4\u8bc1\u6388\u6743\u52a0\u5bc6\u89e3\u5bc6Dos\u6709\u4ec0\u4e48\u8981\u6c42</li> </ul>"},{"location":"SE/chapter31/#8","title":"8 \u5206\u89e3\u95ee\u9898","text":"<p>\u5bf9\u6bcf\u4e2ascope\u505a\u7ec6\u5206\uff0c\u7ec6\u5206\u5230\u4e00\u7ea7\u6307\u6807\u4e8c\u7ea7\u6307\u6807\u4e09\u7ea7\u6307\u6807\uff0c\u628a\u590d\u6742\u95ee\u9898\u5206\u89e3\uff0c\u6bcf\u4e2a\u65b9\u9762\u8981\u6ee1\u8db3\u4ec0\u4e48\u9700\u6c42\u3002</p>"},{"location":"SE/chapter31/#9","title":"9 \u8fc7\u7a0b\u7ba1\u7406","text":"<p>\u9009\u62e9\u8fc7\u7a0b\uff0c\u5b9a\u4e49task\u3002\u53ef\u4ee5\u7528\u4e4b\u524d\u8bf4\u7684\u8fc7\u7a0b\u6a21\u578b\uff0c\u505a\u6d41\u7a0b\u9002\u914d\u3002</p> <ul> <li>\u8003\u8651\u9879\u76ee\u7279\u70b9</li> <li>\u786e\u5b9a\u9879\u76ee\u9700\u8981\u7684\u7cbe\u5bc6\u5ea6</li> <li>task set\uff1a\u5b9a\u4e49\u8f6f\u4ef6\u5de5\u7a0b\u4efb\u52a1\uff0c\u9879\u76ee\uff0c\u8d28\u91cf\u4fdd\u8bc1\u70b9\uff0c\u548c\u91cc\u7a0b\u7891</li> </ul>"},{"location":"SE/chapter31/#10","title":"10 \u56fe","text":"<p>\u6a2a\u5750\u6807\uff1a 5\u4e2a\u5927\u4efb\u52a1</p> <p>\u7eb5\u5750\u6807\uff1a\u95ee\u9898\uff0c\u4ea7\u54c1\u5305\u542b\u54ea\u4e9b\u529f\u80fd</p> <p>\u4efb\u52a1\u77e9\u9635\uff0c\u6bcf\u4e2a\u5c0f\u683c\u5b50\u90fd\u662f\u4efb\u52a1\uff0c\u8fc7\u7a0b\u7ba1\u7406\u5c31\u662f\u628a\u4efb\u52a1\u7f16\u6392\u8d77\u6765</p>"},{"location":"SE/chapter31/#11","title":"11 \u9879\u76ee\u7ba1\u7406","text":"<p>\u9677\u5165\u56f0\u5883\u7684\u539f\u56e0\uff1a</p> <ul> <li>\u6ca1\u7406\u89e3\u7528\u6237\u9700\u6c42</li> <li>\u4ea7\u54c1\u5b9a\u4e49\u4e0d\u6e05\u6670</li> <li>\u66f4\u6539\u6ca1\u7ba1\u7406\u597d\uff0c\u7528\u6237\u8bf4\u8981\u66f4\u6539\uff0c\u4f46\u662f\u6ca1\u7ba1\u7406\u597d\uff0c\u5bfc\u81f4\u6df7\u4e71</li> <li>\u5546\u4e1a\u9700\u6c42\u53d8\u4e86</li> <li>DDL\u4e0d\u73b0\u5b9e\uff1a\u8001\u677f\u5ba2\u6237\uff0c5\u4e2a\u6708\u7684\u4e8b4\u4e2a\u6708\u5e72\u5b8c\uff1b\u7a0b\u5e8f\u5458\uff0c5\u4e2a\u6708\u7684\u4e8b6\u4e2a\u6708\u5e72\u5b8c</li> <li>\u7528\u6237\u4e0d\u5408\u4f5c\uff0c\u6297\u62d2</li> <li>\u6ca1\u94b1</li> <li>\u6ca1\u6709\u5408\u9002\u7684\u4eba\u624d</li> <li>\u7ba1\u7406\u8005\u7ecf\u9a8c\u4e0d\u8db3</li> </ul>"},{"location":"SE/chapter31/#12","title":"12 \u597d\u7684\u9879\u76ee\u7ba1\u7406","text":"<ul> <li>\u7406\u89e3\u7528\u6237\u9700\u6c42\uff0c\u95ee\u9898\u5b9a\u4e49\u6e05\u695a\u3002\u8fd9\u6837\u65f6\u95f4\uff0c\u4eba\u5458\uff0c\u94b1\u8981\u591a\u5c11\u5c31\u80fd\u6e05\u695a</li> <li>\u4fdd\u6301\u52a8\u529b\uff1a\u7ba1\u7406\u8005\u8981\u7528\u624b\u6bb5\u9632\u6b62\u4eba\u5458\u53d8\u52a8\u3002\u56e2\u961f\u6bcf\u4e00\u6b65\u5f3a\u8c03\u8d28\u91cf\u3002\u9ad8\u7ea7\u7ecf\u7406\u8981\u514d\u53d7\u56e2\u961f\u5f71\u54cd</li> <li>\u505atrack\uff1a\u6765\u4fdd\u8bc1\u8d28\u91cf</li> <li>\u660e\u667a\u51b3\u7b56\uff1a\u51b3\u7b56\u8981\u7b80\u5355</li> <li>\u505a\u603b\u7ed3\u5206\u6790\uff0c\u4fbf\u4e8e\u540e\u7eed\u6539\u8fdb</li> </ul>"},{"location":"SE/chapter31/#13-5w2h","title":"13 5W2H","text":"<p>\u9879\u76ee\u6700\u5173\u5fc3\u7684\u95ee\u9898\uff1a</p> <ul> <li>\u4e3a\u4ec0\u4e48\u8981\u505a\u8fd9\u4e2a\u9879\u76ee</li> <li>\u4e3a\u4e86\u5b8c\u6210\u76ee\u6807\uff0c\u8981\u505a\u4ec0\u4e48</li> <li>\u4ec0\u4e48\u65f6\u5019\u505a\u5b8c</li> <li>\u6bcf\u9879\u4efb\u52a1\u7684\u8d23\u4efb\u4eba\u662f\u8c01</li> <li>\u56e2\u961f\u5728\u54ea</li> <li>\u5982\u4f55\u505a\uff08\u6280\u672f\u548c\u7ba1\u7406\u4e24\u65b9\u9762\uff09</li> <li>\u9700\u8981\u591a\u5c11\u8d44\u6e90</li> </ul>"},{"location":"SE/chapter31/#14","title":"14 \u5173\u952e\u8fc7\u7a0b\u5b9e\u8df5","text":"<ul> <li>\u98ce\u9669\u7ba1\u7406</li> <li>\u8c03\u5ea6\u89c4\u5212</li> <li>\u9879\u76ee\u7ba1\u7406</li> <li>\u5ea6\u91cf</li> <li>\u5206\u6790</li> </ul>"},{"location":"SE/chapter6/","title":"Chapter6","text":""},{"location":"SE/chapter6/#1","title":"1","text":"<ul> <li> <p>\u8d23\u4efb\u5fc3\uff1aeg.\u8001\u677f\u544a\u8bc9\u4f6080%\uff0c\u8981\u5b8c\u6210\u5269\u4e0b\u768420%\u3002\u4e0d\u80fd\u53ea\u5b8c\u621070%\uff0c\u88ab\u50ac\u4fc3</p> </li> <li> <p>\u654f\u9510\u610f\u8bc6\uff1a\u6e05\u695a\u5ba2\u6237\u9700\u6c42</p> </li> <li> <p>\u7528\u4e8e\u627f\u8ba4\u9519\u8bef\uff1a\u5766\u8bda\u5730\u9762\u5bf9\u95ee\u9898\uff0c\u6709\u81ea\u5df1\u7684\u770b\u6cd5\uff0c\u63d0\u51fa\u5efa\u8bbe\u6027\u610f\u89c1</p> </li> <li> <p>\u6297\u538b\uff1aeg.\u963f\u91cc996</p> </li> <li> <p>\u516c\u6b63\uff1a\u4e0d\u80fd\u6545\u610f\u504f\u8892\u67d0\u4eba</p> </li> <li> <p>\u5173\u6ce8\u7ec6\u5ea6\uff1a\u7ec6\u8282\u51b3\u5b9a\u6210\u8d25\u3002eg.\u5954\u9a70\u7ec6\u8282\u505a\u5f97\u5230</p> </li> <li> <p>\u5b9e\u5728\uff1a\u6c42\u5b9e\u521b\u65b0\uff0c\u4e0d\u80fd\u597d\u9ad8\u9a9b\u8fdc</p> </li> </ul>"},{"location":"SE/chapter6/#2","title":"2 \u8f6f\u4ef6\u5de5\u7a0b\u5fc3\u7406\u5b66","text":"<ul> <li> <p>\u5546\u4e1a\u73af\u5883\uff1a\u7ec4\u7ec7\u5316\u884c\u4e3a\u8fdb\u884c\u7ba1\u7406</p> </li> <li> <p>\u4f01\u4e1a</p> </li> <li> <p>\u9879\u76ee</p> </li> <li> <p>\u56e2\u961f\uff1a\u56e2\u961f\u80fd\u52a8\u6027\uff0c\u8d85\u989d\u5b8c\u6210\u4efb\u52a1</p> </li> <li> <p>\u4e2a\u4eba\uff1a\u6bd4\u8f83\u5f3a\u7684\u8ba4\u77e5\u80fd\u529b</p> </li> </ul> <p>\u4e0d\u540cteam\u7684\u8de8\u754c\u6c9f\u901a\u89d2\u8272\uff1a</p> <p>\u5916\u8054\uff1a\u548c\u5176\u4ed6\u90e8\u95e8\u505a\u6c9f\u901a \u4fa6\u5bdf\uff1a\u5176\u4ed6\u56e2\u961f\u505a\u7684\u600e\u4e48\u6837 \u5b88\u62a4\uff1a\u4e0d\u80fd\u900f\u9732\u4fe1\u606f \u534f\u8c03\uff1a\u4ee3\u8868\u56e2\u961f\u548c\u5176\u4ed6\u56e2\u961f\u8c08\u5224</p>"},{"location":"SE/chapter6/#3","title":"3 \u6709\u6548\u7684\u8f6f\u4ef6\u56e2\u961f\u7279\u5f81","text":"<ul> <li>\u76ee\u6807\u610f\u8bc6</li> <li>\u6295\u5165\u610f\u8bc6</li> <li>\u53c2\u4e0e\u610f\u8bc6\uff1a\u4e0d\u8981\u4e8b\u4e0d\u5173\u5df1</li> <li>\u4fe1\u4efb\u610f\u8bc6\uff1a\u76f8\u4fe1\u961f\u53cb</li> <li>\u79ef\u6781\u610f\u8bc6\uff1a\u8981\u79ef\u6781\u5411\u4e0a</li> <li>\u6280\u80fd\u76f8\u4e92\u8865\u5145\uff1a\u524d\u7aef\uff0c\u4e2d\u53f0\uff0c\u540e\u53f0\uff0c\u7cfb\u7edf\u5b89\u5168...\u5404\u65b9\u9762</li> </ul> <p>\u907f\u514d\u56e2\u961f\u6bd2\u836f\uff1a</p> <ul> <li>\u76ee\u6807\u6df7\u4e71\uff1a\u4ea7\u54c1\uff0c\u7b56\u7565\uff0c\u5e02\u573a\uff0c\u6280\u672f\uff0c\u5546\u4e1a\u6a21\u5f0f\u90fd\u8981\u6e05\u695a</li> <li>\u77db\u76fe\u91cd\u91cd\uff1a\u56e0\u4e3a\u6ca1\u6709\u534f\u8c03\u5458\u3002eg.\u5de5\u8d44\u4f4e\uff0c\u4f46\u662f\u56e2\u961f\u6c1b\u56f4\u597d\uff0c\u5927\u5bb6\u613f\u610f\u5f85</li> <li>\u7ba1\u7406\u4e0d\u5584\uff1a\u6c9f\u901a\u4e0d\u660e\uff0c\u8981\u63ea\u51fa\u6ee5\u7afd\u5145\u6570\u7684\u4eba</li> <li>\u5206\u5de5\u4e0d\u660e\uff1a\u95f2\u7684\u95f2\u6b7b\uff0c\u5fd9\u7684\u5fd9\u6b7b\uff0c\u4e0d\u80fd\u6b3a\u8d1f\u8001\u5b9e\u4eba\u3002\u95f2\u7684\u4eba\u4e8b\u4e0d\u5173\u5df1\u4e0d\u884c</li> <li>\u8fde\u7eed\u5931\u8d25\uff1a\u5355\u5b50\u6ca1\u4eba\u8981\uff0c\u8981\u81ea\u5df1\u53bb\u627e\u5355\u5b50\u3002\u56e2\u5efa\u5de5\u4f5c\u5f88\u91cd\u8981\uff0c\u6253\u9e21\u8840</li> </ul>"},{"location":"SE/chapter6/#4","title":"4 \u7ec4\u7ec7\u884c\u4e3a\u5b66","text":"<p>\u76ee\u7684\uff1a\u63d0\u9ad8\u6574\u4e2a\u7ec4\u7ec7\u7684\u6548\u7387</p> <ul> <li>closed\uff1aleader\uff0c\u9879\u76ee\u7ecf\u7406\uff0c\u6a21\u5757\u7ecf\u7406\u4e00\u5c42\u5c42\u4e0b\u53bb(eg.\u4e2d\u56fd\uff0c\u6267\u884c\u529b\u5f3a)</li> <li>random\uff1a\u6bd4\u8f83\u677e\u6563(eg.\u610f\u5927\u5229\uff0c\u6709\u5229\u4e8e\u521b\u65b0\uff0c\u6548\u7387\u4e0d\u9ad8)</li> <li>Open\uff1a\u4e24\u79cd\u7ed3\u5408\uff0c\u6df7\u5408\u578b\u67b6\u6784\uff0c\u517c\u987e\u4e24\u8005\u4f18\u7f3a\u70b9(\u770b\u4eba\u6570\u51b3\u5b9a\u8303\u5f0f)</li> <li>\u540c\u6b65\uff1a\u6309\u95ee\u9898\u81ea\u7136\u5206\u89e3\u5212\u5206\u56e2\u961f\uff0c\u7136\u540e\u7ec4\u7ec7\u5728\u4e00\u8d77</li> </ul>"},{"location":"SE/chapter6/#5","title":"5 \u51b3\u5b9a\u8303\u5f0f","text":"<p>\u6309\u7167\u95ee\u9898\u7279\u5f81\u6765\u9009\u62e9\u8303\u5f0f\uff0c\u95ee\u9898\u96be\uff0crandom\u521b\u65b0\u3002</p> <p>\u89c4\u6a21\u5927\uff0cclosed\u7ba1\u7406</p> <p>\u56e2\u961f\u65f6\u95f4\uff0c\u5728\u4e00\u8d77\u76f8\u5bf9\u65f6\u95f4\u957f\uff0c\u81ea\u7531\u4e00\u70b9\u3002</p> <p>\u6a21\u5757\u5316\u7a0b\u5ea6\u8d8a\u9ad8\uff0c\u81ea\u7531\u70b9\u3002</p> <p>\u53ef\u9760\u6027\u8981\u6c42\u9ad8\uff0cclosed</p> <p>ddl\u7d27\u8feb\uff0cclosed</p> <p>\u901a\u8baf\u8981\u6c42\u9ad8\uff0cclosed</p>"},{"location":"SE/chapter6/#6","title":"6 \u654f\u6377\u56e2\u961f","text":"<ul> <li>\u4e2a\u4eba\u80fd\u529b\u548c\u56e2\u961f\u534f\u4f5c\u4e00\u6837\u91cd\u8981</li> <li>\u4eba\u6bd4\u8fc7\u7a0b\u91cd\u8981\uff0c\u7b56\u7565\u6bd4\u4eba\u91cd\u8981</li> <li>\u81ea\u7ec4\u7ec7\uff1a\u9002\u5e94\u95ee\u9898\uff0c\u4e0d\u540c\u95ee\u9898\u9009\u7528\u4e0d\u540c\u7684\u4eba</li> <li>\u8ba1\u5212\u5c3d\u91cf\u5c0f\uff0c\u4e0d\u8981\u8fc7\u5ea6\u8ba1\u5212</li> </ul>"},{"location":"SE/chapter6/#7-xp-team","title":"7 XP Team\u6781\u9650\u7f16\u7a0b\u56e2\u961f","text":"<ul> <li>\u6c9f\u901a\uff1a\u6709\u4ec0\u4e48\u4e8b\u60c5\u53ca\u65f6\u6c9f\u901a\u3002\u6bcf\u5929\u82b1\u5341\u5206\u949f\u5f00\u4f1a\uff1a1.\u6628\u5929\u5e72\u5565 2.\u6709\u5565\u95ee\u9898 3.\u4eca\u5929\u5e72\u5565</li> <li>\u7b80\u5355\u5316\uff1a\u6d3b\u5728\u5f53\u4e0b</li> <li>\u53cd\u9988\uff1a\u8001\u7248\u672c\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u518d\u8fdb\u884c\u8fed\u4ee3</li> <li>\u52c7\u6c14\uff1a\u5bf9\u81ea\u5df1\u8981\u6709\u4fe1\u5fc3\uff0c\u575a\u6301\u81ea\u5df1\u7684\u9879\u76ee</li> <li>\u5c0a\u91cd\uff1a\u56e2\u961f\u6210\u5458\u4e4b\u95f4\u76f8\u4e92\u5c0a\u91cd\uff0c\u76f8\u4e92\u8ba4\u53ef</li> </ul>"},{"location":"SE/chapter6/#8","title":"8 \u56e2\u961f\u6c9f\u901a\u624b\u6bb5","text":"<ul> <li>\u535a\u5ba2\uff1a\u56e2\u961f\u9f13\u52b1\u505a\u6280\u672f\u535a\u5ba2\uff0c\u6709\u7ecf\u9a8c\u7684\u4eba\u505a\u6280\u672f\u535a\u5ba2\uff0c\u65b9\u4fbf\u65b0\u6765\u7684</li> <li>\u5fae\u535a</li> <li>\u5728\u7ebf\u8bba\u575b</li> <li>\u793e\u4ea4\u7f51\u7edc\uff1a\u6563\u6b65\u4fe1\u606f\uff0c\u6c9f\u901a\u7684\u7fa4</li> <li>book marking\uff1a\u670b\u53cb\u5708</li> </ul>"},{"location":"SE/chapter6/#9-cloud","title":"9 Cloud","text":"<p>\u597d\u5904\uff1a</p> <ul> <li>\u5171\u4eab\u65b9\u4fbf</li> <li>\u968f\u65f6\u968f\u5730\u4ea4\u6d41</li> <li>\u6d4b\u8bd5\uff0c\u5b89\u88c5\u8fd0\u884c\u65b9\u4fbf</li> <li>\u7528\u6237\u4e5f\u53ef\u4ee5\u65b9\u4fbf\u4f7f\u7528\u8f6f\u4ef6</li> </ul> <p>\u7f3a\u70b9\uff1a</p> <ul> <li>\u53ef\u9760\u6027\u5b89\u5168\u6027\u95ee\u9898\uff1aeg.\u963f\u91cc\u4e91\u6302\u6389\uff0c\u5f88\u591a\u7cfb\u7edf\u90fd\u4f1a\u51fa\u95ee\u9898\u3002\u5185\u90e8\u8d44\u6599\u5bb9\u6613\u88ab\u653b\u7834</li> <li>\u64cd\u4f5c\u590d\u6742</li> <li>\u7f51\u7edc\u53ef\u9760\u6027\u95ee\u9898\uff1a\u7f51\u7edc\u4e0d\u7a33\u5b9a</li> </ul>"},{"location":"SE/chapter6/#10-cde","title":"10 \u534f\u540c\u5f00\u53d1\u73af\u5883CDE","text":"<ul> <li>namespace\uff1a\u516c\u5171\u7a7a\u95f4</li> <li>\u65e5\u5386\uff1a\u6bcf\u5929\u5e72\u4e86\u5565</li> <li>\u6a21\u7248\uff1a\u6807\u51c6\u5316\uff0c\u81ea\u52a8\u521b\u5efa\u6a21\u7248</li> <li>\u91cf\u5316\u8bc4\u4f30\u6bcf\u4e2a\u6210\u5458\u7684\u8d21\u732e</li> <li>\u4ea4\u6d41\u8fc7\u7a0b\u8ddf\u8e2a</li> <li>\u5bf9\u4ea7\u51fa\u805a\u7c7b</li> </ul>"},{"location":"SE/chapter6/#11","title":"11 \u5168\u7403\u5316\u516c\u53f8","text":"<ul> <li>\u95ee\u9898\u66f4\u52a0\u590d\u6742\uff0c\u5206\u6563\u5728\u4e16\u754c\u5404\u5730</li> <li>\u51b3\u7b56\u4e0d\u786e\u5b9a\u6027\uff0c\u98ce\u9669\u66f4\u52a0\u5927</li> <li>\u5bf9\u95ee\u9898\u4e0d\u540c\u7684\u770b\u6cd5\u5bfc\u81f4\u4e0d\u540c\u7684\u65b9\u5411</li> </ul>"},{"location":"SE/chapter6/#12","title":"12 \u56fe","text":"<p>\u8ddd\u79bb\u4ea7\u751f\u969c\u788d\uff0c\u5bfc\u81f4\u6c9f\u901a\u95ee\u9898\uff0c\u534f\u8c03\u95ee\u9898</p> <p>\u56e0\u6b64\u8981\u52a0\u5f3a\u6c9f\u901a\uff0c\u4f7f\u5f97\u66f4\u597d\u534f\u540c</p>"},{"location":"SE/chapter7/","title":"Chapter7","text":""},{"location":"SE/chapter7/#1","title":"1","text":"<p>\u8f6f\u4ef6\u53d1\u5c55\u592a\u5feb\uff0c3year half life\uff0c\u73b0\u5728\u77e5\u9053\u7684\u77e5\u8bc6\u57283\u5e74\u4e4b\u5185\u6709\u4e00\u534a\u6ca1\u4ef7\u503c\u3002\u56e0\u4e3a\u8f6f\u4ef6\u53d1\u5c55\u592a\u5feb\u3002\u8fd9\u662f\u5bf9\u4e13\u4e1a\u9886\u57df\u77e5\u8bc6\u6765\u8bf4\uff0c\u4f46\u662f\u5bf9\u8f6f\u4ef6\u5de5\u7a0b\u57fa\u672c\u65b9\u6cd5\u662fforever\u7684\uff0c\u8d2f\u7a7f\u804c\u4e1a\u751f\u6daf\u3002eg.\u8f6f\u4ef6\u5de5\u7a0b\u600e\u4e48\u7ec4\u7ec7\uff0c\u600e\u4e48\u7ba1\u7406</p>"},{"location":"SE/chapter7/#2","title":"2 \u57fa\u672c\u539f\u5219","text":"<ul> <li>\u654f\u6377\u5316\uff1a\u53bb\u9664\u4e00\u5207\u5197\u4f59\u7684\u4e1c\u897f\uff0c\u82b1\u54e8\u7684\u4e1c\u897f\u6211\u4eec\u4e0d\u9700\u8981\u3002</li> <li>\u6bcf\u4e00\u6b65\u5173\u6ce8\u8d28\u91cf</li> <li>\u8981\u505a\u9002\u914d\uff1a\u4e0d\u80fd\u751f\u642c\u786c\u5957\uff0c\u6211\u4eec\u8981\u6d3b\u5b66\u6d3b\u7528\uff0c\u5bf9\u4e0d\u540c\u7684\u95ee\u9898\u505a\u9002\u5e94\u6027\u7684\u6539\u9020\uff0c\u63d0\u9ad8\u6548\u7387</li> <li>\u6709\u6548\u56e2\u961f\uff1a\u4f01\u4e1a\u6587\u5316\u505a\u597d</li> <li>\u6c9f\u901a\u534f\u8c03\u673a\u5236</li> <li>\u7ba1\u7406\u53d8\u5316\uff1a\u5efa\u7acb\u66f4\u6539\u6d41\u7a0b</li> <li>\u8bc4\u4ef7\u98ce\u9669</li> <li>\u8981\u6709\u7528\u6237\u601d\u7ef4\uff1a\u7ed9\u5176\u4ed6\u4f7f\u7528\u8005\u63d0\u4f9b\u4ef7\u503c</li> </ul>"},{"location":"blockchain/course/lesson1/principle/","title":"Principle of blockchain","text":"<p>\u7528hash\u6821\u9a8c(hash -&gt; 108 -&gt; 205 -&gt; 308...) \u4e00\u4f46\u66f4\u6539\uff0chash\u7ed3\u679c\u51fa\u9519\uff0c\u653e\u5f03\u8be5block\u4ee5\u53ca\u540e\u9762\u5168\u90e8\u7684block </p> <p>\u51fa\u9519\u7684\u5730\u65b9\u548c\u5176\u4ed6\u7684block\u7684tx\u8fdb\u884c\u6bd4\u5bf9 </p>"},{"location":"blockchain/course/lesson1/principle/#_1","title":"\u5171\u8bc6\u7b97\u6cd5","text":"<p>POW: Proof of Work \u8d5a\u53d6\u6536\u76ca\uff0c\u8c01\u6700\u5148\u7b97\u51fa\u6765hash\uff0c\u8c01\u5c31\u53ef\u4ee5\u6253\u5305block\u3002\u9a8c\u8bc1\u4ea4\u6613\u540e\u6269\u6563\u8be5\u4ea4\u6613\u5230\u5176\u4ed6\u8282\u70b9\u3002  </p>"},{"location":"blockchain/solidity/ERC-20/","title":"ERC-20","text":""},{"location":"blockchain/solidity/ERC-20/#repoyukijuda111erc20-foundry-githubcom","title":"REPO\uff1aYukiJuda111/ERC20-foundry (github.com)","text":"<p>EIP: ethereum improvement proposals</p> <p>ERC: ethereum request for comments</p> <p>ERC20: one of Tokens standards</p> <p>\u67e5\u770b\u6240\u6709EIP  ERC | Ethereum Improvement Proposals</p> <p>ERC20: \u521d\u59cb\u4ee3\u5e01\u6240\u6709\u8005\u662fconstructor\u4e2d\u7684\u8c03\u7528_mint\u7684msg.sender</p> <p>\u4e00\u5f00\u59cb\u6240\u6709\u4ee3\u5e01\u57280\u5730\u5740\uff0c\u901a\u8fc7_mint\u8c03\u7528\u5c06\u4ee3\u5e01transfer\u5230msg.sender</p> <pre><code>constructor(uint256 initialSupply) ERC20(\"MyToken\", \"MTK\") {\n    _mint(msg.sender, initialSupply);\n}\n</code></pre> <pre><code>function _mint(address account, uint256 value) internal {\n    if (account == address(0)) {\n        revert ERC20InvalidReceiver(address(0));\n    }\n    _update(address(0), account, value);\n}\n</code></pre>"},{"location":"blockchain/solidity/EVM/","title":"EVM overview","text":"<p>contract.sol -&gt; solc compiler -&gt; contract.bin &amp; contract.abi  EVM\u8d1f\u8d23\u7f16\u8bd1\u5408\u7ea6.sol\u6587\u4ef6\uff0c\u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6.bin\u548c\u63a5\u53e3\u6587\u4ef6.abi</p> <p><pre><code>Transactions:\n    - Nonce: tx count for the account\n    - GasPrice: the price of gas\n    - GasLimit: the maximum amount of gas\n    - To: the address of the recipient\n    - Value: the amount of ether to send\n    - Data: what to send to address\n    - v, r, s: the signature of the transaction\n</code></pre> <pre><code>Contract Deployment:\n    - To: empty\n    - Data: contract init code + contract bytecode\n</code></pre> <pre><code>Function Call:\n    - To: address that the tx is sent to\n    - Data: what to send to the To address\n</code></pre></p>"},{"location":"blockchain/solidity/EVM/#data-field-of-callfunction-callencode","title":"\u901a\u8fc7data field of call\u5b9e\u73b0function call\u9700\u8981encode\uff1a","text":"<ul> <li>function selector</li> <li>parameters</li> </ul>"},{"location":"blockchain/solidity/EVM/#function-selector","title":"function selector","text":"<p>The \"function selector\" is the first 4 bytes of the keccak256 hash of the function signature. The \"function signature\" is a string that defines the function name &amp; parameters. <pre><code>// example of function signature:\n\"transfer(address,uint256)\"\n// example of function selector:\n0xa9059cbb(encode the function signature and take the first 4 bytes)\n</code></pre></p> <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ncontract CallAnything {\n    address public s_someAddr;\n    uint256 public s_amount;\n    function transfer(address someAddr, uint256 amount) public {\n        s_someAddr = someAddr;\n        s_amount = amount;\n    }\n\n    function getSelectorOne() public  pure returns (bytes4 selector) {\n        return bytes4(keccak256(bytes(\"transfer(address,uint256)\")));\n    }\n\n    function getDataToCallTransfer(address someAddr, uint256 amount) public pure returns (bytes memory) {\n        return abi.encodeWithSelector(getSelectorOne(), someAddr, amount);\n    }\n\n    function callTransferFunctionWithBinary(address someAddr, uint256 amount) public returns(bytes4,bool){\n        (bool success,bytes memory returnData) = address(this).call(getDataToCallTransfer(someAddr, amount));\n        return (bytes4(returnData), success);\n    }\n}\n</code></pre>"},{"location":"blockchain/solidity/raffle/","title":"Raffle","text":""},{"location":"blockchain/solidity/raffle/#repoyukijuda111raffle-foundry-githubcom","title":"REPO:YukiJuda111/Raffle-foundry (github.com)","text":"<p>deployed on sepolia testnet:<code>0x8A689464b4ADf9AeB584ABedC665aF525B4036F3</code></p> <p>Raffle | Address 0x8a689464b4adf9aeb584abedc665af525b4036f3 | Etherscan</p>"},{"location":"blockchain/solidity/raffle/#vrf","title":"VRF","text":"<pre><code>vrfCoordinatorInterfaceV2.requestRandomWords-&gt;chainLink nodes-&gt;(call)fufillRandomwords\n</code></pre> <p>RequestRandomWords</p> <p>The chainlink nodes listen the event edited by requestRandomWords function call</p> <pre><code>function performUpkeep(bytes calldata ) external override {\n   (bool upkeepNeeded,) = checkUpkeep(bytes(\"\"));\n   if(!upkeepNeeded){\n        revert Raffle__NotPerformUpkeep(address(this).balance, s_players.length, uint256(s_raffleState));\n   }\n    // Request the RNG\n    // https://docs.chain.link/vrf/v2/subscription/supported-networks\n    s_raffleState = RaffleState.CALCULATING;\n\n    uint256 requestId = i_vrfCoordinator.requestRandomWords(\n        i_gasLane, // gas lane\n        i_subscriptionId,\n        REQUEST_CONFIRMATIONS,\n        i_callbackGasLimit,\n        NUM_WORDS\n    );\n    emit RequestedRaffleWinner(requestId);\n}\n</code></pre> <p>fufillRandomwords(called by chainlink nodes)</p> <p>ChainlinkVRF</p> <p>override the function provided in VrfCoordinatorV2Interface</p> <pre><code>function fulfillRandomWords(\n    uint256 ,\n    uint256[] memory randomWord\n) internal override {\n    uint256 winnerIndex = randomWord[0] % s_players.length;\n    s_recentWinner = s_players[winnerIndex];\n    s_raffleState = RaffleState.OPEN;\n    s_lastTimeStamp = block.timestamp;\n    s_players = new address payable[](0);\n    emit PickedWinner(s_recentWinner);\n\n    (bool success, ) = s_recentWinner.call{value: address(this).balance}(\"\");\n    if(!success) {\n        revert Raffle__TranferFailed();\n    }\n}\n</code></pre>"},{"location":"blockchain/solidity/raffle/#automation","title":"Automation","text":"<p>Override <code>checkUpkeep</code> to set the condition.</p> <pre><code>function checkUpkeep(\n    bytes memory \n)\n    public\n    view\n    override\n    returns (bool upkeepNeeded, bytes memory /* performData */)\n{\n    bool timeSatisfied = (block.timestamp - s_lastTimeStamp) &gt; i_interval;\n    bool raffleOpen = s_raffleState == RaffleState.OPEN;\n    bool hasPlayers = s_players.length &gt; 0;\n    bool hasBalance = address(this).balance &gt; 0;\n    bool doUpkeep = timeSatisfied &amp;&amp; raffleOpen &amp;&amp; hasPlayers &amp;&amp; hasBalance;\n    return (doUpkeep, \"\");\n}\n</code></pre> <p>Override <code>performUpkeep</code> to set the performing function called by chainlink nodes.</p> <p>The front end to do upkeep : Automation | Chainlink</p>"},{"location":"blockchain/solidity/NFT/NFT/","title":"NFT","text":""},{"location":"blockchain/solidity/NFT/NFT/#repofoundry-nft","title":"repo:foundry-nft","text":"<p>\u672c\u8d28\u662fID\u5230\u62e5\u6709\u8005\u5730\u5740\u7684\u6620\u5c04<code>mapping (uint256 =&gt; address) public tokenOwner;</code></p> <p>\u7528metadata\u6765\u63cf\u8ff0NFT\u7684\u5c5e\u6027\uff0c\u6bd4\u5982\u56fe\u7247\u3001\u97f3\u9891\u3001\u89c6\u9891\u7b49\u3002NFT\u7684metadata\u53ef\u4ee5\u5b58\u50a8\u5728\u94fe\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u5b58\u50a8\u5728\u94fe\u4e0b\u3002\u5b58\u50a8\u5728\u94fe\u4e0a\u7684metadata\u53ef\u4ee5\u901a\u8fc7IPFS\u6765\u5b9e\u73b0\u3002</p> <p>URI\uff1aNFT\u7684metadata\u7684URI\uff0c\u53ef\u4ee5\u662f\u94fe\u4e0a\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u94fe\u4e0b\u7684\u3002\u94fe\u4e0a\u7684URI\u53ef\u4ee5\u901a\u8fc7IPFS\u6765\u5b9e\u73b0\u3002</p> <p>IPFS: \u5c06\u81ea\u5df1\u7684File\u901a\u8fc7hash\u7684\u5230\u4e00\u4e2a\u72ec\u7279\u7684URI\uff0c\u7136\u540e\u5c06\u8fd9\u4e2aURI\u5b58\u50a8\u5728\u81ea\u5df1\u7684IPFS\u8282\u70b9\u4e0a\u3002\u8fd9\u6837\uff0c\u5176\u4ed6\u4eba\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2aURI\u6765\u8bbf\u95ee\u81ea\u5df1\u7684File\u4e86\u3002</p>"},{"location":"blockchain/solidity/NFT/NFT/#erc-721","title":"ERC-721 \u6838\u5fc3\u51fd\u6570:","text":"<p><code>_safeMint(msg.sender, tokenId)</code>\uff1a\u7ed9msg.sender\u94f8\u9020\u4e00\u4e2atokenId\u7684NFT\u3002 <code>tokenURI(tokenId)</code>\uff1a\u8fd4\u56detokenId\u7684metadata\u7684URI\u3002 <code>_baseURI()</code>\uff1a\u8fd4\u56demetadata\u7684baseURI, \u7528\u4e8e\u62fc\u63a5tokenURI(tokenId)\u3002</p>"},{"location":"blockchain/solidity/NFT/NFT/#sepoliadoggie-nft","title":"\u5728sepolia\u4e0a\u90e8\u7f72\u7684Doggie NFT","text":""},{"location":"blockchain/solidity/NFT/NFT/#local-hostmood-nft","title":"\u5728Local host\u4e0a\u90e8\u7f72\u7684Mood NFT","text":""},{"location":"blockchain/solidity/StableCoin/","title":"Stable Coin","text":"<p>\u8fd9\u91cc\u8bb0\u5f55\u4e86\u6211\u6784\u5efa\u4e00\u4e2a\u7c7b\u4f3c\u4e8eDAI\u7684stable coin\u7684\u5168\u8fc7\u7a0b</p>"},{"location":"blockchain/solidity/StableCoin/#1-stable-coin","title":"1. Stable Coin\u539f\u7406","text":"<p>(stable coin\u539f\u7406)[./StableCoin\u539f\u7406.md]</p>"},{"location":"blockchain/solidity/StableCoin/#2","title":"2. \u7a33\u5b9a\u5e01\u5408\u7ea6","text":"<p>(stable coin\u5408\u7ea6)[./\u7a33\u5b9a\u5e01\u5408\u7ea6.md]</p>"},{"location":"blockchain/solidity/StableCoin/StableCoin/","title":"\u7c7b\u4f3c\u4e8eDAI\u7684stable coin\u6784\u5efa","text":"<p>\u8bb0\u5f55\u4e86\u6211\u6784\u5efa\u7c7b\u4f3c\u4e8eDAI\u7684stable coin\u7684\u5168\u6d41\u7a0b\u3002</p>"},{"location":"blockchain/solidity/StableCoin/StableCoin/#1","title":"1 \u7a33\u5b9a\u5e01\u6982\u8ff0","text":"<p>\u9879\u76ee\u4e2d\u7684\u7a33\u5b9a\u5e01\u662f\u53c2\u8003\u4e86DAI\uff0c1:1\u4e0e\u7f8e\u5143\u6302\u94a9\u7684\u7a33\u5b9a\u5e01\u3002\u7528\u4e86liquidate\u7684\u7b97\u6cd5\u6765\u4fdd\u8bc11:1\u7684\u7a33\u5b9a\u6027\u3002\u5176\u4e2dliquidate\u7b97\u6cd5\u4e5f\u662f\u8be5\u9879\u76ee\u4e2d\u7684\u91cd\u70b9\uff0c\u5373\u5f53\u7528\u6237\u7684\u8d28\u62bc\u7269\u4e0d\u8db3\u4ee5\u7ef4\u6301\u5176\u53d6\u51fa\u7684stable coin\u7684\u6570\u91cf\u65f6(\u4f4e\u4e8ehealth factor)\uff0c\u5219\u5176\u4ed6\u7528\u6237\u53ef\u4ee5\u5bf9\u8be5\u7528\u6237\u8fdb\u884c\u6e05\u7b97\uff0c\u5373\u901a\u8fc7\u8f83\u4fbf\u5b9c\u7684\u4ef7\u683c\u8d2d\u4e70\u4f4e\u4e8ehealth factor\u7528\u6237\u7684\u8d28\u62bc\u7269\uff0c\u4ee5\u6b64\u6765\u7ef4\u6301\u6574\u4e2aDeFi\u59cb\u7ec8\u4fdd\u6301over-collateralized(\u8d28\u62bc\u7269\u7684\u4ef7\u503c &gt; \u5df2\u7ecf\u94f8\u9020\u7684\u7a33\u5b9a\u5e01\u7684\u4ef7\u503c)\u3002\u901a\u8fc7\u7ef4\u6301\u6574\u4e2aDeFi\u7684over-collateralized\u7684\u6027\u8d28\uff0c\u6765\u7ef4\u63011:1\u7684\u7a33\u5b9a\u6027\u3002liquidate\u51fd\u6570\u4f1a\u5728\u540e\u7eed\u5c55\u5f00\u4ecb\u7ecd\u3002</p>"},{"location":"blockchain/solidity/StableCoin/StableCoin/#2-erc20","title":"2 \u6784\u5efaERC20","text":"<p>\u4ee3\u7801\uff1ahttps://github.com/YukiJuda111/StableCoin/blob/main/src/DecentralizedStableCoin.sol</p> <p>\u7528\u4e86openzepplin\u5e93\u6765\u5feb\u901f\u6784\u5efaERC20\uff0c\u7a33\u5b9a\u5e01\u4e3b\u8981\u529f\u80fd\u662f\u63d0\u4f9b<code>mint</code>\u548c<code>burn</code>\u63a5\u53e3\uff0c\u4f9b<code>DscEngine</code>\u4f7f\u7528\u3002\u540e\u7eed\u79f0\u8be5ERC20 token\u4e3aDSC\u3002</p> <ul> <li><code>mint</code>: \u5728\u903b\u8f91\u4e0a\u8d1f\u8d23\u94f8\u9020token\uff0c<code>_mint</code>\u8c03\u7528\u8d1f\u8d23\u5c06token\u4ece<code>0x0</code>\u53d1\u9001\u5230\u6307\u5b9a\u5730\u5740(user)</li> </ul> <pre><code>function mint(address _to, uint256 _amount) external onlyOwner returns (bool) {\n    if (_to == address(0)) {\n        revert DecentralizedStableCoin__NotZeroAddress();\n    }\n    if (_amount &lt;= 0) {\n        revert DecentralizedStableCoin__MustBeMoreThanZero();\n    }\n    _mint(_to, _amount);\n    return true;\n}\n</code></pre> <ul> <li><code>burn</code>: \u5728\u903b\u8f91\u4e0a\u8d1f\u8d23\u9500\u6bc1token\uff0c<code>_burn</code>\u8c03\u7528\u672c\u8d28\u4e0a\u8bb2<code>msg.sender</code>\u7684token\u8fd8\u7ed9<code>0x0</code></li> </ul> <pre><code>function mint(address _to, uint256 _amount) external onlyOwner returns (bool) {\n    if (_to == address(0)) {\n        revert DecentralizedStableCoin__NotZeroAddress();\n    }\n    if (_amount &lt;= 0) {\n        revert DecentralizedStableCoin__MustBeMoreThanZero();\n    }\n    _mint(_to, _amount);\n    return true;\n}\n</code></pre>"},{"location":"blockchain/solidity/StableCoin/StableCoin/#3-dscenginedefi","title":"3 \u6784\u5efaDscEngine(Defi)","text":"<p>\u4ee3\u7801\uff1ahttps://github.com/YukiJuda111/StableCoin/blob/main/src/DSCEngine.sol</p> <p>\u4e3a\u4e86\u5b9e\u73b0DscEngine\uff0c\u8981\u5b9e\u73b0\u4ee5\u4e0b\u6838\u5fc3\u529f\u80fd:</p> <ul> <li>\u8d28\u62bctoken\uff0c\u5e76\u6839\u636e\u8d28\u62bc\u7269\u7684\u4ef7\u503c\u94f8\u9020DSC</li> <li>\u53d6\u56de\u8d28\u62bc\u7684token\uff0c\u5e76\u9500\u6bc1\u76f8\u5e94\u7684DSC</li> <li>\u6e05\u7b97liquidate\uff0c\u4ee5\u6b64\u6765\u7ef4\u6301\u6574\u4e2aDefi\u7684\u6b63\u5e38\u8fd0\u4f5c</li> </ul>"},{"location":"blockchain/solidity/StableCoin/StableCoin/#31","title":"3.1 \u6784\u9020\u51fd\u6570","text":"<p>\u9700\u8981\u4f20\u5165:</p> <ul> <li>\u4f5c\u4e3a\u8d28\u62bc\u7269\u7684token\u5730\u5740(weth\u548cwbtc\u7684\u5730\u5740)</li> <li>\u5582\u4ef7\u5730\u5740: \u7528\u4e8e\u6362\u7b97\u8d28\u62bc\u7269token\u548c\u7f8e\u5143\u7684\u6c47\u7387</li> <li>dsc\u5730\u5740(\u521a\u521a\u6784\u5efa\u7684ERC20\u7684\u5730\u5740)</li> </ul> <pre><code>constructor(address[] memory tokenAddresses, address[] memory priceFeedAddresses, address dscAddress) {\n    if (tokenAddresses.length != priceFeedAddresses.length) {\n        revert DSCEngine__TokenAddressAndPriceFeedAddressMustBeEqualLength();\n    }\n    for (uint256 i = 0; i &lt; tokenAddresses.length; i++) {\n        s_priceFeeds[tokenAddresses[i]] = priceFeedAddresses[i];\n        s_collateralTokens.push(tokenAddresses[i]);\n    }\n    i_dsc = DecentralizedStableCoin(dscAddress);\n}\n</code></pre>"},{"location":"blockchain/solidity/StableCoin/StableCoin/#32-healthfactor","title":"3.2 HealthFactor","text":"<p>\u68c0\u6d4b\u7528\u6237\u7684health factor\u662f\u6574\u4e2a\u7a33\u5b9a\u5e01DeFi\u80fd\u8fd0\u4f5c\u7684\u6838\u5fc3\u3002\u5f53\u7528\u6237\u7684\u7684health factor\u4f4e\u4e8e\u4e00\u5b9a\u9608\u503c\u65f6\uff0c\u6211\u4eec\u5c31\u8981\u8ba9\u5176\u4ed6\u7528\u6237\u5bf9\u5176\u8fdb\u884cliquidate\u3002</p> <p>health factor\u5177\u4f53\u800c\u8a00\u5c31\u662f\u7528\u6237\u94f8\u9020\u7684DSC\u548c\u8d28\u62bc\u8fdb\u53bb\u7684token\u7684\u6bd4\u503c\uff0c\u5728\u8fd9\u4e2a\u5408\u7ea6\u4e2d\u8bbe\u5b9a\u4e3a1:2\u6765\u6ee1\u8db3\u6574\u4e2aDefi\u59cb\u7ec8\u4fdd\u6301over-collateralized\uff0c\u4f8b\u5982\u8d28\u62bc$200\u4ef7\u503c\u7684token\u5219\u6700\u591a\u53ef\u4ee5\u5728defi\u4e2d\u94f8\u9020$100\u4ef7\u503c\u7684DSC\u3002\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>function _healthFactor(address user) private view returns (uint256) {\n    // total DSC minted\n    // total collateral deposited\n    (uint256 totalDscMinted, uint256 totalCollateralInUsd) = _getAccountInformation(user);\n    if (totalDscMinted == 0) return type(uint256).max; // wtf\n    uint256 collateralAdjustedForThreshold = totalCollateralInUsd * LIQUIDATION_THRESHOLD / LIQUIDATION_PRECISION;\n    // 200% over-collateralized\n    return (collateralAdjustedForThreshold * PRECISON) / totalDscMinted;\n}\n</code></pre> <p>\u4e3a\u4e86\u8ba1\u7b97\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684<code>totalCollateralInUsd</code>\uff0c\u9700\u8981\u4f7f\u7528chainlink\u7684\u9884\u8a00\u673a:https://docs.chain.link/data-feeds/price-feeds/addresses?network=ethereum&amp;page=1</p> <pre><code>function getUsdValue(address token, uint256 amount) public view returns(uint256) {\n    AggregatorV3Interface priceFeed = AggregatorV3Interface(s_priceFeeds[token]);\n    ( , int price, , , ) = priceFeed.stablePriceCheck();\n    // \u4ecechainlink\u8fd4\u56de\u7684\u4ef7\u683c\u662f8\u4f4d\u5c0f\u6570\n    return uint256(price) * ADDITIONAL_FEED_PRECISION * amount / PRECISON;\n}\n</code></pre> <p>\u8fd8\u8981\u6ce8\u610f<code>if (totalDscMinted == 0) return type(uint256).max;</code>\u3002\u5373\u7528\u6237\u53ea\u9009\u62e9\u5b58\u5165\u8d28\u62bc\u7269\u4e0d\u53bb\u94f8\u9020DSC\u8fd9\u5f53\u7136\u4e5f\u662f\u53ef\u884c\u7684\uff0c\u8981\u7279\u6b8a\u5224\u65ad\u3002\u8fd9\u662f\u901a\u8fc7\u540e\u7eedfuzz test\u627e\u5230\u7684bug\uff0c\u4f1a\u5728\u540e\u9762\u518d\u6b21\u63d0\u5230\u3002</p>"},{"location":"blockchain/solidity/StableCoin/StableCoin/#32-msgsenderdsc","title":"3.2 \u5b58\u5165\u8d28\u62bc\u7269\u5e76\u7ed9msg.sender\u94f8\u9020DSC","text":""},{"location":"blockchain/solidity/StableCoin/StableCoin/#321","title":"3.2.1 \u5b58\u5165\u8d28\u62bc\u7269","text":"<p>\u903b\u8f91\u6bd4\u8f83\u7b80\u5355\uff0c\u4e0d\u8d58\u8ff0\u3002\u6709\u4e00\u884c<code>_revertIfHealthFactorIsBroken(msg.sender);</code>\u5373\u68c0\u6d4b\u7528\u6237\u7684health factor\uff0c\u6309\u7406\u6765\u8bf4\u5b58\u5165\u8d28\u62bc\u7269\u53ea\u4f1a\u8ba9\u7528\u6237\u7684health factor\u66f4\u5065\u5eb7\uff0c\u53ef\u80fd\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u5220\u4e86\u4f1a\u66f4\u7701gas fee\u3002\u4f46\u51fa\u4e8e\u5b89\u5168\u6027\u8003\u8651\u8fd8\u662f\u6dfb\u52a0\u3002</p> <pre><code>/**\n * @param tokenCollateral \u4f5c\u4e3a\u62b5\u62bc\u7269\u7684token\u7684\u5730\u5740\n * @param amoutCollateral \u62b5\u62bc\u7269\u7684\u6570\u91cf\n */\nfunction depositCollateral(address tokenCollateral, uint256 amoutCollateral)\n    public\n    moreThanZero(amoutCollateral)\n    isAllowedToken(tokenCollateral)\n    nonReentrant // \u4e0d\u53ef\u91cd\u5165(more gas fee, safer)\n{\n    s_collateralDeposited[msg.sender][tokenCollateral] += amoutCollateral;\n    emit CollateralDeposited(msg.sender, tokenCollateral, amoutCollateral);\n    bool success = IERC20(tokenCollateral).transferFrom(msg.sender, address(this), amoutCollateral);\n    if(!success) {\n        revert DSCEngine__TransferFailed();\n    }\n    _revertIfHealthFactorIsBroken(msg.sender);\n    // console.log(\"now balance: \", IERC20(tokenCollateral).balanceOf(address(this)));\n}\n</code></pre>"},{"location":"blockchain/solidity/StableCoin/StableCoin/#322-mint-dsc","title":"3.2.2 mint DSC","text":"<p>\u4e5f\u662f\u6ce8\u610f\u68c0\u67e5health factor\u5373\u53ef\u3002</p> <pre><code>/**\n * @param amountDscToMint \u94f8\u9020\u7684DSC\u6570\u91cf\n * @notice collateralization value &gt; minted DSC value\n */\nfunction mintDsc(uint256 amountDscToMint)\n    public \n    moreThanZero(amountDscToMint)\n    nonReentrant\n{\n    s_dscMinted[msg.sender] += amountDscToMint;\n    // if minted too much, revert(e.g. $150 DSC, $100 collateral)\n    _revertIfHealthFactorIsBroken(msg.sender);\n    bool minted = i_dsc.mint(msg.sender, amountDscToMint);\n    if(!minted){\n        revert DSCEngine__MintFailed();\n    }\n}\n</code></pre>"},{"location":"blockchain/solidity/StableCoin/StableCoin/#323","title":"3.2.3 \u6574\u5408\u903b\u8f91","text":"<pre><code>/**\n * @param tokenCollateralAddress \u8981\u5b58\u7684token\u7684\u5730\u5740\n * @param amountCollateral \u8981\u5b58\u7684token\u6570\u91cf\n * @param amountDscToMint \u94f8\u9020DSC\u7684\u6570\u91cf\n */\nfunction depositCollateralAndMintDsc\n(\n    address tokenCollateralAddress,\n    uint256 amountCollateral,\n    uint256 amountDscToMint\n) external {\n    depositCollateral(tokenCollateralAddress, amountCollateral);\n    mintDsc(amountDscToMint);\n}\n</code></pre>"},{"location":"blockchain/solidity/StableCoin/StableCoin/#33-dsc","title":"3.3 \u53d6\u56de\u8d28\u62bc\u7269\u5e76\u9500\u6bc1DSC","text":""},{"location":"blockchain/solidity/StableCoin/StableCoin/#331","title":"3.3.1 \u53d6\u56de\u8d28\u62bc\u7269","text":"<p>\u8fd9\u91cc\u540c\u6837\u9700\u8981\u5173\u6ce8health factor\u3002</p> <pre><code>//\u53d6\u56de\u8d28\u62bc\u7269\uff0c\u9700\u8981health factor &gt; 1\nfunction redeemCollateral(address tokenCollateralAddress, uint256 amountCollateral)\n    public \n    moreThanZero(amountCollateral)\n    isAllowedToken(tokenCollateralAddress)\n    nonReentrant\n{\n    _redeemCollateral(tokenCollateralAddress, amountCollateral, msg.sender, msg.sender);\n    _revertIfHealthFactorIsBroken(msg.sender);\n}\n</code></pre> <pre><code>function _redeemCollateral(address tokenCollateralAddress, uint256 amountCollateral,\naddress from, address to) private {\n    s_collateralDeposited[from][tokenCollateralAddress] -= amountCollateral;\n    emit CollateralRedeemed(from, to, amountCollateral, tokenCollateralAddress);\n    bool success = IERC20(tokenCollateralAddress).transfer(to, amountCollateral);\n    if(!success) {\n        revert DSCEngine__TransferFailed();\n    }\n}\n</code></pre>"},{"location":"blockchain/solidity/StableCoin/StableCoin/#332-dsc","title":"3.3.2 \u9500\u6bc1DSC","text":"<p>\u8003\u8651\u5230\u9500\u6bc1DSC\u53ea\u4f1a\u8ba9health factor\u66f4\u5065\u5eb7\uff0c\u56e0\u6b64check health factor\u8fd9\u4e00\u6b65\u4e5f\u53ef\u80fd\u662f\u975e\u5fc5\u8981\u7684\u3002\u51fa\u4e8e\u5b89\u5168\u8003\u8651\u8fd8\u662f\u52a0\u4e0a\u3002</p> <pre><code>function burnDsc(uint256 amountDscToBurn)\n    public \n    moreThanZero(amountDscToBurn)\n{\n    _burnDsc(amountDscToBurn, msg.sender, msg.sender);\n    _revertIfHealthFactorIsBroken(msg.sender); // I dont think this is necessary\n}\n</code></pre> <pre><code>function _burnDsc(uint256 amountDscToBurn, address onBehalfOf, address dscFrom) private {\n    s_dscMinted[onBehalfOf] -= amountDscToBurn;\n    bool success = i_dsc.transferFrom(dscFrom, address(this), amountDscToBurn);\n    if(!success) {\n        revert DSCEngine__TransferFailed();\n    }\n    i_dsc.burn(amountDscToBurn); // only owner can burn\n}\n</code></pre>"},{"location":"blockchain/solidity/StableCoin/StableCoin/#333","title":"3.3.3 \u6574\u5408\u903b\u8f91","text":"<pre><code>/**\n * @param tokenCollateralAddress \u8d28\u62bc\u7269\u7684\u5730\u5740\n * @param amountCollateral \u8d28\u62bc\u7269\u7684\u6570\u91cf\n * @param amountDscToBurn \u9500\u6bc1\u7684DSC\u6570\u91cf\n */\nfunction redeemCollateralForDsc(\n    address tokenCollateralAddress,\n    uint256 amountCollateral, uint256 amountDscToBurn\n) external {\n    burnDsc(amountDscToBurn);\n    redeemCollateral(tokenCollateralAddress, amountCollateral);\n}\n</code></pre>"},{"location":"blockchain/solidity/StableCoin/StableCoin/#34","title":"3.4 \u6e05\u7b97","text":"<p>\u5148\u770b\u6574\u4e2a\u4ee3\u7801\uff0c\u5927\u81f4\u903b\u8f91\u5c31\u662funder-collateralized\u7684\u7528\u6237\u4f1a\u88ab\u5176\u4ed6\u7528\u6237\u6e05\u7b97\uff0c\u5176\u4ed6\u7528\u6237\u901a\u8fc7\u81ea\u5df1\u652f\u4ed8\u4e00\u5b9a\u6570\u989d\u7684DSC\u6765\u9500\u6bc1\u88ab\u6e05\u7b97\u7528\u6237\u7684DSC\uff0c\u5e76\u83b7\u5f97\u88ab\u6e05\u7b97\u7528\u6237\u7684\u8d28\u62bc\u7269(\u4f1a\u670910%\u7684bonus\u6765\u9a71\u52a8\u4ed6\u4eec\u6e05\u7b97)\u3002</p> <p>\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4fdd\u6301\u6574\u4e2aDefi\u662fover-collateralized\u7684(\u5408\u7ea6\u4e2d\u5b58\u50a8\u7684\u8d28\u62bc\u7269\u7684\u4ef7\u503c &gt; minted DSC\u7684\u4ef7\u503c)\u3002\u6bd4\u5982\u88ab\u6e05\u7b97\u7528\u6237\u8d28\u62bc\u4e86$200\u7684eth\u6765\u83b7\u5f97$100\u7684DSC\uff0c\u4f46\u662f\u8fc7\u6bb5\u65f6\u95f4\u4ed6\u8d28\u62bc\u7684eth\u8d2c\u503c\u5230\u4e86$180\uff0c\u8fd9\u65f6\u6839\u636ehealth factor\u7684\u8ba1\u7b97\uff0c\u4ed6\u5df2\u7ecfunder-collateralized\u4e86\uff0c\u5176\u4ed6\u7528\u6237\u53ef\u4ee5\u6e05\u7b97\u3002\u53ef\u4ee5\u770b\u5230\u6574\u4e2a\u7cfb\u7edf\u76ee\u524d\u6709$10\u7684under-collateralized\u9700\u8981\u6062\u590d\uff0c\u90a3\u4e48\u5176\u4ed6\u7528\u6237\u652f\u4ed8\u4e86$10\u7684DSC,\u5c31\u53ef\u4ee5\u83b7\u5f97\u5bf9\u5e94\u4ef7\u503c$10*1.1\u7684eth\uff0c\u5e76\u9500\u6bc1\u4e86\u88ab\u6e05\u7b97\u7528\u6237$10\u7684DSC\uff0c\u6b64\u65f6\u88ab\u6e05\u7b97\u7528\u6237\u53c8\u56de\u5230\u4e86\u5065\u5eb7\u72b6\u6001(\u8d28\u62bc$180\u7684eth\uff0c\u8fd8\u6709$90\u7684DSC\u672a\u88ab\u9500\u6bc1)\u3002</p> <pre><code>// \u68c0\u6d4b\u67d0\u4eba\u662f\u5426under-collateralized\uff0c\u5982\u679c\u662f\uff0c\u5c31\u4ee5\u6253\u6298\u7684\u5f62\u5f0fliquidate\n/**\n * \n * @param collateral erc20 token address\n * @param user under-collateralized user(health factor &lt; 1)\n * @param debtToCover The amount of DSC you want to burn to improve the user's health factor\n * @notice \u5fc5\u5907\u6761\u4ef6: over-collateralized(\u5408\u7ea6\u4e2d\u5b58\u50a8\u7684\u8d28\u62bc\u7269\u7684\u4ef7\u503c &gt; minted DSC\u7684\u4ef7\u503c)\n */\nfunction liquidate(address collateral, address user, uint256 debtToCover) \n    external \n    moreThanZero(debtToCover)\n    isAllowedToken(collateral)\n    nonReentrant\n{\n    uint256 startingUserHealthFactor = _healthFactor(user);\n    if(startingUserHealthFactor &gt;= MIN_HEALTH_FACTOR) {\n        revert DSCEngine__HealthFactorFine();\n    }\n\n    // \u62ff\u8d70\u8d28\u62bc\u7269\n    uint256 tokenAmountFromDebtCovered = getTokenAmountFromUsd(collateral, debtToCover);\n    // \u7ed9liquidator 10% bonus\n    uint256 bonusCollateral = (tokenAmountFromDebtCovered * LIQUIDATION_BONUS) / LIQUIDATION_PRECISION;\n    uint256 totalCollateralToRedeem = tokenAmountFromDebtCovered + bonusCollateral;\n    _redeemCollateral(collateral, totalCollateralToRedeem, user, msg.sender);\n\n    // \u9500\u6bc1DSC,msg.sender\u652f\u4ed8,user\u7684DSC\u88ab\u9500\u6bc1\n    _burnDsc(debtToCover, user, msg.sender);\n\n    uint256 endingUserHealthFactor = _healthFactor(user);\n    if(endingUserHealthFactor &lt;= startingUserHealthFactor) {\n        revert DSCEngine__HealthFactorNotImproved();\n    }\n    _revertIfHealthFactorIsBroken(msg.sender);\n}\n</code></pre> <p>\u8fd9\u91cc\u5176\u5b9e\u662f\u4e00\u4e2a\u6bd4\u8f83\u590d\u6742\u7684\u6a21\u578b\uff0c\u6211\u4eec\u4e0d\u80fd\u4fdd\u8bc1\u8fd9\u4e2a\u6a21\u578b\u80fd\u591f\u59cb\u7ec8\u4fdd\u6301over-collateralized\uff0c\u4f5c\u4e3a\u4e00\u4e2aDefi\u9700\u8981\u901a\u8fc7\u5b89\u5168\u5ba1\u8ba1\u3002\u8fd9\u91cc\u7b80\u5355\u505a\u4e86Invariant\u6d4b\u8bd5\uff0c\u4fdd\u8bc1\u6a21\u578b\u59cb\u7ec8\u6709\u5408\u7ea6\u4e2d\u5b58\u50a8\u7684\u8d28\u62bc\u7269\u7684\u4ef7\u503c &gt; minted DSC\u7684\u4ef7\u503c\u3002</p>"},{"location":"blockchain/solidity/StableCoin/StableCoin/#4-invariant-test","title":"4 Invariant Test","text":"<p>\u5728\u8fdb\u884cInvariant Test\u4e4b\u524d\u8981\u5148\u8fdb\u884cunit test\u548cintegration test\uff0c\u8fd9\u9879\u76ee\u53ea\u5199\u4e86\u90e8\u5206unit test\uff0c\u5728github repo\u4e2d\u6709\u76f8\u5173\u4ee3\u7801https://github.com/YukiJuda111/StableCoin/blob/main/test/unit/DSCEngineTest.t.sol</p> <p>Invariant Test\u4ee3\u7801\u4e5f\u5728repo\u4e2dhttps://github.com/YukiJuda111/StableCoin/blob/main/test/fuzz/InvariantsTest.t.sol</p> <p>\u5728Invariant Test\u4e2d\uff0c\u4e3b\u8981\u8003\u8651\u4e86\u6a21\u578b\u4fdd\u6301over-collateralized\uff0c\u5373\u6211\u4eec\u9700\u8981\u5224\u65ad\u5408\u7ea6\u4e2d\u5b58\u50a8\u7684\u8d28\u62bc\u7269\u7684\u4ef7\u503c &gt; minted DSC\u7684\u4ef7\u503c\uff0c<code>assert (wethValue + wbtcValue &gt;= totalSupply);</code>\u3002</p> <p>Foundry\u6846\u67b6\u4e2d\u7684<code>StdInvariant</code>\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u8fdb\u884cInvariant Test:</p> <ol> <li> <p>\u5148\u51b3\u5b9a\u9700\u8981\u9891\u7e41\u8c03\u7528\u7684<code>DscEngine</code>\u7684\u51fd\u6570\uff1a</p> </li> <li> <p>depositCollateral</p> </li> <li>mintDsc</li> <li> <p>redeemCollateral</p> </li> <li> <p>\u8bbe\u8ba1\u7b56\u7565\u8ba9\u4e0a\u9762\u4e09\u4e2a\u51fd\u6570\u8c03\u7528\u7684token\u5730\u5740\u4ece<code>weth</code>\u548c<code>wbtc</code>\u5730\u5740\u4e2d\u9009\u62e9</p> </li> </ol> <pre><code>function _getCollateralFromSeed(uint256 collateralSeed) private view returns(ERC20Mock) {\n    if(collateralSeed % 2 == 0){\n        return weth;\n    } else {\n        return wbtc;\n    }\n}\n</code></pre> <ol> <li>\u8bb0\u5f55\u6bcf\u6b21\u8c03\u7528depositCollateral\u65f6\u7531Invariant Test \u4ea7\u751f\u7684<code>msg.sender</code>\u7684\u5730\u5740\uff0c\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4fdd\u8bc1\u968f\u673a\u4ea7\u751f\u7684mintDsc\u7684sender\u5df2\u7ecf\u8d28\u62bc\u8fc7\u4e00\u5b9a\u6570\u91cf\u7684weth/wbtc</li> </ol> <pre><code>function depositCollateral(uint256 collateralSeed, uint256 amountCollateral) public {\n     ...\n    // \u53ef\u80fd\u6709\u7528\u6237\u91cd\u590dpush\n    usersWithCollateralDeposited.push(msg.sender);\n}\n</code></pre> <pre><code>function mintDsc(uint256 amount, uint256 addressSeed) public {\n    if(usersWithCollateralDeposited.length == 0){\n        return;\n    }\n    address sender = usersWithCollateralDeposited[addressSeed % usersWithCollateralDeposited.length];\n     ...\n}\n</code></pre> <ol> <li>Do Invariant Test !!!</li> </ol> <pre><code>function invariant_protocolMustHaveMoreValueThanTotalSupply() public view {\n    uint256 totalSupply = dsc.totalSupply();\n    uint256 totalWethDeposited = IERC20(weth).balanceOf(address(dscEngine));\n    uint256 totlWbtcDeposited = IERC20(wbtc).balanceOf(address(dscEngine)); // fix bug\n    // console.log(\"Deposited weth: \", totalWethDeposited);\n    // console.log(\"Deposited wbtc: \", totlWbtcDeposited);\n    uint256 wethValue = dscEngine.getUsdValue(weth, totalWethDeposited);\n    uint256 wbtcValue = dscEngine.getUsdValue(wbtc, totlWbtcDeposited);\n\n    console.log(\"Total Supply: \", totalSupply);\n    console.log(\"Total Weth Deposited: \", totalWethDeposited);\n    console.log(\"Total Wbtc Deposited: \", totlWbtcDeposited);\n    assert (wethValue + wbtcValue &gt;= totalSupply);\n}\n</code></pre>"},{"location":"blockchain/solidity/StableCoin/StableCoin%E5%8E%9F%E7%90%86/","title":"StableCoin Defi\u590d\u76d8","text":""},{"location":"blockchain/solidity/StableCoin/StableCoin%E5%8E%9F%E7%90%86/#stablecoin","title":"StableCoin\u5206\u7c7b","text":""},{"location":"blockchain/solidity/StableCoin/StableCoin%E5%8E%9F%E7%90%86/#pegged-stablecoin","title":"pegged stablecoin","text":"<ul> <li>A pegged stablecoin is a stablecoin that is pegged to a specific value, such as the US dollar.</li> <li>The value of a pegged stablecoin is maintained by a central authority, which holds reserves of the asset that the stablecoin is pegged to. Example: USDT, USDC</li> </ul>"},{"location":"blockchain/solidity/StableCoin/StableCoin%E5%8E%9F%E7%90%86/#floating-stablecoin","title":"floating stablecoin","text":"<ul> <li>A floating stablecoin is a stablecoin that is not pegged to a specific value.</li> <li>The value of a floating stablecoin is determined by the market, and can fluctuate based on supply and demand. </li> </ul>"},{"location":"blockchain/solidity/StableCoin/StableCoin%E5%8E%9F%E7%90%86/#algorithmic-stablecoin","title":"algorithmic stablecoin","text":"<ul> <li>An algorithmic stablecoin is a stablecoin that uses an algorithm to maintain its value.</li> </ul>"},{"location":"blockchain/solidity/StableCoin/StableCoin%E5%8E%9F%E7%90%86/#governed-stablecoin","title":"governed stablecoin","text":"<ul> <li>A governed stablecoin is a stablecoin that is governed by a decentralized community of stakeholders.</li> </ul>"},{"location":"blockchain/solidity/StableCoin/StableCoin%E5%8E%9F%E7%90%86/#collateralized-stablecoin","title":"collateralized stablecoin","text":"<ul> <li>The deposit of collateral is always greater than the minted stable coin</li> </ul>"},{"location":"blockchain/solidity/StableCoin/depositAndMint/","title":"depositAndMint","text":""},{"location":"blockchain/solidity/StableCoin/depositAndMint/#dscengine","title":"DscEngine \u8d28\u62bc\u5e76\u94f8\u9020\u7a33\u5b9a\u5e01","text":""},{"location":"blockchain/solidity/StableCoin/depositAndMint/#_1","title":"\u76ee\u6807","text":"<p>\u7c7b\u4f3c\u4e0eDAI\u7684stablecoin\uff1a</p> <ol> <li>Relative Stability: Pegged -&gt; 1USD</li> <li>Chainlink PriceFeed</li> <li>Set a function to exchange ETH &amp; BTC -&gt; USD</li> <li>Stability Mechanism: Algorithmic (Decentralized)</li> <li>People can only mint the stablecoin with enough collateral</li> <li>Collateral: Exogenous (Crypto)</li> <li>wETH</li> <li>wBTC</li> </ol>"},{"location":"blockchain/solidity/StableCoin/depositAndMint/#dscengine_1","title":"DscEngine","text":"<p>Defi\u7684\u4e3b\u8981\u903b\u8f91\u7531<code>DscEngin.sol</code>\u5b9e\u73b0\uff1a</p> <ul> <li>\u6784\u9020\u51fd\u6570</li> <li>\u8d28\u62bc</li> </ul>"},{"location":"blockchain/solidity/StableCoin/depositAndMint/#_2","title":"\u6784\u9020\u51fd\u6570","text":"<p>\u5728\u90e8\u7f72\u5408\u7ea6\u65f6\uff0c\u7531\u5916\u90e8\u63d0\u4f9b\u8d28\u62bc\u4ee3\u5e01\u5730\u5740\uff0c\u5582\u4ef7\u5730\u5740\u548ctoken\u5730\u5740(\u9700\u8981\u5148\u90e8\u7f72token\u518d\u90e8\u7f72engine)\u3002\u8d28\u62bc\u7684\u4ee3\u5e01\u91c7\u7528:weth,wbtc\u3002</p> <pre><code>constructor(address[] memory tokenAddresses, address[] memory priceFeedAddresses, address dscAddress) {\n    if (tokenAddresses.length != priceFeedAddresses.length) {\n        revert DSCEngine__TokenAddressAndPriceFeedAddressMustBeEqualLength();\n    }\n    for (uint256 i = 0; i &lt; tokenAddresses.length; i++) {\n        s_priceFeeds[tokenAddresses[i]] = priceFeedAddresses[i];\n        s_collateralTokens.push(tokenAddresses[i]);\n    }\n    i_dsc = DecentralizedStableCoin(dscAddress);\n}\n</code></pre>"},{"location":"blockchain/solidity/StableCoin/depositAndMint/#_3","title":"\u8d28\u62bc","text":"<p>\u4f20\u5165\u8d28\u62bc\u4ee3\u5e01\u7684\u5730\u5740\uff0c\u56e0\u4e3aweth\u548cwbtc\u91c7\u7528ERC20\u6807\u51c6\uff0c\u53ef\u4ee5\u901a\u8fc7IERC20\u7684\u63a5\u53e3\u53d1\u9001\u51fd\u6570\u7b7e\u540d\u53bb\u8c03\u7528\u3002\u540c\u65f6\u7528<code>s_collateralDeposited</code>\u53bb\u8bb0\u5f55\u6bcf\u4e2a\u7528\u6237\u7684\u8d28\u62bc\u4ee3\u5e01\u6570\u91cf\u3002</p> <pre><code>mapping(address user =&gt; mapping(address token =&gt; uint256 amount)) private s_collateralDeposited;\n</code></pre> <pre><code>function depositCollateral(address tokenCollateral, uint256 amoutCollateral)\n    external\n    moreThanZero(amoutCollateral)\n    isAllowedToken(tokenCollateral)\n    nonReentrant // \u4e0d\u53ef\u91cd\u5165(more gas fee, safer)\n{\n    s_collateralDeposited[msg.sender][tokenCollateral] += amoutCollateral;\n    emit CollateralDeposited(msg.sender, tokenCollateral, amoutCollateral);\n    bool success = IERC20(tokenCollateral).transferFrom(msg.sender, address(this), amoutCollateral);\n    if(!success) {\n        revert DSCEngine__TransferFailed();\n    }\n}\n</code></pre>"},{"location":"blockchain/solidity/StableCoin/depositAndMint/#dsc","title":"\u94f8\u9020DSC","text":""},{"location":"blockchain/solidity/StableCoin/depositAndMint/#mintdsc","title":"mintDsc","text":"<p>\u8c03\u7528\u521a\u624d\u81ea\u5df1\u7f16\u5199\u7684ERC20 Token\u7684<code>mint</code>\u6765\u94f8\u9020DSC\u3002</p> <pre><code>function mintDsc(uint256 amountDscToMint)\n    external \n    moreThanZero(amountDscToMint)\n    nonReentrant\n{\n    s_dscMinted[msg.sender] += amountDscToMint;\n    // if minted too much, revert(e.g. $150 DSC, $100 collateral)\n    _revertIfHealthFactorIsBroken(msg.sender);\n    bool minted = i_dsc.mint(msg.sender, amountDscToMint);\n    if(!minted){\n        revert DSCEngine__MintFailed();\n    }\n}\n</code></pre> <p>\u8fd9\u91cc\u6709\u4e00\u5c42\u903b\u8f91\u5224\u65ad\uff0c\u8981\u4fdd\u8bc1\u7528\u6237\u7684HealthFactor\u662f\u6b63\u5e38\u7684\uff0c\u5373\u786e\u4fdd\u7528\u6237\u6ca1\u6709\u4ec5\u5b58\u5165\u4e00\u70b9\u8d28\u62bc\u7269\u5374\u94f8\u9020\u5f88\u591aDSC\u7684\u60c5\u51b5\uff0c\u672c\u6587\u4e2d\u7684HealthFactor\u662f200%\uff0c\u5373\u94f8\u9020$100 DSC\u81f3\u5c11\u9700\u8981$200 \u8d28\u62bc\u7269\u3002</p>"},{"location":"blockchain/solidity/StableCoin/depositAndMint/#_revertifhealthfactorisbroken","title":"_revertIfHealthFactorIsBroken","text":"<p>\u5728<code>mintDsc</code>\u4e2d\u7528\u5230\u7684\u51fd\u6570</p> <pre><code>function _revertIfHealthFactorIsBroken(address user) internal view {\n    uint256 userHealthFactor = _healthFactor(user);\n    if (userHealthFactor &lt; MIN_HEALTH_FACTOR) {\n        revert DSCEngine__BreaksHealthFactor(userHealthFactor);\n    }\n}\n</code></pre>"},{"location":"blockchain/solidity/StableCoin/depositAndMint/#_healthfactor","title":"_healthFactor","text":"<p>\u5728\u5224\u65ad<code>healthFactor</code>\u65f6\uff0c\u5bf9\u6bd4\u7528\u6237\u7684dsc\u548c\u8d28\u62bc\u7269\u7684\u4ef7\u503c\u5373\u53ef(200%)\u3002\u8fd9\u91cc\u8bbe\u8ba1\u5c0f\u6570\u8ba1\u7b97\uff0c\u5728solidity\u4e2d\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u3002</p> <pre><code>function _healthFactor(address user) private view returns (uint256) {\n    // total DSC minted\n    // total collateral deposited\n    (uint256 totalDscMinted, uint256 totalCollateralInUsd) = _getAccountInformation(user);\n    uint256 collateralAdjustedForThreshold = totalCollateralInUsd * LIQUIDATION_THRESHOLD / LIQUIDATION_PRECISION;\n    // 200% over-collateralized\n    return (collateralAdjustedForThreshold * PRECISON) / totalDscMinted;\n}\n</code></pre> <p>\u4e3a\u4e86\u83b7\u5f97\u8d28\u62bc\u7269\u7684\u4ef7\u503c\uff0c\u6211\u4eec\u8981\u7528\u4e0apricefeed\u3002</p>"},{"location":"blockchain/solidity/StableCoin/depositAndMint/#pricefeed","title":"priceFeed","text":"<p>\u7701\u7565\u4e86\u90e8\u5206\u4ecehealthfactor\u5230pricefeed\u7684\u903b\u8f91\uff0c\u91cd\u70b9\u662f\u4f7f\u7528\u4e86chainlink\u7684<code>AggregatorV3</code>\u7684\u63a5\u53e3\uff0c\u7ed9\u51fa\u4e86\u67d0\u4e00token\u7684pricefeed\u5730\u5740\uff0c\u8c03\u7528<code>latestRoundData</code>\u6765\u83b7\u53d6price\u3002\u4ecechainlink\u8fd4\u56de\u7684price\u662f8\u4f4d\u5c0f\u6570\uff0c\u4e5f\u8981\u6ce8\u610f\u5c0f\u6570\u8ba1\u7b97\u3002</p> <pre><code>function getUsdValue(address token, uint256 amount) public view returns(uint256) {\n    AggregatorV3Interface priceFeed = AggregatorV3Interface(s_priceFeeds[token]);\n    ( , int price, , , ) = priceFeed.latestRoundData();\n    // \u4ecechainlink\u8fd4\u56de\u7684\u4ef7\u683c\u662f8\u4f4d\u5c0f\u6570\n    return uint256(price) * ADDITIONAL_FEED_PRECISION * amount / PRECISON;\n}\n</code></pre>"},{"location":"blockchain/solidity/StableCoin/dsc/","title":"Dsc","text":""},{"location":"blockchain/solidity/StableCoin/dsc/#_1","title":"\u5b9e\u73b0\u7a33\u5b9a\u5e01\u5408\u7ea6","text":"<p>\u7a33\u5b9a\u5e01\u7528\u4e86ERC20\u6807\u51c6\uff0c\u91c7\u7528\u4e86openzeppelin\u5e93\u6765\u5feb\u901f\u5b9e\u73b0\u3002</p>"},{"location":"blockchain/solidity/StableCoin/dsc/#erc20","title":"ERC20\u7a33\u5b9a\u5e01","text":"<p>\u63d0\u4f9b<code>mint</code>\u548c<code>burn</code>\u63a5\u53e3\uff0c\u4f9b<code>DscEngine</code>\u4f7f\u7528</p> <ul> <li><code>mint</code>: \u5728\u903b\u8f91\u4e0a\u8d1f\u8d23\u94f8\u9020token\uff0c<code>_mint</code>\u8c03\u7528\u8d1f\u8d23\u5c06token\u4ece<code>0x0</code>\u53d1\u9001\u5230\u6307\u5b9a\u5730\u5740(user)</li> </ul> <pre><code>function mint(address _to, uint256 _amount) external onlyOwner returns (bool) {\n    if (_to == address(0)) {\n        revert DecentralizedStableCoin__NotZeroAddress();\n    }\n    if (_amount &lt;= 0) {\n        revert DecentralizedStableCoin__MustBeMoreThanZero();\n    }\n    _mint(_to, _amount);\n    return true;\n}\n</code></pre> <ul> <li><code>burn</code>: \u5728\u903b\u8f91\u4e0a\u8d1f\u8d23\u9500\u6bc1token\uff0c<code>_burn</code>\u8c03\u7528\u672c\u8d28\u4e0a\u8bb2<code>msg.sender</code>\u7684token\u8fd8\u7ed9<code>0x0</code></li> </ul> <pre><code>function mint(address _to, uint256 _amount) external onlyOwner returns (bool) {\n    if (_to == address(0)) {\n        revert DecentralizedStableCoin__NotZeroAddress();\n    }\n    if (_amount &lt;= 0) {\n        revert DecentralizedStableCoin__MustBeMoreThanZero();\n    }\n    _mint(_to, _amount);\n    return true;\n}\n</code></pre> <p>1</p>"}]}